{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>\u200b\u8bbf\u95ee\u200b\u6211\u200b https://github.com/isnthzy</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/","title":"Chisel \u200b\u4e2d\u6587\u200b\u6559\u7a0b","text":"<ul> <li>Chisel \u200b\u6570\u636e\u7c7b\u578b\u200b\uff08Chisel Data Types\uff09<ul> <li>\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff08Casting\uff09</li> <li>\u200b\u6a21\u62df\u200b/\u200b\u9ed1\u76d2\u200b\u7c7b\u578b\u200b\uff08Analog/BlackBox type\uff09</li> </ul> </li> <li>Bundles and Vecs<ul> <li>\u200b\u7ffb\u8f6c\u200b Bundles - Flipping Bundles</li> <li>MixedVec</li> </ul> </li> <li>\u200b\u7ec4\u5408\u200b\u7535\u8def\u200b\uff08Combinational Circuits\uff09<ul> <li>\u200b\u5bfc\u7ebf\u200b\uff08Wires\uff09</li> </ul> </li> <li>\u200b\u64cd\u4f5c\u7b26\u200b\uff08Opretors\uff09</li> <li>\u200b\u4f4d\u200b\u5bbd\u200b\u63a8\u65ad\u200b\uff08Width Inference\uff09</li> <li>\u200b\u51fd\u6570\u200b\u62bd\u8c61\u200b\uff08Functional Abstraction\uff09</li> <li>\u200b\u7aef\u53e3\u200b\uff08Ports\uff09<ul> <li>\u200b\u68c0\u67e5\u200b\u6a21\u5757\u200b\u7aef\u53e3\u200b\uff08Inspecting Module ports\uff09</li> </ul> </li> <li>\u200b\u6a21\u5757\u200b\uff08Modules\uff09<ul> <li>\u200b\u6a21\u5757\u200b\u5c42\u6b21\u200b\uff08Module Hierarchy\uff09</li> <li>RawModule</li> </ul> </li> <li>\u200b\u65f6\u5e8f\u7535\u8def\u200b\uff08Sequential Circuits\uff09</li> <li>\u200b\u5b58\u50a8\u200b\uff08Memories\uff09<ul> <li>ROM</li> <li>\u200b\u8bfb\u5199\u200b\u5b58\u50a8\u200b\uff08Read-Write Memories\uff09<ul> <li>\u200b\u540c\u6b65\u200b\u8bfb\u200b RAM SyncReadMem\uff1a\u200b\u540c\u6b65\u200b\u8bfb\u53d6\u200b\uff0c\u200b\u540c\u6b65\u200b\u5199\u5165\u200b</li> <li>\u200b\u8bfb\u200b\u7aef\u53e3\u200b/\u200b\u5199\u200b\u7aef\u53e3\u200b\uff08Read port/write port\uff09</li> <li>\u200b\u5355\u200b\u7aef\u53e3\u200b\uff08Single-ported\uff09</li> <li>Mem: \u200b\u5f02\u6b65\u200b\u8bfb\u53d6\u200b\uff0c\u200b\u540c\u6b65\u200b\u5199\u5165\u200b</li> </ul> </li> <li>\u200b\u63a9\u7801\u200b\uff08Masks\uff09</li> <li>\u200b\u5b58\u50a8\u200b\u521d\u59cb\u5316\u200b\uff08Memory Initialization\uff09</li> </ul> </li> <li>\u200b\u63a5\u53e3\u200b\u548c\u200b\u8fde\u63a5\u200b\uff08Interfaces &amp; Connections\uff09<ul> <li>\u200b\u7aef\u53e3\u200b\uff1a\u200b\u5b50\u7c7b\u200b\u548c\u200b\u7f51\u7edc\u200b\uff08Ports: Subclasses &amp; Nesting\uff09</li> <li>Bundle Vectors</li> <li>\u200b\u6279\u91cf\u200b\u8fde\u63a5\u200b\uff08Bulk Connections\uff09</li> <li>MonoConnect Algorithm</li> <li>BiConnect Algorithm</li> <li>The standard ready-valid interface (ReadyValidIO / Decoupled)</li> </ul> </li> <li>BlackBoxes<ul> <li>\u200b\u53c2\u6570\u200b\u5316\u200b</li> <li>\u200b\u63d0\u4f9b\u200b\u5b9e\u73b0\u200b\u7684\u200b BlackBoxes</li> <li>Verilog \u200b\u5728\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b BlackBoxes</li> <li>\u200b\u5185\u8054\u200b Verilog \u200b\u7684\u200b BlackBoxes</li> <li>\u200b\u5f15\u64ce\u200b\u4e4b\u4e0b\u200b</li> </ul> </li> <li>Chisel \u200b\u679a\u4e3e\u200b\uff08ChiselEnum\uff09<ul> <li>\u200b\u529f\u80fd\u200b\u548c\u200b\u793a\u4f8b\u200b</li> <li>\u200b\u7c7b\u578b\u8f6c\u6362\u200b</li> <li>\u200b\u6d4b\u8bd5\u200b</li> <li>\u200b\u89e3\u51b3\u95ee\u9898\u200b</li> <li>\u200b\u5176\u4ed6\u200b\u8d44\u6e90\u200b</li> </ul> </li> <li>DataView<ul> <li>\u200b\u4ecb\u7ecd\u200b</li> <li>\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\uff08AXI4\uff09</li> <li>\u200b\u5176\u4ed6\u200b\u793a\u4f8b\u200b</li> <li>\u200b\u5143\u7ec4\u200b\uff08Tuple\uff09</li> <li>\u200b\u5b8c\u5168\u200b\u7684\u200b\u548c\u200b\u90e8\u5206\u200b\u7684\u200b DataView</li> <li>\u200b\u8fdb\u9636\u200b\u7ec6\u8282\u200b<ul> <li>Type \u200b\u7c7b\u200b</li> <li>implicit \u200b\u89e3\u6790\u200b<ul> <li>implicit \u200b\u89e3\u6790\u200b\u793a\u4f8b\u200b</li> </ul> </li> </ul> </li> <li>DataProduct</li> </ul> </li> <li>\u200b\u529f\u80fd\u6a21\u5757\u200b\u521b\u5efa\u200b\uff08Function Module Creation\uff09</li> <li>\u200b\u591a\u8def\u590d\u7528\u200b\u5668\u200b\u548c\u200b\u8f93\u5165\u200b\u9009\u62e9\u200b\uff08Muxes and Input Selection\uff09<ul> <li>Mux</li> <li>MuxCase</li> <li>MuxLookup</li> <li>Mux1H</li> </ul> </li> <li>\u200b\u591a\u200b\u65f6\u949f\u200b\u57df\u200b\uff08Multiple Clock Domains\uff09</li> <li>\u200b\u590d\u4f4d\u200b\uff08Reset\uff09<ul> <li>\u200b\u590d\u4f4d\u200b\u63a8\u65ad\u200b</li> <li>\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b<ul> <li>\u200b\u8bbe\u7f6e\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u7c7b\u578b\u200b</li> </ul> </li> <li>\u200b\u4e0e\u200b\u590d\u4f4d\u200b\u65e0\u5173\u200b\u7684\u200b\u4ee3\u7801\u200b\uff08Reset-Agnostic Code\uff09</li> <li>\u200b\u5f3a\u5236\u200b\u590d\u4f4d\u200b\u7c7b\u578b\u200b\uff08Forcing Reset Type\uff09</li> <li>\u200b\u6700\u540e\u200b\u8fde\u63a5\u200b\u8bed\u4e49\u200b\uff08Last-Connect Semantics\uff09</li> </ul> </li> <li>\u200b\u591a\u6001\u200b\u4e0e\u200b\u53c2\u6570\u200b\u5316\u200b\uff08Polymorphism and Parameterization\uff09<ul> <li>\u200b\u53c2\u6570\u200b\u5316\u200b\u51fd\u6570\u200b</li> <li>\u200b\u53c2\u6570\u200b\u5316\u7c7b\u200b</li> <li>\u200b\u57fa\u4e8e\u200b\u6a21\u5757\u200b\u7684\u200b\u53c2\u6570\u200b\u5316\u200b</li> </ul> </li> <li>\u200b\u5728\u200b Chisel \u200b\u4e2d\u200b\u6253\u5370\u200b\uff08Printing in Chisel\uff09<ul> <li>Scala \u200b\u98ce\u683c\u200b<ul> <li>\u200b\u7b80\u5355\u200b\u7684\u200b\u683c\u5f0f\u5316\u200b</li> <li>\u200b\u805a\u5408\u200b\u6570\u636e\u7c7b\u578b\u200b</li> <li>\u200b\u81ea\u5b9a\u4e49\u200b\u6253\u5370\u200b</li> </ul> </li> <li>C \u200b\u98ce\u683c\u200b</li> </ul> </li> <li>\u200b\u547d\u540d\u200b\uff08Naming\uff09<ul> <li>\u200b\u7f16\u8bd1\u200b\u63d2\u4ef6\u200b<ul> <li>\u200b\u524d\u7f00\u200b</li> <li>Suggest a Signal\u2019s Name (or the instance name of a Module)</li> <li>\u201cUnnamed signals\u201d \u200b\u7684\u200b\u884c\u4e3a\u200b\uff08\u200b\u53c8\u540d\u200b \u201cTemporaries\u201d\uff09</li> <li>\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u540d\u79f0\u200b</li> </ul> </li> <li>\u200b\u6620\u5c04\u200b\u547d\u540d\u200b</li> <li>@chiselName</li> </ul> </li> <li>\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u7ebf\u200b\uff08Unconnected Wires\uff09<ul> <li>API</li> <li>\u200b\u786e\u5b9a\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u5143\u7d20\u200b</li> </ul> </li> <li>Chisel \u200b\u7c7b\u578b\u200b vs Scala \u200b\u7c7b\u578b\u200b<ul> <li>Scala \u200b\u7c7b\u578b\u200b vs Chisel \u200b\u7c7b\u578b\u200b vs \u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b</li> <li>Chisel \u200b\u7c7b\u578b\u200b vs \u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b vs \u200b\u5b57\u7b26\u200b</li> <li>Chisel Type vs Hardware \u2013 Specific Functions and Errors</li> </ul> </li> <li>\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08Connectable Operators\uff09<ul> <li>\u200b\u672f\u8bed\u200b</li> <li>\u200b\u6982\u8ff0\u200b</li> <li>\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u7ffb\u8f6c\u200b\u4e0e\u200b\u5bf9\u9f50\u200b</li> <li>\u200b\u8f93\u5165\u200b/\u200b\u8f93\u51fa\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u5b8c\u5168\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u7ec4\u4ef6\u200b<ul> <li>\u200b\u5355\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:=\uff09</li> </ul> </li> <li>\u200b\u4f7f\u7528\u200b\u6df7\u5408\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u7ec4\u4ef6\u200b<ul> <li>\u200b\u53cc\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:&lt;&gt;=\uff09</li> <li>\u200b\u7aef\u53e3\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\u4e0e\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b</li> <li>\u200b\u5bf9\u9f50\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b (:&lt;=)</li> <li>\u200b\u7ffb\u8f6c\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:&gt;=\uff09</li> <li>\u200b\u5f3a\u5236\u200b\u5355\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:#=\uff09</li> </ul> </li> <li>Connectable<ul> <li>\u200b\u8fde\u63a5\u200b Records</li> <li>waived \u200b\u8fde\u63a5\u200b\u7684\u200b\u9ed8\u8ba4\u200b</li> <li>\u200b\u4e0e\u200b\u53ef\u9009\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u603b\u662f\u200b\u5ffd\u7565\u200b\u7531\u200b\u989d\u5916\u200b\u6210\u5458\u200b\uff08\u200b\u90e8\u5206\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff09\u200b\u9020\u6210\u200b\u7684\u200b\u9519\u8bef\u200b</li> <li>\u200b\u8fde\u63a5\u200b\u4e0d\u540c\u200b\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u7ec4\u4ef6\u200b</li> <li>\u200b\u5728\u200b\u53ef\u200b\u8fde\u63a5\u200b\u7684\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u7b26\u200b\u4e2d\u200b\u6392\u9664\u200b\u4efb\u4f55\u200b\u6210\u5458\u200b</li> <li>\u200b\u8fde\u63a5\u7ed3\u6784\u200b\u4e0a\u200b\u4e0d\u200b\u76f8\u7b49\u200b\u7684\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u6280\u672f\u200b</li> </ul> </li> <li>\u200b\u4f7f\u7528\u200b\u51b2\u7a81\u200b\u7684\u200b\u540d\u79f0\u200b\u8fde\u63a5\u200b\u540c\u4e00\u200b\u8d85\u7c7b\u200b\u7684\u200b\u4e0d\u540c\u200b\u5b50\u7c7b\u200b<ul> <li>\u200b\u901a\u8fc7\u200b\u5ffd\u7565\u200b\u591a\u4f59\u200b\u7684\u200b\u6210\u5458\u200b\u5c06\u200b\u5b50\u7c7b\u200b\u4e0e\u200b\u8d85\u7c7b\u200b\u8fde\u63a5\u200b</li> <li>\u200b\u8fde\u63a5\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u7c7b\u200b</li> </ul> </li> <li>FAQ</li> </ul> </li> <li>\u200b\u8bd1\u7801\u5668\u200b\uff08Decoders\uff09<ul> <li>\u200b\u57fa\u672c\u200b\u8bd1\u7801\u5668\u200b</li> <li>DecoderTable</li> </ul> </li> <li>Intrinsics<ul> <li>\u200b\u53c2\u6570\u200b\u5316\u200b</li> <li>Example</li> </ul> </li> <li>Annotations</li> <li>\u200b\u6e90\u200b\u5b9a\u4f4d\u5668\u200b\uff08Source Locators\uff09</li> <li>\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b<ul> <li>\u200b\u5b9e\u9a8c\u200b\u8bbe\u7f6e\u200b</li> <li>\u200b\u6982\u5ff5\u200b 1\uff1a&lt;&gt; \u200b\u662f\u200b\u53ef\u200b\u4ea4\u6362\u200b\u7684\u200b<ul> <li>\u200b\u7ed3\u8bba\u200b\uff1a</li> </ul> </li> <li>\u200b\u6982\u5ff5\u200b 2\uff1a:= \u200b\u8868\u793a\u200b\u5206\u914d\u200b\u6765\u81ea\u200b RHS \u200b\u7684\u200b\u6240\u6709\u200b LHS \u200b\u4fe1\u53f7\u200b\uff0c\u200b\u65e0\u8bba\u200b LHS \u200b\u4e0a\u200b\u7684\u200b\u65b9\u5411\u200b\u5982\u4f55\u200b\u3002<ul> <li>\u200b\u7ed3\u8bba\u200b\uff1a</li> </ul> </li> <li>\u200b\u6982\u5ff5\u200b 3\uff1a\u200b\u603b\u662f\u200b\u4f7f\u7528\u200b := \u200b\u6765\u200b\u628a\u200b DontCare \u200b\u8d4b\u503c\u200b\u7ed9\u200b Wires<ul> <li>\u200b\u7ed3\u8bba\u200b\uff1a</li> </ul> </li> <li>\u200b\u6982\u5ff5\u200b4\uff1a\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b &lt;&gt; \u200b\u6216\u200b := \u200b\u5c06\u200b DontCare \u200b\u5206\u914d\u200b\u7ed9\u200b\u6709\u200b\u5411\u200b\u7684\u200b\u4e8b\u7269\u200b\uff08IOs\uff09<ul> <li>\u200b\u7ed3\u8bba\u200b\uff1a</li> </ul> </li> <li>\u200b\u6982\u5ff5\u200b5\uff1a&lt;&gt; \u200b\u5728\u200b\u81f3\u5c11\u200b\u4e00\u4e2a\u200b\u5df2\u77e5\u200b\u6d41\u5411\u200b\uff08IO \u200b\u6216\u5b50\u200b\u6a21\u5757\u200b\u7684\u200b IO\uff09\u200b\u7684\u200b\u4e8b\u7269\u200b\u4e4b\u95f4\u200b\u8d77\u200b\u4f5c\u7528\u200b\u3002<ul> <li>\u200b\u7ed3\u8bba\u200b\uff1a</li> </ul> </li> <li>\u200b\u6982\u5ff5\u200b6\uff1a&lt;&gt; \u200b\u548c\u200b := \u200b\u6309\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b\u8fde\u63a5\u200b\u4fe1\u53f7\u200b\u3002<ul> <li>\u200b\u7ed3\u8bba\u200b\uff1a</li> </ul> </li> </ul> </li> </ul>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel-chisel-data-types","title":"Chisel \u200b\u6570\u636e\u7c7b\u578b\u200b\uff08Chisel Data Types\uff09","text":"<p>Chisel \u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u7528\u6765\u200b\u6307\u4ee3\u200b\u4fdd\u6301\u200b\u5728\u200b\u72b6\u6001\u200b\u5143\u7d20\u200b\u4e2d\u200b\u6216\u200b\u5728\u200b\u5bfc\u7ebf\u200b\u4e0a\u200b\u6d41\u52a8\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u867d\u7136\u200b\u786c\u4ef6\u200b\u8bbe\u8ba1\u200b\u662f\u200b\u5728\u200b\u64cd\u4f5c\u200b\u4e8c\u8fdb\u5236\u200b\u6570\u200b\u7684\u200b\u5411\u91cf\u200b\uff0c\u200b\u4f46\u200b\u66f4\u200b\u62bd\u8c61\u200b\u7684\u200b\u8868\u793a\u200b\u5b83\u4eec\u200b\u7684\u200b\u503c\u200b\u4f7f\u5f97\u200b\u89c4\u8303\u200b\u66f4\u200b\u6e05\u6670\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u5de5\u5177\u200b\u751f\u6210\u200b\u4f18\u5316\u200b\u66f4\u597d\u200b\u7684\u200b\u7535\u8def\u200b\u3002\u200b\u5728\u200b Chisel \u200b\u4e2d\u200b\uff0c\u200b\u4f4d\u200b\u7684\u200b\u539f\u59cb\u200b\u96c6\u5408\u200b\u7528\u200b <code>bits</code> \u200b\u7c7b\u578b\u200b\u6765\u200b\u8868\u793a\u200b\u3002\u200b\u6709\u200b\u7b26\u53f7\u200b\u548c\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u88ab\u200b\u8ba4\u4e3a\u200b\u662f\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u5b50\u96c6\u200b\uff0c\u200b\u5206\u522b\u200b\u4f7f\u7528\u200b <code>SInt</code> \u200b\u548c\u200b <code>UInt</code> \u200b\u6765\u200b\u8868\u793a\u200b\u3002\u200b\u6709\u200b\u7b26\u53f7\u200b\u6d6e\u70b9\u6570\u200b\uff0c\u200b\u5305\u62ec\u200b\u6574\u6570\u200b\u7528\u200b\u4e8c\u8fdb\u5236\u200b\u8865\u7801\u200b\u5f62\u5f0f\u200b\u8868\u793a\u200b\u3002\u200b\u5e03\u5c14\u503c\u200b\u7528\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u8868\u793a\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\u8fd9\u4e9b\u200b\u7c7b\u578b\u200b\u548c\u200b Scala \u200b\u7684\u200b\u5185\u7f6e\u200b\u683c\u5f0f\u200b\uff0c\u200b\u6bd4\u5982\u200b<code>Int</code>\uff0c<code>Boolean</code> \u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u3002</p> <p>\u200b\u53e6\u5916\u200b\uff0cChisel \u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>Bundels</code> \u200b\u6765\u200b\u8868\u793a\u200b\u6709\u200b\u547d\u200b\u540d\u5b57\u200b\u6bb5\u200b\u7684\u200b\u503c\u200b\u7684\u200b\u96c6\u5408\u200b\uff08\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5176\u4ed6\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b <code>structs</code> \uff09\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b <code>Vecs</code> \u200b\u6765\u200b\u8868\u793a\u200b\u53ef\u200b\u7d22\u5f15\u200b\u7684\u200b\u503c\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p> <p>Bundels \u200b\u548c\u200b Vecs \u200b\u5c06\u200b\u5728\u200b\u4e0b\u200b\u4e00\u8282\u200b\u4ecb\u7ecd\u200b\u3002</p> <p>\u200b\u5e38\u91cf\u200b\u548c\u200b\u5b57\u7b26\u200b\u503c\u200b\u4f7f\u7528\u200b\u4f20\u9012\u200b\u7ed9\u200b\u4ee5\u4e0b\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b Scala \u200b\u7684\u200b\u6574\u6570\u200b\u548c\u200b\u5b57\u7b26\u4e32\u200b\u6765\u200b\u8868\u793a\u200b\uff1a</p> <pre><code>1.U             // \u200b\u4ece\u200b Scala Int \u200b\u7c7b\u578b\u200b\u4e2d\u200b\u63d0\u53d6\u200b1\u200b\u4f4d\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\n\"ha\".U          // \u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u63d0\u53d6\u200b 1 \u200b\u4f4d\u200b\u5341\u516d\u8fdb\u5236\u200b\u6570\u200b\n\"o12\".U         // \u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u63d0\u53d6\u200b 4 \u200b\u4f4d\u200b\u516b\u8fdb\u5236\u200b\u6570\u200b\n\"b1010\".U       // \u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u63d0\u53d6\u200b 4 \u200b\u4f4d\u200b\u4e8c\u8fdb\u5236\u200b\u6570\u200b\n\n5.S             // \u200b\u4ece\u200b Scala Int \u200b\u7c7b\u578b\u200b\u4e2d\u200b\u63d0\u53d6\u200b 4 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\n-8.S            // \u200b\u4ece\u200b Scala Int \u200b\u7c7b\u578b\u200b\u4e2d\u200b\u63d0\u53d6\u200b\u8d1f\u200b\u7684\u200b 4 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\n5.U             // \u200b\u4ece\u200b Scala Int \u200b\u7c7b\u578b\u200b\u4e2d\u200b\u63d0\u53d6\u200b 3 \u200b\u4f4d\u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\n\n8.U(4.W)        // 4 \u200b\u4f4d\u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\uff0c\u200b\u503c\u4e3a\u200b 8\n-152.S(32.W)    // 32 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\uff0c\u200b\u503c\u4e3a\u200b -152\n\ntrue.B \nfalse.B\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u53ef\u8bfb\u6027\u200b\u53ef\u4ee5\u200b\u5728\u200b\u957f\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4e0b\u5212\u7ebf\u200b\u4f5c\u4e3a\u200b\u5206\u9694\u7b26\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u751f\u6210\u200b\u503c\u65f6\u200b\uff0c\u200b\u4e0b\u5212\u7ebf\u200b\u4f1a\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff0c\u200b\u6bd4\u5982\u200b\uff1a</p> <pre><code>\"h_dead_beef\".U   // UInt \u200b\u7c7b\u578b\u200b\u7684\u200b 32 \u200b\u4f4d\u503c\u200b\n</code></pre> <p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cChisel \u200b\u7684\u200b\u7f16\u8bd1\u5668\u200b\u4e3a\u4e86\u200b\u5c06\u200b\u6bcf\u4e2a\u200b\u5e38\u91cf\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u9700\u8981\u200b\u4fdd\u6301\u200b\u7684\u200b\u6700\u5c0f\u200b\u4e3a\u9f20\u200b\uff0c\u200b\u5305\u62ec\u200b\u7b26\u53f7\u200b\u4f4d\u200b\u548c\u200b\u6709\u200b\u7b26\u53f7\u200b\u7c7b\u578b\u200b\u3002\u200b\u4f4d\u200b\u5bbd\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u6307\u5b9a\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002\uff08.W \u200b\u88ab\u200b\u7528\u6765\u200b\u5c06\u200b Scala Int \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4e00\u4e2a\u200b Chisel \u200b\u5bbd\u5ea6\u200b\uff09</p> <pre><code>\"ha\".asUInt(8.W)      // UInt \u200b\u7c7b\u578b\u200b\u7684\u200b 8 \u200b\u4f4d\u200b\u5341\u516d\u8fdb\u5236\u200b\u6570\u200b\n\"o12\".asUInt(6.W)     // UInt \u200b\u7c7b\u578b\u200b\u7684\u200b 6 \u200b\u4f4d\u200b\u516b\u8fdb\u5236\u200b\u6570\u200b\n\"b1010\".asUInt(12.W)  // UInt \u200b\u7c7b\u578b\u200b\u7684\u200b 12 \u200b\u4f4d\u200b\u4e8c\u8fdb\u5236\u200b\u6570\u200b\n\n5.asSInt(7.W)         // SInt \u200b\u7c7b\u578b\u200b\u7684\u200b 7 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\n5.asUInt(8.W)         // UInt \u200b\u7c7b\u578b\u200b\u7684\u200b 8 \u200b\u4f4d\u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6570\u200b\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200b <code>UInt</code> \u200b\u7c7b\u578b\u200b\uff0c\u200b\u6240\u200b\u9700\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u503c\u200b\u5c06\u200b\u4f1a\u200b\u88ab\u200b 0 \u200b\u62d3\u5c55\u200b\uff1b\u200b\u5bf9\u4e8e\u200b <code>UInt</code> \u200b\u7c7b\u578b\u200b\uff0c\u200b\u6240\u200b\u9700\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u503c\u200b\u5c06\u200b\u4f1a\u200b\u88ab\u200b\u7b26\u53f7\u200b\u62d3\u5c55\u200b\u3002\u200b\u5982\u679c\u200b\u7ed9\u51fa\u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b\u5c0f\u4e8e\u200b\u5b58\u50a8\u200b\u53c2\u6570\u503c\u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b Chisel error\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#casting","title":"\u7c7b\u578b\u8f6c\u6362\u200b\uff08Casting\uff09","text":"<p>\u200b\u6211\u4eec\u200b\u80fd\u591f\u200b\u5728\u200bChisel\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff1a</p> <pre><code>val sint = 3.S(4.W)             // 4 \u200b\u4f4d\u200b SInt\n\nval uint = sint.asUInt          // \u200b\u5c06\u200b SInt \u200b\u8f6c\u6362\u200b\u4e3a\u200b UInt\nuint.asSInt                     // \u200b\u5c06\u200b UInt \u200b\u8f6c\u6362\u200b\u4e3a\u200b SInt\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b\u4e86\u200b\u5bbd\u5ea6\u200b\u7684\u200b <code>asUInt</code>/<code>asSInt</code> \u200b\u4e0d\u80fd\u200b\u88ab\u200b\u7528\u4e8e\u200b Chisel \u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u8f6c\u6362\u200b\u3002\u200b\u4e0d\u200b\u63a5\u53d7\u200b\u4efb\u4f55\u200b\u4f4d\u200b\u5bbd\u200b\u53c2\u6570\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5728\u200b\u8fde\u63a5\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0cChisel \u200b\u4f1a\u200b\u6839\u636e\u200b\u9700\u8981\u200b\u81ea\u884c\u200b\u586b\u5145\u200b\u548c\u200b\u622a\u65ad\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u4e5f\u200b\u80fd\u200b\u5bf9\u200b\u65f6\u949f\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u4f46\u200b\u4f60\u200b\u5e94\u5f53\u200b\u5c0f\u5fc3\u200b\u8fd9\u200b\u4e00\u70b9\u200b\uff0c\u200b\u5e94\u4e3a\u200b\u65f6\u949f\u200b\u9700\u8981\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\uff08\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b ASIC \u200b\u4e2d\u200b\uff09\uff1a</p> <pre><code>val bool: Bool = false.B        // \u200b\u6052\u5b9a\u200b\u4f4e\u200b\u7535\u4f4d\u200b\u5bfc\u7ebf\u200b\nval clock = bool.asClock        // \u200b\u6052\u5b9a\u200b\u4f4e\u200b\u7535\u4f4d\u200b\u65f6\u949f\u200b\n\nclock.asUInt                    // \u200b\u5c06\u200b\u65f6\u949f\u200b\u8f6c\u6362\u200b\u4e3a\u200b UInt \uff08\u200b\u4f4d\u200b\u5bbd\u200b\u4e3a\u200b 1\uff09\nclock.asUInt.asBool             // \u200b\u5c06\u200b\u65f6\u949f\u200b\u8f6c\u6362\u200b\u4e3a\u200b Bool (Chisel 3.2+)\nclock.asUInt.toBool             // \u200b\u5c06\u200b\u65f6\u949f\u200b\u8f6c\u6362\u200b\u4e3a\u200b Bool \uff08\u200b\u53ea\u200b\u5728\u200bChisel 3.0 and 3.1 \u200b\u751f\u6548\u200b\uff09\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#analogblackbox-type","title":"\u6a21\u62df\u200b/\u200b\u9ed1\u76d2\u200b\u7c7b\u578b\u200b\uff08Analog/BlackBox type\uff09","text":"<p>(\u200b\u8bd5\u9a8c\u200b\u7c7b\u578b\u200b, Chisel 3.1+)</p> <p>Chisel \u200b\u652f\u6301\u200b\u80fd\u591f\u200b\u7528\u6765\u200b\u652f\u6301\u200bChisel\u200b\u4efb\u610f\u200b\u7f51\u7edc\u200b\u7684\u200b <code>Analog</code> \u200b\u7c7b\u578b\u200b\uff08\u200b\u7b49\u540c\u4e8e\u200b Verilog \u200b\u4e2d\u200b\u7684\u200b <code>inout</code> \u200b\u7c7b\u578b\u200b\uff09\u3002\u200b\u8fd9\u200b\u5305\u62ec\u200b\u6a21\u62df\u200b\u5bfc\u7ebf\u200b\uff0c\u200b\u4e09\u6001\u200b/\u200b\u53cc\u5411\u200b\u5bfc\u7ebf\u200b\u548c\u200b\u7535\u6e90\u200b\u7f51\u7edc\u200b\uff08\u200b\u5305\u542b\u200b\u5408\u9002\u200b\u7684\u200b\u6ce8\u91ca\u200b\uff09</p> <p><code>Analog</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u65e0\u200b\u65b9\u5411\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6240\u4ee5\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>attach</code> \u200b\u64cd\u4f5c\u7b26\u200b\u5c06\u200b\u591a\u4e2a\u200b <code>Analog</code> \u200b\u7f51\u7edc\u8fde\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u3002\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>&lt;&gt;</code> \u200b\u8fde\u63a5\u200b\u4e00\u6b21\u200b <code>Analog</code> \u200b\u7f51\u7edc\u200b\uff0c\u200b\u4f46\u200b\u8fde\u63a5\u200b\u591a\u6b21\u200b\u662f\u200b\u975e\u6cd5\u64cd\u4f5c\u200b\u3002</p> <pre><code>val a = IO(Analog(1.W))\nval b = IO(Analog(1.W))\nval c = IO(Analog(1.W))\n\n// \u200b\u5408\u6cd5\u200b\nattach(a, b)\nattach(a, c)\n\n// \u200b\u5408\u6cd5\u200b\na &lt;&gt; b\n\n// \u200b\u975e\u6cd5\u200b - \u200b\u591a\u6b21\u200b\u8fde\u63a5\u200b\u4e86\u200b a\na &lt;&gt; b\na &lt;&gt; c\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#bundles-and-vecs","title":"Bundles and Vecs","text":"<p><code>Bundle</code> \u200b\u548c\u200b <code>Vec</code> \u200b\u662f\u200b\u5141\u8bb8\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u7684\u200b\u805a\u5408\u200b\u6765\u200b\u62d3\u5c55\u200b Chisel \u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u7c7b\u200b</p> <p>Bundles \u200b\u5c06\u200b\u4e00\u4e9b\u200b\u53ef\u80fd\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u547d\u200b\u540d\u5b57\u200b\u6bb5\u200b\u96c6\u5408\u200b\u8fdb\u200b\u4e00\u4e2a\u200b\u8fde\u8d2f\u200b\u7684\u200b\u5355\u5143\u200b\u4e2d\u200b\uff0c\u200b\u5f88\u200b\u50cf\u200b C \u200b\u8bed\u8a00\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u200b\u3002\u200b\u7528\u6237\u200b\u901a\u8fc7\u200b\u5c06\u200b\u4ed6\u4eec\u200b\u7684\u200b\u7c7b\u200b\u5b9a\u4e49\u200b\u4e3a\u200b <code>Bundle</code> \u200b\u7684\u200b\u5b50\u7c7b\u200b\u6765\u200b\u5b9a\u4e49\u200b\u81ea\u5df1\u200b\u7684\u200b Boundles\u3002</p> <pre><code>import chisel3._\n\nclass MyFloat extends Bundle {\n  val sign        = Bool()\n  val exponent    = UInt(8.W)\n  val significand = UInt(23.W)\n}\n\nclass ModuleWithFloatWire extends RawModule {\n  val x  = Wire(new MyFloat)\n  val xs = x.sign\n}\n</code></pre> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u8bd5\u9a8c\u200b\u4e2d\u200b\u7684\u200b Bundle Literals \u200b\u529f\u80fd\u200b\u6765\u200b\u521b\u5efa\u200b literal Bundle\u3002</p> <p>Scala \u200b\u7ea6\u5b9a\u200b\u4f7f\u7528\u200b UpperCamleCase \u200b\u4f5c\u4e3a\u200b\u547d\u540d\u200b\u89c4\u8303\u200b\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u4f60\u200b\u5728\u200b Chisel \u200b\u4ee3\u7801\u200b\u4e2d\u200b\u4fdd\u6301\u200b\u8fd9\u4e00\u200b\u89c4\u8303\u200b\u3002</p> <p>Vecs \u200b\u521b\u5efa\u200b\u5143\u7d20\u200b\u7684\u200b\u53ef\u200b\u7d22\u5f15\u200b\u7684\u200b\u5411\u91cf\u200b\uff0c\u200b\u7ed3\u6784\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b</p> <pre><code>class ModuleWithVec extends RawModule {\n  // 5 \u200b\u4e2a\u200b 23 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u6570\u200b\u7684\u200b\u5411\u91cf\u200b\n  val myVec = Wire(Vec(5, SInt(23.W)))\n\n  // \u200b\u8fde\u63a5\u200b\u81f3\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\n  val reg3 = myVec(3)\n}\n</code></pre> <p>\uff08\u200b\u6ce8\u610f\u200b\u6211\u4eec\u200b\u6307\u5b9a\u200b\u4e86\u200b <code>Vec</code> \u200b\u5143\u7d20\u200b\u7684\u200b\u4e2a\u6570\u200b\uff0c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd8\u200b\u6307\u5b9a\u200b\u4e86\u200b SInt \u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b\uff09</p> <p>\u200b\u8fd9\u4e9b\u200b\u57fa\u7c7b\u200b(<code>SInt</code>, <code>UInt</code>, \u200b\u548c\u200b <code>Bool</code>)\u200b\u8fd8\u6709\u200b\u805a\u5408\u200b\u7c7b\u200b(<code>Bundle</code> \u200b\u548c\u200b <code>Vec</code>)\u200b\u90fd\u200b\u7ee7\u627f\u200b\u81ea\u200b\u4e00\u4e2a\u200b\u516c\u5171\u200b\u7684\u200b\u8d85\u7c7b\u200b\uff0c<code>Data</code>\u3002\u200b\u5728\u200b\u786c\u4ef6\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u6700\u7ec8\u200b\u4ece\u200b <code>Data</code> \u200b\u7ee7\u627f\u200b\u7684\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u80fd\u200b\u8868\u793a\u200b\u4e3a\u4f4d\u200b\u5411\u91cf\u200b\u3002</p> <p>Bundles \u200b\u548c\u200b Vecs \u200b\u53ef\u4ee5\u200b\u4efb\u610f\u200b\u8fde\u63a5\u200b\u6765\u200b\u6784\u6210\u200b\u590d\u6742\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff1a</p> <pre><code>class BigBundle extends Bundle {\n  // 5 \u200b\u4e2a\u200b 23 \u200b\u4f4d\u6709\u200b\u7b26\u53f7\u200b\u6570\u200b\u7684\u200b\u5411\u91cf\u200b\n  val myVec = Vec(5, SInt(23.W))\n  val flag = Bool()\n  // \u200b\u672c\u200b\u8282\u200b\u5f00\u5934\u200b\u5b9a\u4e49\u200b\u7684\u200b Bundle\n  val f = new MyFloat\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b Chisel \u200b\u7684\u200b\u57fa\u7c7b\u200b\u548c\u200b\u805a\u7c7b\u200b\u5728\u200b\u521b\u5efa\u200b\u5b9e\u4f8b\u200b\u65f6\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>new</code>\uff0c\u200b\u4f46\u200b\u65b0\u200b\u7684\u200b\u7528\u6237\u200b\u6570\u636e\u7c7b\u578b\u200b\u9700\u8981\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b Scala <code>apply</code> \u200b\u6784\u9020\u51fd\u6570\u200b\u4f7f\u200b\u7528\u6237\u200b\u6570\u636e\u7c7b\u578b\u200b\u4e5f\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>new</code>\uff0c\u200b\u5c31\u200b\u50cf\u200b\u51fd\u6570\u200b\u6784\u9020\u200b - Function Constructor \u200b\u4e2d\u200b\u8bb2\u8ff0\u200b\u7684\u200b</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#bundles-flipping-bundles","title":"\u7ffb\u8f6c\u200b Bundles - Flipping Bundles","text":"<p><code>Flipped()</code> \u200b\u51fd\u6570\u200b\u9012\u5f52\u200b\u7684\u200b\u7ffb\u8f6c\u200b Bundle/Record \u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u3002\u200b\u8fd9\u200b\u5728\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4e92\u76f8\u200b\u8fde\u63a5\u200b\u7684\u200b\u53cc\u5411\u200b\u63a5\u53e3\u200b\u65f6\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\uff08\u200b\u6bd4\u5982\u200b <code>Decoupled</code>\uff09\u3002\u200b\u8bf7\u200b\u770b\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>class ABBundle extends Bundle {\n  val a = Input(Bool())\n  val b = Output(Bool())\n}\n\nclass MyFlippedModule extends RawMoudule {\n  val normalBundle = IO(new ABBbundle)\n  normakBundle.b := normalBundle.a\n\n  val flippedBundle = IO(Flipped(new ABBundle))\n  flippedBundle.a := flippedBundle.b\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4e0b\u9762\u200b\u7684\u200b Verilog\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.43.0\nmodule MyFlippedModule( // &lt;stdin&gt;:3:10\n  input  normalBundle_a,    // bundles-and-vecs.md:60:24\n         flippedBundle_b,   // bundles-and-vecs.md:65:25\n  output normalBundle_b,    // bundles-and-vecs.md:60:24\n         flippedBundle_a    // bundles-and-vecs.md:65:25\n);\n\n  assign normalBundle_b = normalBundle_a;   // &lt;stdin&gt;:3:10\n  assign flippedBundle_a = flippedBundle_b; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#mixedvec","title":"MixedVec","text":"<p>(Chisel 3.2+)</p> <p><code>Vec</code> \u200b\u7684\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\u5fc5\u987b\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u53c2\u6570\u200b\u5316\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u60f3\u8981\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u6709\u200b\u76f8\u540c\u200b\u7c7b\u578b\u200b\u4f46\u200b\u4e0d\u540c\u200b\u53c2\u6570\u200b\u5316\u200b\u7684\u200b <code>Vec</code>\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b MixedVec</p> <pre><code>import chisel3.util.MixedVec\n\nclass ModuleMixedVec extends Module {\n  val io = IO(new Bundle {\n    val x = Input(UInt(3.W))\n    val y = Input(UInt(10.W))\n    val vec = Output(MixedVec(UInt(3.W), UInt(10.W)))\n  })\n\n  io.vec(0) := io.x\n  io.vec(1) := io.y\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7f16\u7a0b\u200b\u6765\u200b\u5728\u200b MixedVec \u200b\u91cc\u200b\u521b\u5efa\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>class ModuleProgrammaticMixedVec(x: Int, y: Int) extends Module {\n  val io = IO(new Bundle{\n    val vec = Input(MixedVec((x to y) map {i =&gt; UInt(i.W)}))\n    // ...\n  })\n  // ...\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#combinational-circuits","title":"\u7ec4\u5408\u200b\u7535\u8def\u200b\uff08Combinational Circuits\uff09","text":"<p>\u200b\u7535\u8def\u200b\u5728\u200b Chisel \u200b\u4e2d\u4ee5\u200b\u8282\u70b9\u200b\u56fe\u200b\u7684\u200b\u5f62\u5f0f\u200b\u4fdd\u5b58\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u662f\u200b\u4e00\u4e2a\u200b 0 \u200b\u8f93\u5165\u200b\u6216\u200b\u591a\u200b\u8f93\u5165\u200b\uff0c\u200b\u9a71\u52a8\u200b\u4e00\u4e2a\u200b\u8f93\u51fa\u200b\u7684\u200b\u786c\u4ef6\u200b\u64cd\u4f5c\u7b26\u200b\u3002\u200b\u4e4b\u524d\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u5b57\u7b26\u200b\u503c\u200b\u662f\u200b\u4e00\u79cd\u200b\u9000\u5316\u200b\u7684\u200b\u8282\u70b9\u200b\uff0c\u200b\u4ed6\u200b\u6ca1\u6709\u200b\u8f93\u5165\u200b\u5e76\u4e14\u200b\u9a71\u52a8\u200b\u4e00\u4e2a\u200b\u5e38\u91cf\u200b\u8f93\u51fa\u200b\u3002\u200b\u521b\u5efa\u200b\u8282\u70b9\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u8fde\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\u7684\u200b\u65b9\u6cd5\u200b\u662f\u200b\u4f7f\u7528\u200b\u6587\u672c\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u6bd4\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u8868\u8fbe\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u7ec4\u5408\u200b\u903b\u8f91\u7535\u8def\u200b\uff1a</p> <pre><code>(a &amp; b) | (~c &amp; d)\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u683c\u5f0f\u200b\u770b\u8d77\u6765\u200b\u5f88\u200b\u719f\u6089\u200b\uff0c\u200b\u7528\u200b <code>&amp;</code> \u200b\u548c\u200b <code>|</code> \u200b\u5206\u522b\u200b\u8868\u793a\u200b\u6309\u4f4d\u200b\u4e0e\u200b\u548c\u200b\u6309\u4f4d\u200b\u6216\u200b\uff0c<code>~</code> \u200b\u8868\u793a\u200b\u6309\u4f4d\u200b\u53d6\u53cd\u200b\u3002 <code>a</code> \u200b\u5230\u200b <code>d</code> \u200b\u8868\u793a\u200b\u67d0\u79cd\u200b\u7ebf\u5bbd\u200b\uff08\u200b\u672a\u6307\u5b9a\u200b\uff09\u200b\u7684\u200b\u547d\u540d\u200b\u5bfc\u7ebf\u200b\u3002</p> <p>\u200b\u4efb\u4f55\u200b\u7b80\u5355\u200b\u8868\u8fbe\u5f0f\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8f6c\u6362\u6210\u200b\u4e00\u4e2a\u200b\u7535\u8def\u200b\u6811\u200b(circuit tree)\uff0c\u200b\u5bfc\u7ebf\u200b\u4f5c\u4e3a\u200b\u6811\u53f6\u200b\uff0c\u200b\u8fd0\u7b97\u7b26\u200b\u4f5c\u4e3a\u200b\u5185\u90e8\u200b\u8282\u70b9\u200b\u3002\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u7535\u8def\u200b\u6700\u7ec8\u200b\u7684\u200b\u8f93\u51fa\u200b\u4ece\u200b\u6811\u6839\u200b\u90e8\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u5f97\u51fa\u200b\uff0c\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u662f\u200b\u6309\u4f4d\u200b\u6216\u200b(<code>|</code>)\u3002</p> <p>\u200b\u7b80\u5355\u200b\u8868\u8fbe\u5f0f\u200b\u53ef\u4ee5\u200b\u5efa\u7acb\u200b\u4e00\u4e2a\u200b\u6811\u72b6\u200b\u7535\u8def\u200b\uff0c\u200b\u4f46\u200b\u6784\u5efa\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u6709\u200b\u5411\u200b\u65e0\u200b\u73af\u56fe\u200b(directed acyclic graphs, DAGs)\u200b\u7535\u8def\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u63cf\u8ff0\u200b\u6247\u51fa\u200b\uff08fan-out\uff09\u3002\u200b\u5728\u200b Chisel \u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u547d\u540d\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5bfc\u7ebf\u200b\u6765\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u4e4b\u540e\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u591a\u6b21\u200b\u8c03\u7528\u200b\u8fd9\u4e2a\u200b\u5b50\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u6211\u4eec\u200b\u5728\u200b Chisel \u200b\u4e2d\u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u6765\u200b\u547d\u540d\u200b\u4e00\u4e2a\u200b\u5bfc\u7ebf\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u9009\u62e9\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b\u591a\u8def\u200b\u9009\u62e9\u5668\u200b\u63cf\u8ff0\u200b\u4e2d\u200b\uff0c\u200b\u4ec0\u4e48\u200b\u662f\u200b\u88ab\u200b\u662f\u200b\u7528\u200b\u4e86\u200b\u4e24\u6b21\u200b\u7684\u200b\uff1a</p> <pre><code>val sel = a | b\nval out = (sel &amp; in1) | (~sel &amp; in0)\n</code></pre> <p><code>val</code> \u200b\u662f\u200b Scala \u200b\u7684\u200b\u5173\u952e\u8bcd\u200b\uff0c\u200b\u7528\u6765\u200b\u58f0\u660e\u200b\u503c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u6539\u53d8\u200b\u7684\u200b\u53d8\u91cf\u200b\u3002\u200b\u5728\u200b\u8fd9\u91cc\u200b\u7528\u200b\u5b83\u200b\u547d\u540d\u200b Chisel \u200b\u5bfc\u7ebf\u200b\uff0c<code>sel</code>\uff0c\u200b\u4fdd\u6301\u200b\u7b2c\u4e00\u4e2a\u200b\u6309\u4f4d\u200b\u6216\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u8f93\u51fa\u200b\uff0c\u200b\u8fd9\u6837\u200b\u8fd9\u4e2a\u200b\u8f93\u51fa\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7b2c\u4e8c\u4e2a\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u88ab\u200b\u591a\u6b21\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#wires","title":"\u5bfc\u7ebf\u200b\uff08Wires\uff09","text":"<p>Chisel \u200b\u540c\u6837\u200b\u652f\u6301\u200b\u5c06\u200b\u5bfc\u7ebf\u200b\u4f5c\u4e3a\u200b\u786c\u4ef6\u200b\u8282\u70b9\u200b\uff0c\u200b\u7ed9\u200b\u5176\u200b\u8d4b\u503c\u200b\u6216\u200b\u8fde\u63a5\u200b\u5176\u4ed6\u200b\u8282\u70b9\u200b Chisel also supports wires as hardware nodes to which one can assign values or connect other nodes.</p> <pre><code>val myNode = Wire(UInt(8.W))\nwhen (isReady) {\n  myNode := 255.U\n} .otherwise {\n  myNode := 0.U\n}\n\nval myNode = Wire(UInt(8.W))\nwhen (input &gt; 128.U) {\n  myNode := 255.U\n} .elsewhen (input &gt; 64.U) {\n  myNode := 1.U\n} .otherwise {\n  myNode := 0.U\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u5bfc\u7ebf\u200b\u7684\u200b\u6700\u540e\u200b\u4e00\u6b21\u200b\u8fde\u63a5\u200b\u624d\u200b\u751f\u6548\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e0b\u9762\u200b\u4e24\u4e2a\u200b Chisel \u200b\u7535\u8def\u200b\u662f\u200b\u7b49\u4ef7\u200b\u7684\u200b\uff1a</p> <pre><code>val myNode = Wire(UInt(8.W))\nmyNode := 10.U\nmyNode := 0.U\n\nval myNode = Wire(UInt(8.W))\nmyNode := 0.U\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#opretors","title":"\u64cd\u4f5c\u7b26\u200b\uff08Opretors\uff09","text":"<p>Chisel \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u786c\u4ef6\u200b\u64cd\u4f5c\u7b26\u200b\u96c6\u5408\u200b</p> \u200b\u64cd\u4f5c\u7b26\u200b \u200b\u8bf4\u660e\u200b \u200b\u4f4d\u200b\u64cd\u4f5c\u7b26\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt, UInt, Bool <code>val hiBits = x &amp; \"h_ffff_0000\".U</code> \u200b\u6309\u4f4d\u200b\u4e0e\u200b <code>val invertedX = ~x</code> \u200b\u6309\u4f4d\u200b\u53d6\u53cd\u200b <code>val flagsOut = flagsIn | overflow</code> \u200b\u6309\u4f4d\u200b\u6216\u200b <code>val flagsOut = flagsIn ^ toggle</code> \u200b\u6309\u4f4d\u200b\u5f02\u6216\u200b \u200b\u4f4d\u200b\u89c4\u7ea6\u200b\u64cd\u4f5c\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt, UInt \u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b: Bool <code>val allSet = x.andR</code> x \u200b\u7684\u200b\u6bcf\u200b\u4e00\u4f4d\u200b\u76f8\u4e0e\u200b <code>val anySet = x.orR</code> x \u200b\u7684\u200b\u6bcf\u200b\u4e00\u4f4d\u200b\u76f8\u200b\u6216\u200b <code>val parity = x.xorR</code> x \u200b\u7684\u200b\u6bcf\u200b\u4e00\u4f4d\u200b\u76f8\u5f02\u200b\u6216\u200b \u200b\u76f8\u7b49\u200b\u5224\u65ad\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt, UInt, Bool \u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b: Bool <code>val equ = x === y</code> \u200b\u76f8\u7b49\u200b <code>val neq = x =/= y</code> \u200b\u4e0d\u200b\u76f8\u7b49\u200b \u200b\u79fb\u4f4d\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt, UInt <code>val twoToTheX = 1.S &lt;&lt; x</code> \u200b\u903b\u8f91\u200b\u5de6\u79fb\u200b <code>val hiBits = x &gt;&gt; 16.U</code> \u200b\u53f3\u79fb\u200b\uff08UInt \u200b\u65f6\u200b\u903b\u8f91\u79fb\u4f4d\u200b\uff0cSInt \u200b\u65f6\u200b\u7b97\u672f\u200b\u79fb\u4f4d\u200b\uff09 \u200b\u4f4d\u57df\u200b\u64cd\u4f5c\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt, UInt, Bool <code>val xLSB = x(0)</code> \u200b\u63d0\u53d6\u200b\u4e00\u4f4d\u200b, \u200b\u4f4e\u4f4d\u200b\u7d22\u5f15\u200b\u4e3a\u200b 0 <code>val xTopNibble = x(15, 12)</code> \u200b\u4ece\u200b\u7ed3\u675f\u4f4d\u200b\u5230\u200b\u5f00\u59cb\u200b\u4f4d\u200b\u63d0\u53d6\u200b\u4f4d\u5b57\u6bb5\u200b <code>val usDebt = Fill(3, \"hA\".U)</code> \u200b\u591a\u6b21\u200b\u590d\u5236\u200b\u4e00\u4e2a\u200b\u4f4d\u200b\u5b57\u7b26\u4e32\u200b <code>val float = Cat(sign, exponent, mantissa)</code> \u200b\u62fc\u63a5\u200b\u4f4d\u5b57\u6bb5\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u5728\u200b\u5de6\u8fb9\u200b \u200b\u903b\u8f91\u200b\u64cd\u4f5c\u7b26\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: Bool <code>val sleep = !busy</code> \u200b\u903b\u8f91\u200b\u975e\u200b <code>val hit = tagMatch &amp;&amp; valid</code> \u200b\u903b\u8f91\u200b\u4e0e\u200b `val stall = src1busy <code>val out = Mux(sel, inTrue, inFalse)</code> sel \u200b\u4e3a\u200b\u5e03\u5c14\u200b\u53d8\u91cf\u200b\u7684\u200b\u4e24\u200b\u8f93\u5165\u200b\u9009\u62e9\u5668\u200b \u200b\u7b97\u672f\u64cd\u4f5c\u7b26\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt and UInt\uff0c\u200b\u5bf9\u200b\u6570\u5b57\u200b\u6709\u6548\u200b <code>val sum = a + b or val sum = a +% b</code> \u200b\u52a0\u6cd5\u200b\uff08\u200b\u65e0\u200b\u5bbd\u5ea6\u200b\u6269\u5c55\u200b\uff09 <code>val sum = a +&amp; b</code> \u200b\u52a0\u6cd5\u200b\uff08\u200b\u6709\u200b\u5bbd\u5ea6\u200b\u6269\u5c55\u200b\uff09 <code>val diff = a - b or val diff = a -% b</code> \u200b\u51cf\u6cd5\u200b\uff08\u200b\u65e0\u200b\u5bbd\u5ea6\u200b\u6269\u5c55\u200b\uff09 <code>val diff = a -&amp; b</code> \u200b\u52a0\u6cd5\u200b\uff08\u200b\u6709\u200b\u5bbd\u5ea6\u200b\u6269\u5c55\u200b\uff09 <code>val prod = a * b</code> \u200b\u4e58\u6cd5\u200b <code>val div = a / b</code> \u200b\u9664\u6cd5\u200b <code>val mod = a % b</code> \u200b\u53d6\u6a21\u200b \u200b\u7b97\u672f\u200b\u6bd4\u8f83\u200b \u200b\u6709\u6548\u200b\u7c7b\u578b\u200b: SInt and UInt\uff0c\u200b\u5bf9\u200b\u6570\u5b57\u200b\u6709\u6548\u200b <code>val gt = a &gt; b</code> \u200b\u5927\u4e8e\u200b <code>val gte = a &gt;= b</code> \u200b\u5927\u4e8e\u200b\u7b49\u4e8e\u200b <code>val lt = a &lt; b</code> \u200b\u5c0f\u4e8e\u200b <code>val lte = a &lt;= b</code> \u200b\u5c0f\u4e8e\u200b\u7b49\u4e8e\u200b <p>Scala \u200b\u8bed\u8a00\u200b\u7ea6\u675f\u200b\u4e86\u200b\u6211\u4eec\u200b\u5bf9\u4e8e\u200b\u64cd\u4f5c\u7b26\u200b\u540d\u79f0\u200b\u7684\u200b\u9009\u62e9\u200b\u3002\u200b\u6211\u4eec\u200b\u4e0d\u5f97\u4e0d\u200b\u4f7f\u7528\u200b\u4e09\u7b49\u200b\u53f7\u200b <code>===</code> \u200b\u8868\u793a\u200b\u76f8\u7b49\u200b\uff0c\u200b\u7528\u200b <code>=\\=</code> \u200b\u8868\u793a\u200b\u4e0d\u200b\u76f8\u7b49\u200b\u6765\u200b\u4fdd\u8bc1\u200b\u539f\u751f\u200b\u7684\u200b Scala \u200b\u76f8\u7b49\u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b</p> <p>Chisel \u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u6ca1\u6709\u200b\u5b9a\u4e49\u200b\u4e3a\u200b Chisel \u200b\u8bed\u8a00\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002\u200b\u5b9e\u9645\u4e0a\u200b\uff0c\u200b\u4ed6\u200b\u662f\u200b\u7531\u200b\u7535\u8def\u200b\u7684\u200b\u8bc4\u4f30\u200b\u7b49\u7ea7\u200b\u51b3\u5b9a\u200b\u7684\u200b\uff0c\u200b\u5929\u7136\u200b\u9075\u5faa\u200b Scala \u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u3002\u200b\u5982\u679c\u200b\u5bf9\u200b\u4f18\u5148\u7ea7\u200b\u5b58\u5728\u200b\u6000\u7591\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u62ec\u53f7\u200b\u3002</p> <p>Chisel/Scala \u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u4e0e\u200b Java \u200b\u548c\u200b C \u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u76f8\u4f3c\u200b\u4f46\u200b\u4e0d\u200b\u76f8\u540c\u200b\u3002Verilog \u200b\u548c\u200b C \u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\uff0c\u200b\u4f46\u200b VHDL \u200b\u6ca1\u6709\u200b\u3002Verilog \u200b\u7684\u200b\u903b\u8f91\u200b\u8fd0\u7b97\u7b26\u200b\u6709\u200b\u66f4\u200b\u9ad8\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\uff0c\u200b\u4f46\u200b VHDL \u200b\u7684\u200b\u90a3\u4e9b\u200b\u64cd\u4f5c\u7b26\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\uff0c\u200b\u7531\u200b\u5de6\u5230\u200b\u53f3\u200b\u8fdb\u884c\u200b\u8fd0\u7b97\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#width-inference","title":"\u4f4d\u200b\u5bbd\u200b\u63a8\u65ad\u200b\uff08Width Inference\uff09","text":"<p>Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4f4d\u200b\u5bbd\u200b\u63a8\u65ad\u200b\u6765\u200b\u51cf\u5c11\u200b\u8bbe\u8ba1\u200b\u5de5\u4f5c\u91cf\u200b\u3002\u200b\u9f13\u52b1\u200b\u7528\u6237\u200b\u624b\u52a8\u200b\u6307\u5b9a\u200b\u7aef\u53e3\u200b\u548c\u200b\u5bc4\u5b58\u5668\u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b\u4ee5\u200b\u907f\u514d\u200b\u4efb\u4f55\u200b\u610f\u5916\u200b\u60c5\u51b5\u200b\u3002\u200b\u4f46\u200b\u5728\u200b\u5176\u4ed6\u200b\u65f6\u5019\u200b\uff0cFIRRTL \u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u63a8\u65ad\u51fa\u200b\u4e3a\u200b\u6307\u5b9a\u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u672a\u6307\u5b9a\u200b\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u7535\u8def\u200b\u7ec4\u4ef6\u200b\uff0cFIRRTL \u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u63a8\u65ad\u51fa\u200b\u80fd\u591f\u200b\u4fdd\u6301\u200b\u5176\u200b\u5408\u6cd5\u200b\u4f20\u5165\u200b\u8fde\u63a5\u200b\u7684\u200b\u6700\u5c0f\u200b\u5bbd\u5ea6\u200b\u3002\u200b\u8fd9\u91cc\u200b\u7684\u200b\u542b\u4e49\u200b\u662f\u200b\uff0c\u200b\u5728\u200b Chisel \u200b\u7684\u200b\u8d4b\u503c\u200b\u8bed\u53e5\u200b\u4e2d\u200b\uff0c\u200b\u63a8\u7406\u200b\u662f\u4ece\u200b\u53f3\u5411\u200b\u5de6\u200b\u8fdb\u884c\u200b\u7684\u200b\uff0c\u200b\u5373\u200b\u4ece\u200b\u5de6\u624b\u8fb9\u200b\u5230\u200b\u53f3\u624b\u8fb9\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u7ec4\u4ef6\u200b\u6ca1\u6709\u200b\u4f20\u5165\u200b\u94fe\u63a5\u200b\uff0c\u200b\u53c8\u200b\u672a\u6307\u5b9a\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u4f1a\u200b\u629b\u51fa\u200b\u4e00\u4e2a\u200b\u9519\u8bef\u200b\u6307\u51fa\u200b\u65e0\u6cd5\u200b\u63a8\u65ad\u200b\u8fde\u63a5\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u6a21\u5757\u200b\u7684\u200b\u672a\u6307\u5b9a\u200b\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u8f93\u5165\u200b\u7aef\u53e3\u200b\uff0c\u200b\u63a8\u65ad\u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b\u662f\u200b\u4fdd\u8bc1\u200b\u6a21\u5757\u200b\u6240\u6709\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u4f20\u5165\u200b\u8fde\u63a5\u200b\u5408\u6cd5\u200b\u7684\u200b\u6700\u5c0f\u200b\u5bbd\u5ea6\u200b\u3002\u200b\u5730\u578b\u200b\u591a\u8def\u200b\u8f6c\u6362\u5668\u200b(ground-typed multiplexor)\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u662f\u200b\u5176\u200b\u4e24\u4e2a\u200b\u76f8\u5e94\u200b\u8f93\u5165\u200b\u5bbd\u5ea6\u200b\u4e2d\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u590d\u7528\u200b\u805a\u5408\u200b\u7c7b\u578b\u200b\u8868\u8fbe\u5f0f\u200b\uff08multiplexing aggregate-typed expressions\uff09\uff0c\u200b\u6bcf\u4e2a\u200b\u53f6\u200b\u5143\u7d20\u200b\u7684\u200b\u7ed3\u679c\u200b\u5bbd\u5ea6\u200b\u662f\u200b\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u4e24\u4e2a\u200b\u8f93\u5165\u200b\u53f6\u200b\u5143\u7d20\u200b\u7684\u200b\u5b50\u200b\u5143\u7d20\u200b\u5bbd\u5ea6\u200b\u7684\u200b\u6700\u5927\u503c\u200b\u3002\u200b\u6761\u4ef6\u200b\u6709\u6548\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u662f\u200b\u5176\u200b\u8f93\u5165\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u3002</p> <p>\u200b\u4e0b\u8868\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u786c\u4ef6\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u8f93\u51fa\u200b\u5bbd\u5ea6\u200b\uff1a</p> operation bit width <code>z = x + y or z = x +% y</code> <code>w(z) = max(w(x), w(y))</code> <code>z = x +&amp; y</code> <code>w(z) = max(w(x), w(y)) + 1</code> <code>z = x - y or z = x -% y</code> <code>w(z) = max(w(x), w(y))</code> <code>z = x -&amp; y</code> <code>w(z) = max(w(x), w(y)) + 1</code> <code>z = x &amp; y</code> <code>w(z) = max(w(x), w(y))</code> <code>z = Mux(c, x, y)</code> <code>w(z) = max(w(x), w(y))</code> <code>z = w * y</code> <code>w(z) = w(x) + w(y)</code> <code>z = x &lt;&lt; n</code> <code>w(z) = w(x) + maxNum(n)</code> <code>z = x &gt;&gt; n</code> <code>w(z) = w(x) - minNum(n)</code> <code>z = Cat(x, y)</code> <code>w(z) = w(x) + w(y)</code> <code>z = Fill(n, x)</code> <code>w(z) = w(x) * maxNum(n)</code> <p><code>w(z)</code> \u200b\u662f\u200b\u5bfc\u7ebf\u200b z \u200b\u7684\u200b\u7ebf\u5bbd\u200b\uff0c<code>&amp;</code> \u200b\u89c4\u5219\u200b\u9002\u7528\u200b\u4e8e\u200b\u6240\u6709\u200b\u4f4d\u200b\u903b\u8f91\u200b\u64cd\u4f5c\u7b26\u200b</p> <p>\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b\u4ee5\u200b\u672a\u6307\u5b9a\u200b\u5bbd\u5ea6\u200b\u5143\u7d20\u200b\uff08\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\u662f\u200b\u9876\u7ea7\u200b\u8f93\u5165\u200b\uff09\u200b\u5f00\u5934\u200b\u7684\u200b\u8fde\u63a5\u200b\u8def\u5f84\u200b\uff0c\u200b\u90a3\u4e48\u200b\u7f16\u8bd1\u5668\u200b\u5c06\u200b\u629b\u51fa\u200b\u4e00\u4e2a\u200b\u5f02\u5e38\u200b\uff0c\u200b\u6307\u793a\u200b\u67d0\u4e2a\u200b\u5bbd\u5ea6\u200b\u4e0d\u53ef\u200b\u66f4\u6539\u200b\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u5e38\u89c1\u200b\u7684\u200b \u201cgotcha\u201d \u200b\u6765\u81ea\u200b\u4e8e\u7528\u200b\u8fd0\u7b97\u7b26\u200b <code>+</code> \u200b\u548c\u200b <code>-</code> \u200b\u622a\u65ad\u200b\u52a0\u6cd5\u200b\u548c\u200b\u51cf\u6cd5\u200b\u3002\u200b\u5e0c\u671b\u200b\u7ed3\u679c\u200b\u4fdd\u6301\u200b\u52a0\u6cd5\u200b\u6216\u200b\u51cf\u6cd5\u200b\u7684\u200b\u5b8c\u5168\u200b\u6269\u5c55\u200b\u7cbe\u5ea6\u200b\u7684\u200b\u7528\u6237\u200b\u5e94\u8be5\u200b\u4f7f\u7528\u200b\u6269\u5c55\u200b\u8fd0\u7b97\u7b26\u200b <code>+&amp;</code> \u200b\u548c\u200b <code>-&amp;</code>\u3002</p> <p>\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u622a\u65ad\u200b\u64cd\u4f5c\u200b\u6765\u6e90\u4e8e\u200b Chisel \u200b\u4f5c\u4e3a\u200b\u4e00\u4e2a\u200b\u5fae\u5904\u7406\u5668\u200b\u8bbe\u8ba1\u200b\u8bed\u8a00\u200b\u7684\u200b\u5386\u53f2\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#functional-abstraction","title":"\u51fd\u6570\u200b\u62bd\u8c61\u200b\uff08Functional Abstraction\uff09","text":"<p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u8868\u8fbe\u200b\u91cd\u590d\u200b\u7684\u200b\u903b\u8f91\u200b\u7247\u6bb5\u200b\uff0c\u200b\u8fd9\u6837\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e4b\u540e\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u591a\u6b21\u200b\u91cd\u7528\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u7528\u5230\u200b\u7684\u200b\u7b80\u5355\u200b\u7ec4\u5408\u200b\u903b\u8f91\u200b\u5757\u200b\u5305\u88c5\u200b\u4e3a\u200b\u4e0b\u9762\u200b\u7684\u200b\u683c\u5f0f\u200b</p> <pre><code>def clb(a: UInt, b: UInt, c: UInt, d: UInt): UInt =\n  (a &amp; b) | (~c &amp; d)\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b <code>clb</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code> \u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5e03\u5c14\u200b\u7535\u8def\u200b\u7684\u200b\u503c\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5173\u952e\u5b57\u200b <code>def</code> \u200b\u662f\u200b Scala \u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\uff0c\u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u540e\u200b\u7d27\u8ddf\u200b\u4e00\u4e2a\u200b\u5192\u53f7\u200b\uff0c\u200b\u7136\u540e\u200b\u662f\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u5728\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u540e\u200b\u7684\u200b\u5192\u53f7\u200b\u540e\u9762\u200b\u3002\u200b\u7b49\u200b\u53f7\u200b <code>=</code> \u200b\u5206\u5272\u200b\u4e86\u200b\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u548c\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e4b\u540e\u200b\u7684\u200b\u5176\u4ed6\u200b\u7535\u8def\u200b\u4e2d\u200b\u8fd9\u6837\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\uff1a<code>val out = clb(a, b, c, d)</code></p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#ports","title":"\u7aef\u53e3\u200b\uff08Ports\uff09","text":"<p>\u200b\u7aef\u53e3\u200b\u662f\u200b\u7528\u6765\u200b\u8fde\u63a5\u200b\u786c\u4ef6\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002\u200b\u7aef\u53e3\u200b\u53ea\u662f\u200b\u6307\u4e3a\u200b\u5176\u200b\u6210\u5458\u200b\u6307\u5b9a\u200b\u4e86\u200b\u65b9\u5411\u200b\u7684\u200b <code>Data</code> \u200b\u5bf9\u8c61\u200b\u3002</p> <p>Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7aef\u53e3\u200b\u6784\u5efa\u200b\u51fd\u6570\u200b\u4f7f\u5f97\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6784\u5efa\u200b\u5bf9\u8c61\u200b\u65f6\u4e3a\u200b\u5176\u200b\u6dfb\u52a0\u200b\u65b9\u5411\u200b\uff08\u200b\u8f93\u5165\u200b\u6216\u200b\u8f93\u51fa\u200b\uff09\u3002\u200b\u57fa\u7c7b\u200b\u7aef\u53e3\u200b\u6784\u9020\u51fd\u6570\u200b\u5c06\u200b\u7aef\u53e3\u200b\u7684\u200b\u7c7b\u578b\u200b\u5c01\u88c5\u200b\u5728\u200b <code>Input</code> \u200b\u6216\u8005\u200b <code>Output</code> \u200b\u4e2d\u200b\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u7aef\u53e3\u200b\u58f0\u660e\u200b\u7684\u200b\u793a\u4f8b\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>class Decoupled extends Bundle {\n  val reagy = Output(Bool())\n  val data = Input(UInt(32.W))\n  val valid = Input(Bool())\n}\n</code></pre> <p>\u200b\u5728\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>Decoupled</code> \u200b\u4e4b\u540e\u200b, \u200b\u5b83\u200b\u53d8\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u9700\u8981\u200b\u4f5c\u4e3a\u200b\u6a21\u5757\u200b\u7684\u200b\u7ed3\u6784\u200b\u6216\u8005\u200b\u4f5c\u4e3a\u200b\u5bfc\u7ebf\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u5c06\u200b\u65b9\u5411\u200b\u88c5\u5165\u200b\u5bf9\u8c61\u200b\u58f0\u660e\u200b\uff0cChisel \u200b\u80fd\u591f\u200b\u63d0\u4f9b\u200b\u5f3a\u5927\u200b\u7684\u200b\u5e03\u7ebf\u200b\u7ed3\u6784\u200b\uff0c\u200b\u540e\u9762\u200b\u5c06\u4f1a\u200b\u8fdb\u884c\u200b\u63cf\u8ff0\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#inspecting-module-ports","title":"\u68c0\u67e5\u200b\u6a21\u5757\u200b\u7aef\u53e3\u200b\uff08Inspecting Module ports\uff09","text":"<p>(Chisel 3.2+)</p> <p>chisel 3.2 \u200b\u63d0\u51fa\u200b\u4e86\u200b <code>DataMirror.modulePorts</code>\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u68c0\u67e5\u200b\u4efb\u4f55\u200b Chisel \u200b\u6a21\u5757\u200b\u7684\u200b IO\uff08\u200b\u8fd9\u200b\u5305\u62ec\u200b <code>import chisel3._</code> \u200b\u548c\u200b <code>import chisel._</code>\uff0c\u200b\u4ee5\u53ca\u200b\u6bcf\u4e2a\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u9ed1\u76d2\u200b\uff09\u3002\u200b\u8fd9\u662f\u200b\u4f7f\u7528\u200b\u8fd9\u4e2a\u200b API \u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import chisel3.reflect.DataMirror\nimport chisel3.stage.ChiselGeneratorAnnotation\nimport circt.stage.ChiselStage\n\nclass Adder extends Module {\n  val a = IO(Input(UInt(8.W)))\n  val b = IO(Input(UInt(8.W)))\n  val c = IO(Output(UInt(8.W)))\n\n  c := a +&amp; b\n}\n\nclass Test extends Module {\n  val adder = Module(new Adder)\n  // for debug only\n  adder.a := DontCare\n  adder.b := DontCare\n\n  // \u200b\u68c0\u67e5\u200b adder \u200b\u7684\u200b\u7aef\u53e3\u200b\n  // \u200b\u5728\u200b\u4e0b\u9762\u200b\u67e5\u770b\u200b\u7ed3\u679c\u200b\n  DataMirror.modulePorts(adder).foreach { case (name, port) =&gt; {\n    println(s\"Found port $name: $port\")\n  }}\n}\n\nChiselStage.emitSystemVerilog(new Test)\n\n// Found port clock: Adder.clock: IO[Clock]\n// Found port reset: Adder.reset: IO[Reset]\n// Found port a: Adder.a: IO[UInt&lt;8&gt;]\n// Found port b: Adder.b: IO[UInt&lt;8&gt;]\n// Found port c: Adder.c: IO[UInt&lt;8&gt;]\n// res0: String = \"\"\"// Generated by CIRCT firtool-1.43.0\n// module Test( // &lt;stdin&gt;:13:10\n//   input clock,   // &lt;stdin&gt;:14:11\n//         reset    // &lt;stdin&gt;:15:11\n// );\n// \n// endmodule\n// \n// \"\"\"\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#modules","title":"\u6a21\u5757\u200b\uff08Modules\uff09","text":"<p>Chisel \u200b\u6a21\u5757\u200b\u5728\u200b\u5b9a\u4e49\u200b\u751f\u6210\u200b\u7535\u8def\u200b\u7684\u200b\u5c42\u7ea7\u200b\u7ed3\u6784\u200b\u4e0a\u200b\u548c\u200b Verilog \u200b\u975e\u5e38\u200b\u76f8\u4f3c\u200b\u3002</p> <p>\u200b\u5206\u5c42\u200b\u6a21\u5757\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u53ef\u200b\u5728\u200b\u4e0b\u6e38\u200b\u5de5\u5177\u200b\u4e2d\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u4ee5\u200b\u5e2e\u52a9\u200b\u8c03\u8bd5\u200b\u548c\u200b\u7269\u7406\u5e03\u5c40\u200b\u3002\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u5757\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\uff0c\u200b\u8be5\u7c7b\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u7279\u5f81\u200b\uff1a</p> <ul> <li>\u200b\u7ee7\u627f\u200b\u81ea\u200b <code>Module</code>\uff0c</li> <li>\u200b\u5305\u542b\u200b\u81f3\u5c11\u200b\u4e00\u4e2a\u200b\u5c01\u88c5\u200b\u5728\u200b\u6a21\u5757\u200b\u7684\u200b\u7684\u200b <code>IO()</code> \u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u7684\u200b\u63a5\u53e3\u200b\uff08\u200b\u4f20\u7edf\u200b\u4e0a\u200b\u5b58\u50a8\u200b\u5728\u200b\u540d\u4e3a\u200b <code>io</code> \u200b\u7684\u200b\u7aef\u53e3\u200b\u5b57\u6bb5\u200b\u4e2d\u200b\uff09\uff0c\u200b\u4ee5\u53ca\u200b</li> <li>\u200b\u5728\u200b\u5176\u200b\u6784\u9020\u51fd\u6570\u200b\u4e2d\u5c06\u200b\u5b50\u200b\u7535\u8def\u200b\u8fde\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b   \u200b\u50cf\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u4e00\u6837\u200b\u5b9a\u4e49\u200b\u4f60\u200b\u7684\u200b 2 \u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u9009\u62e9\u5668\u200b\u6a21\u5757\u200b\uff1a</li> </ul> <pre><code>import chisel3._\n\nclass Mux2IO extends Bundle {\n  val sel = Input(UInt(1.W))\n  val in0 = Input(UInt(1.W))\n  val in1 = Input(UInt(1.W))\n  val out = Output(UInt(1.W))\n}\n\nclass Mux2 extends Module {\n  val io = IO(new Mux2IO)\n\n  io.out := (io.sel &amp; in1) | (~io.sel &amp; io.in0)\n}\n</code></pre> <p>\u200b\u6a21\u5757\u200b\u7684\u200b\u63a5\u53e3\u200b\u662f\u200b\u4e00\u4e2a\u200b <code>Bundle</code> \u200b\u5f62\u5f0f\u200b\u7684\u200b\u7aef\u53e3\u200b\u96c6\u5408\u200b\uff0c\u200b\u901a\u8fc7\u200b\u4e00\u4e2a\u200b <code>io</code> \u200b\u5b57\u200b\u6bb5\u200b\u5b9a\u4e49\u200b\u3002\u200b\u5bf9\u4e8e\u200b <code>Mux2</code>\uff0c<code>io</code> \u200b\u88ab\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5177\u6709\u200b\u56db\u4e2a\u200b\u5b57\u6bb5\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u9009\u62e9\u5668\u200b\u7aef\u53e3\u200b\u4e00\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u4f53\u4e2d\u200b\u7528\u5230\u200b\u7684\u200b\u8d4b\u503c\u200b\u64cd\u4f5c\u7b26\u200b <code>:=</code> \u200b\u662f\u200b Chisel \u200b\u4e2d\u200b\u7684\u200b\u7279\u6b8a\u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5de6\u8fb9\u200b\u7684\u200b\u8f93\u5165\u200b\u4e0e\u200b\u53f3\u8fb9\u200b\u7684\u200b\u8f93\u51fa\u200b\u76f8\u8fde\u63a5\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#module-hierarchy","title":"\u6a21\u5757\u200b\u5c42\u6b21\u200b\uff08Module Hierarchy\uff09","text":"<p>\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u7535\u8def\u200b\u7684\u200b\u5c42\u7ea7\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5373\u200b\u901a\u8fc7\u200b\u5c0f\u200b\u7684\u200b\u6a21\u5757\u200b\u6765\u200b\u6784\u5efa\u200b\u5927\u200b\u7684\u200b\u6a21\u5757\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4e09\u4e2a\u200b 2 \u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u9009\u62e9\u5668\u200b\u8fde\u63a5\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u7528\u200b <code>Mux2</code> \u200b\u6a21\u5757\u200b\u6784\u6210\u200b 4 \u200b\u8f93\u5165\u200b\u6570\u636e\u200b\u9009\u62e9\u5668\u200b\uff1a</p> <pre><code>class Mux4IO extends Bundle {\n  val in0 = Input(UInt(1.W))\n  val in1 = Input(UInt(1.W))\n  val in2 = Input(UInt(1.W))\n  val in3 = Input(UInt(1.W))\n  val sel = Input(UInt(2.W))\n  val out = Output(UInt(1.W))\n}\n\nclass Mux4 extends Module {\n  val io = IO(new Mux4IO)\n\n  val m0 = Module(new Mux2)\n  m0.io.sel := io.sel(0)\n  m0.io.in0 := io.in0\n  m0.io.in1 := io.in1\n\n  val m1 = Module(new Mux2)\n  m1.io.sel := io.sel(0)\n  m1.io.in0 := io.in2\n  m1.io.in1 := io.in3\n\n  val m2 = Module(new Mux2)\n  m2.io.sel := io.sel(1)\n  m2.io.in0 := m0.io.out\n  m2.io.in1 := m1.io.out\n\n  io.out := m2.io.out\n\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53c8\u200b\u4e00\u6b21\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u50cf\u200b <code>io</code> \u200b\u8fd9\u6837\u200b\u7684\u200b\u6a21\u5757\u63a5\u53e3\u200b\u5e76\u200b\u8fde\u63a5\u200b\u4e86\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e09\u4e2a\u200b <code>Mux2</code> \u200b\u5b50\u200b\u6a21\u5757\u200b\uff0c\u200b\u7528\u200b <code>Module</code> \u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\u548c\u200b Scala \u200b\u7684\u200b\u5173\u952e\u5b57\u200b <code>new</code> \u200b\u521b\u9020\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002\u200b\u4e4b\u540e\u200b\u6211\u4eec\u200b\u5c06\u200b\u4ed6\u4eec\u200b\u4e92\u76f8\u200b\u8fde\u63a5\u8d77\u6765\u200b\uff0c\u200b\u5e76\u200b\u8fde\u63a5\u200b\u5230\u200b <code>Mux4</code> \u200b\u63a5\u53e3\u200b\u7684\u200b\u7aef\u53e3\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1aChisel \u200b\u6a21\u5757\u200b\u6709\u200b\u4e00\u4e2a\u200b\u9690\u5f0f\u200b\u7684\u200b\u65f6\u949f\u200b\uff08\u200b\u547d\u540d\u200b\u4e3a\u200b <code>clock</code>\uff09\u200b\u548c\u200b\u4e00\u4e2a\u200b\u9690\u5f0f\u200b\u7684\u200b\u590d\u4f4d\u200b\uff08\u200b\u547d\u540d\u200b\u4e3a\u200b <code>reset</code>\uff09\u3002Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>RawModule</code> \u200b\u6765\u200b\u521b\u5efa\u200b\u6ca1\u6709\u200b\u9690\u5f0f\u200b\u65f6\u949f\u200b\u548c\u200b\u590d\u4f4d\u200b\u7684\u200b\u6a21\u5757\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#rawmodule","title":"<code>RawModule</code>","text":"<p><code>RawModule</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b**\u200b\u4e0d\u200b\u63d0\u4f9b\u200b\u9690\u5f0f\u200b\u65f6\u949f\u200b\u548c\u200b\u590d\u4f4d\u200b**\u200b\u7684\u200b\u6a21\u5757\u200b\u3002\u200b\u8fd9\u200b\u5728\u200b\u5e0c\u671b\u200b\u5c06\u200b Chisel \u200b\u6a21\u5757\u200b\u4e0e\u200b\u6307\u5b9a\u200b\u547d\u540d\u200b\u7684\u200b\u65f6\u949f\u200b\u548c\u200b\u590d\u4f4d\u200b\u8fde\u63a5\u200b\u65f6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5f88\u200b\u6709\u7528\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5b83\u200b\u6765\u200b\u4ee3\u66ff\u200b Module \u200b\u7684\u200b\u4f7f\u7528\u200b\uff1a</p> <pre><code>import chisel3.{RawModule, withClockAndReset}\n\nclass Foo extends Module {\n  val io = (new Bundle {\n    val a = Input(Bool())\n    val b = Output(Bool())\n  })\n\n  io.b := !io.a\n}\n\nclass FooWrapper extends RawModule {\n  val a_i = IO(Input(Bool()))\n  val b_o = IO(Output(Bool()))\n  val clk = IO(Input(Clock()))\n  val rstn = IO(Input(Bool()))\n\n  val foo = withClockAndReset{clk, !rstn}{ Module (new Foo) }\n\n  foo.io.a := a_i\n  b_o := foo.io.b\n}\n</code></pre> <p>\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c<code>RawModule</code>\u200b\u88ab\u200b\u7528\u6765\u200b\u6539\u53d8\u200b <code>SlaveSpi</code> \u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u7684\u200b\u6781\u6027\u200b\u3002\u200b\u4e8b\u5b9e\u4e0a\u200b\uff0cChisel \u200b\u6a21\u5757\u200b\u4e2d\u200b\u9ed8\u8ba4\u200b\u7684\u200b\u590d\u4f4d\u200b\u65f6\u200b\u9ad8\u7535\u4f4d\u200b\u6fc0\u6d3b\u200b\uff0c\u200b\u7528\u200b <code>withClockAndReset(clock, !rstn)</code> \u200b\u6211\u4eec\u200b\u80fd\u591f\u200b\u5728\u200b\u6574\u4e2a\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u4f4e\u200b\u7535\u4f4d\u200b\u89e6\u53d1\u200b\u7684\u200b\u590d\u4f4d\u200b\u3002</p> <p>\u200b\u65f6\u949f\u200b\u6309\u7167\u200b\u539f\u6837\u200b\u63a5\u7ebf\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u9700\u8981\u200b\uff0c<code>RawModule</code> \u200b\u53ef\u4ee5\u200b\u548c\u200b <code>BlackBox</code> \u200b\u6df7\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u6bd4\u5982\u200b\u8fde\u63a5\u200b\u5dee\u5206\u200b\u65f6\u949f\u200b\u8f93\u5165\u200b\u3002 The clock is just wired as is, but if needed, RawModule can be used in conjunction with BlackBox to connect a differential clock input for example.</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#sequential-circuits","title":"\u65f6\u5e8f\u7535\u8def\u200b\uff08Sequential Circuits\uff09","text":"<p>Chisel \u200b\u652f\u6301\u200b\u7684\u200b\u6700\u200b\u7b80\u5355\u200b\u5f62\u5f0f\u200b\u7684\u200b\u72b6\u6001\u200b\u5143\u7d20\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e0a\u5347\u200b\u6cbf\u200b\u89e6\u53d1\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5982\u4e0b\u200b\u5b9e\u4f8b\u200b\u5316\u200b</p> <pre><code>val reg = RegNext(in)\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u7535\u8def\u200b\u6709\u200b\u7684\u200b\u8f93\u51fa\u200b\u4fe1\u53f7\u200b\u662f\u200b\u5ef6\u8fdf\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u7684\u200b\u8f93\u5165\u200b\u4fe1\u53f7\u200b <code>in</code> \u200b\u7684\u200b\u590d\u5236\u200b\u3002\u200b\u6ce8\u610f\u200b\u6211\u4eec\u200b\u4e0d\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u8fd9\u4e2a\u200b\u5bc4\u5b58\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b83\u200b\u5728\u200b\u8fd9\u6837\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u4ed6\u200b\u7684\u200b\u8f93\u5165\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u51fa\u6765\u200b\u3002\u200b\u5728\u200b\u5f53\u524d\u200b\u7248\u672c\u200b\u7684\u200b Chisel \u200b\u4e2d\u200b\uff0c\u200b\u65f6\u949f\u200b\u548c\u200b\u590d\u4f4d\u200b\u662f\u200b\u88ab\u200b\u9690\u5f0f\u200b\u5305\u542b\u200b\u5728\u200b\u9700\u8981\u200b\u5904\u200b\u7684\u200b\u5168\u5c40\u200b\u4fe1\u53f7\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u672a\u6307\u5b9a\u200b\u521d\u59cb\u503c\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u5728\u200b\u89e6\u53d1\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u65f6\u200b\u4e0d\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u5bc4\u5b58\u5668\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5f88\u5feb\u200b\u7684\u200b\u5b9a\u4e49\u200b\u8bb8\u591a\u200b\u6709\u7528\u200b\u7684\u200b\u7535\u8def\u200b\u7ed3\u6784\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4e0a\u5347\u200b\u6cbf\u200b\u63a2\u6d4b\u5668\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u7ed3\u6784\u200b\u4e00\u4e2a\u200b\u5e03\u5c14\u200b\u4fe1\u53f7\u200b <code>in</code> \u200b\u5e76\u200b\u5728\u200b\u5f53\u524d\u200b\u503c\u4e3a\u200b\u771f\u200b\uff0c\u200b\u4e4b\u524d\u200b\u503c\u4e3a\u200b\u5047\u65f6\u200b\u8f93\u51fa\u200b <code>true</code>\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>def risingedge(x: Bool) = x &amp;&amp; !RegNext(x)\n</code></pre> <p>\u200b\u8ba1\u6570\u5668\u200b\u65f6\u200b\u4e00\u79cd\u200b\u5f88\u200b\u91cd\u8981\u200b\u7684\u200b\u65f6\u5e8f\u7535\u8def\u200b\u3002\u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b\u5411\u4e0a\u200b\u8ba1\u6570\u5668\u200b\uff0c\u200b\u8ba1\u200b\u6570\u503c\u200b\u6700\u5927\u503c\u200b max\uff0c\u200b\u7136\u540e\u200b\u56de\u5230\u200b 0\uff0c\u200b\u6211\u4eec\u200b\u5199\u9053\u200b\uff1a</p> <pre><code>def counter(max: UInt) = {\n  val x = RegInit(0.asUInt(max.getWidth.W))\n  x := Mux(x === max, 0.U, x + 1.U)\n}\n</code></pre> <p>\u200b\u8ba1\u6570\u5668\u200b\u5bc4\u5b58\u5668\u200b\u662f\u200b\u5728\u200b\u8ba1\u6570\u5668\u200b\u51fd\u6570\u200b\u4e2d\u200b\u521b\u5efa\u200b\u7684\u200b\uff0c\u200b\u5176\u200b\u91cd\u7f6e\u200b\u503c\u4e3a\u200b 0\uff08\u200b\u5bbd\u5ea6\u200b\u8db3\u591f\u200b\u5927\u4ee5\u200b\u4fdd\u6301\u200b\u6700\u5927\u503c\u200b\uff09\uff0c\u200b\u5f53\u200b\u7535\u8def\u200b\u7684\u200b\u5168\u5c40\u200b\u91cd\u7f6e\u200b\u88ab\u200b\u89e6\u53d1\u200b\u65f6\u200b\uff0c\u200b\u5bc4\u5b58\u5668\u200b\u5c06\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u3002\u200b\u8ba1\u6570\u5668\u200b\u4e2d\u200b\u5bf9\u200b x \u200b\u7684\u200b := \u200b\u8d4b\u503c\u200b\u8fde\u63a5\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7ec4\u5408\u200b\u7535\u8def\u200b\uff0c\u200b\u8be5\u200b\u7535\u8def\u200b\u9012\u589e\u200b\u8ba1\u6570\u5668\u200b\u503c\u200b\uff0c\u200b\u5f53\u200b\u5b83\u200b\u8fbe\u5230\u200b\u6700\u5927\u503c\u200b\u5c06\u200b\u8fd4\u56de\u200b 0\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5f53\u200b x \u200b\u51fa\u73b0\u200b\u5728\u200b\u8d4b\u503c\u200b\u7684\u200b\u53f3\u4fa7\u200b\u65f6\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u8f93\u51fa\u200b\u88ab\u200b\u5f15\u7528\u200b\uff0c\u200b\u800c\u200b\u5f53\u200b x \u200b\u663e\u793a\u200b\u5728\u200b\u8d4b\u503c\u200b\u7684\u200b\u5de6\u4fa7\u200b\u65f6\u200b\uff0c\u200b\u5176\u200b\u8f93\u5165\u200b\u88ab\u200b\u5f15\u7528\u200b\u3002\u200b\u8ba1\u6570\u5668\u200b\u53ef\u200b\u7528\u4e8e\u200b\u6784\u5efa\u200b\u8bb8\u591a\u200b\u6709\u7528\u200b\u7684\u200b\u65f6\u5e8f\u7535\u8def\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5728\u200b\u8ba1\u6570\u5668\u200b\u8fbe\u5230\u200b 0 \u200b\u65f6\u200b\u8f93\u51fa\u200btrue\u200b\u6765\u200b\u6784\u5efa\u200b\u8109\u51b2\u200b\u53d1\u751f\u5668\u200b\uff1a</p> <pre><code>// \u200b\u6bcf\u200b n \u200b\u5468\u671f\u200b\u4ea7\u751f\u200b\u8109\u51b2\u200b\ndef pulse(n: UInt) = counter(n - 1.U) === 0.U\n</code></pre> <p>\u200b\u65b9\u6ce2\u200b\u53d1\u751f\u5668\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u8109\u51b2\u200b\u4e32\u6765\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8109\u51b2\u200b\u7ffb\u8f6c\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>// \u200b\u8f93\u5165\u200b\u4e3a\u200b\u771f\u65f6\u200b\u53cd\u8f6c\u200b\u5185\u90e8\u200b\u72b6\u6001\u200b\ndef toggle(p: Bool) = {\n  val x = RegInit(false.B)\n  x := Mux(p, !x, x)\n}\n// \u200b\u7ed9\u5b9a\u200b\u5468\u671f\u200b\u7684\u200b\u65b9\u6ce2\u200b\ndef squareWave(period: UInt) = toggle(pulse(period &gt;&gt; 1))\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#memories","title":"\u5b58\u50a8\u200b\uff08Memories\uff09","text":"<p>Chisel \u200b\u4e3a\u200b\u521b\u5efa\u200b\u53ea\u8bfb\u200b\u5b58\u50a8\u200b\u548c\u200b\u8bfb\u200b/\u200b\u5199\u200b\u5b58\u50a8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u652f\u6301\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#rom","title":"ROM","text":"<p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>VecInit</code> \u200b\u6784\u5efa\u200b\u4e00\u4e2a\u200b <code>Vec</code> \u200b\u6765\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u53ea\u8bfb\u200b\u5b58\u50a8\u200b\u3002<code>VecInit</code> \u200b\u80fd\u591f\u200b\u63a5\u53d7\u200b <code>Data</code> \u200b\u5b57\u200b\u9762\u503c\u200b\uff0c\u200b\u4e5f\u200b\u80fd\u200b\u63a5\u6536\u200b\u521d\u59cb\u5316\u200b ROM \u200b\u7684\u200b <code>Seq[Data]</code>\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b 1\uff0c2\uff0c3\uff0c4\uff0c8 \u200b\u7684\u200b\u5c0f\u200b ROM \u200b\u5e76\u200b\u4f7f\u7528\u200b\u8ba1\u6570\u5668\u200b\u4f5c\u4e3a\u200b\u5730\u5740\u200b\u751f\u6210\u5668\u200b\u6765\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u503c\u200b\uff1a</p> <pre><code>import chisel3._\nimport chisel3.util.Counter\nval m = VecInit(1.U, 2.U, 3.U, 4.U, 8.U)\nval c = Counter(m.length)\nc.inc()\nval r = m(c.value)\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5982\u4e0b\u200b\u521d\u59cb\u5316\u200b\u7684\u200b ROM \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b n \u200b\u503c\u200b\u6b63\u5f26\u200b\u67e5\u627e\u200b\u8868\u200b</p> <pre><code>import chisel3._\n\nval Pi = math.Pi\n\ndef sinTable(amp: Double, n:Int) = {\n  val times = \n    (0 until n).map(i =&gt; (i*2*Pi)/(n.toDouble-1) - Pi)\n  val inits = \n    times.map(t =&gt; Math.round(amp * math.sin(t).asSInt(32.W)))\n  VecInit(inits)\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b <code>amp</code> \u200b\u7528\u6765\u200b\u7f29\u653e\u200b\u5b58\u50a8\u200b\u5728\u200b ROM \u200b\u4e2d\u200b\u7684\u200b\u5b9a\u70b9\u200b\u503c\u200b</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#read-write-memories","title":"\u8bfb\u5199\u200b\u5b58\u50a8\u200b\uff08Read-Write Memories\uff09","text":"<p>\u200b\u5b58\u50a8\u200b\u5728\u200b Chise \u200b\u4e2d\u200b\u88ab\u200b\u7279\u6b8a\u200b\u5904\u7406\u200b\u56e0\u4e3a\u200b\u5b58\u50a8\u200b\u7684\u200b\u786c\u4ef6\u200b\u5b9e\u73b0\u200b\u5dee\u5f02\u200b\u5f88\u5927\u200b\u3002\u200b\u6bd4\u5982\u200b FPGA \u200b\u7684\u200b\u5b58\u50a8\u200b\u548c\u200b ASIC \u200b\u7684\u200b\u5b58\u50a8\u200b\u5b8c\u5168\u200b\u4e0d\u540c\u200b\u3002Chisel \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u5b58\u50a8\u200b\u7684\u200b\u62bd\u8c61\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6620\u5c04\u200b\u5230\u200b\u4efb\u4f55\u200b\u7b80\u5355\u200b\u7684\u200b Verilog \u200b\u884c\u4e3a\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6620\u5c04\u200b\u5230\u200b IP \u200b\u5382\u5546\u200b\u6216\u200b\u4ee3\u5de5\u5382\u200b\u63d0\u4f9b\u200b\u7684\u200b\u5916\u90e8\u200b\u5b58\u50a8\u200b\u751f\u6210\u5668\u200b\u751f\u6210\u200b\u7684\u200b\u5b58\u50a8\u6a21\u5757\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#ram-syncreadmem","title":"\u540c\u6b65\u200b\u8bfb\u200b RAM <code>SyncReadMem</code>\uff1a\u200b\u540c\u6b65\u200b\u8bfb\u53d6\u200b\uff0c\u200b\u540c\u6b65\u200b\u5199\u5165","text":"<p>Chisel \u200b\u5bf9\u4e8e\u200b\u540c\u6b65\u200b\u8bfb\u200b\uff0c\u200b\u540c\u6b65\u200b\u5199\u200b\u5b58\u50a8\u200b\u6709\u200b\u4e00\u4e2a\u200b\u53eb\u200b <code>SyncReadMem</code> \u200b\u7684\u200b\u7ed3\u6784\u200b\u3002<code>SyncReadMem</code> \u200b\u53ef\u80fd\u200b\u4f1a\u200b\u88ab\u200b\u7ec4\u6210\u200b\u4e00\u4e2a\u200b\u6280\u672f\u200b SRAMs\uff08\u200b\u800c\u200b\u4e0d\u662f\u200b\u5bc4\u5b58\u5668\u200b\u7ec4\u200b\uff09</p> <p>\u200b\u5982\u679c\u200b\u5728\u200b\u540c\u4e00\u200b\u65f6\u949f\u200b\u6cbf\u200b\u4e0a\u200b\u540c\u65f6\u200b\u5199\u5165\u200b\u548c\u200b\u987a\u5e8f\u200b\u8bfb\u53d6\u200b\u540c\u4e00\u200b\u5b58\u50a8\u5668\u200b\u5730\u5740\u200b\uff0c\u200b\u6216\u8005\u200b\u5982\u679c\u200b\u6e05\u9664\u200b\u4e86\u200b\u987a\u5e8f\u200b\u8bfb\u53d6\u200b\u4f7f\u80fd\u200b\uff0c\u200b\u5219\u200b\u8bfb\u53d6\u6570\u636e\u200b\u672a\u5b9a\u4e49\u200b\u3002</p> <p>\u200b\u8bfb\u6570\u636e\u200b\u7aef\u53e3\u200b\u7684\u200b\u503c\u200b\u4e0d\u80fd\u200b\u4fdd\u8bc1\u200b\u5728\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8bfb\u53d6\u200b\u5468\u671f\u200b\u4e4b\u524d\u200b\u4e0d\u200b\u6539\u53d8\u200b\u3002\u200b\u5982\u679c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u671f\u671b\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c\u200b\u5fc5\u987b\u200b\u6dfb\u52a0\u200b\u5916\u90e8\u200b\u903b\u8f91\u200b\u6765\u200b\u4fdd\u6301\u200b\u4e0a\u6b21\u200b\u8bfb\u53d6\u200b\u7684\u200b\u503c\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#read-portwrite-port","title":"\u8bfb\u200b\u7aef\u53e3\u200b/\u200b\u5199\u200b\u7aef\u53e3\u200b\uff08Read port/write port\uff09","text":"<p><code>SyncReadMems</code> \u200b\u662f\u200b\u4f7f\u7528\u200b UInt \u200b\u7d22\u5f15\u200b\u521b\u5efa\u200b\u7684\u200b\u3002\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8bfb\u200b\u7aef\u53e3\u200b\u548c\u200b\u4e00\u4e2a\u200b\u5199\u200b\u7aef\u53e3\u200b\u7684\u200b 1024 \u200b\u5927\u5c0f\u200b\u7684\u200b SRAM \u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5982\u4e0b\u200b\u8868\u8fbe\u200b\uff1a</p> <pre><code>import chisel3._\nclass ReadWriteSmem extends Module {\n  val width: Int = 32\n  val io = IO(new Bundle {\n    val enable = Input(Bool())\n    val write = Input(Bool())\n    val addr = Input(Bool())\n    val dataIn = Input(UInt(width.W))\n    val dataOut = Output(UInt(width.W))\n  })\n\n  val mem = SyncReadMem(1024, UInt(width.W))\n  // \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u8bfb\u200b\u7aef\u53e3\u200b\u4e00\u4e2a\u200b\u5199\u200b\u7aef\u53e3\u200b\n  mem.write(io.addr, io.datain)\n  io.dataOut := mem.read(io.addr, io.enable)\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u5e26\u200b\u63a9\u7801\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5199\u200b\u7aef\u53e3\u200b/\u200b\u4e00\u4e2a\u200b\u8bfb\u200b\u7aef\u53e3\u200b <code>SyncReadMem</code> \u200b\u7684\u200b\u6ce2\u5f62\u200b\u793a\u4f8b\u200b\u3002\u200b\u4fe1\u53f7\u200b\u540d\u79f0\u200b\u4e0e\u200b\u4e3a\u200b <code>SyncReadMem</code> \u200b\u751f\u6210\u200b\u7684\u200b\u5bfc\u7ebf\u200b\u540d\u79f0\u200b\u4e0d\u540c\u200b\u3002\u200b\u901a\u8fc7\u200b\u63a9\u7801\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4e5f\u200b\u6709\u200b\u53ef\u80fd\u200b\u751f\u6210\u200b\u5177\u6709\u200b\u4ee5\u4e0b\u200b\u884c\u4e3a\u200b\u7684\u200b\u591a\u4e2a\u200bRTL\u200b\u9635\u5217\u200b\u3002</p> <p></p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#single-ported","title":"\u5355\u200b\u7aef\u53e3\u200b\uff08Single-ported\uff09","text":"<p>\u200b\u5f53\u8bfb\u200b\u548c\u200b\u5199\u200b\u6761\u4ef6\u200b\u5728\u200b\u540c\u4e00\u65f6\u95f4\u200b\u94fe\u4e2d\u200b\u4e92\u65a5\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u63a8\u65ad\u51fa\u200b\u5355\u200b\u7aef\u53e3\u200bSRAM\uff1a</p> <pre><code>import chisel3._\n\nclass RWSmem extends Modules {\n  val width: Int = 32\n  val io = (new Bundle {\n    val enable = Input(Bool())\n    val write = Input(Bool())\n    val addr = Input(Bool())\n    val dataIn = Input(UInt(width.W))\n    val dataOut = Output(UInt(width.W))\n  })\n\n  val mem = SyncReadMem(1024, UInt(width.W))\n  io.dataOut := DontCare\n  when(io.enable) {\n    val rdwrPort = mem(io.addr)\n    when (io.write) { rdwrPort := io.dataIn }\n      .otherwise    { io.dataOut := rdwrPort }\n  }\n}\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u7684\u200b <code>DontCare</code> \u200b\u662f\u200b\u4e3a\u4e86\u200b\u8ba9\u200b Chisel \u200b\u7684\u200b\u672a\u200b\u8fde\u63a5\u7ebf\u200b\u68c0\u6d4b\u200b\u610f\u8bc6\u200b\u5230\u200b\u8fb9\u200b\u5199\u200b\u8fb9\u200b\u8bfb\u200b\u662f\u200b\u672a\u5b9a\u4e49\u200b\u7684\u200b\u3002\uff09</p> <p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5177\u6709\u200b\u63a9\u7801\u200b\u7684\u200b\u5355\u4e2a\u200b\u8bfb\u200b/\u200b\u5199\u200b\u7aef\u53e3\u200b\u6ce2\u5f62\u200b\u7684\u200b\u793a\u4f8b\u200b\uff08\u200b\u540c\u6837\u200b\uff0c\u200b\u751f\u6210\u200b\u7684\u200b\u4fe1\u53f7\u200b\u540d\u79f0\u200b\u548c\u200b\u9635\u5217\u200b\u6570\u91cf\u200b\u53ef\u80fd\u200b\u4e0d\u540c\u200b\uff09\uff1a</p> <p></p> <p>\u200b\u5355\u200b\u7aef\u53e3\u200bSRAM\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200breadWrite\u200b\u8c03\u7528\u200b\u663e\u5f0f\u200b\u751f\u6210\u200b\uff0c\u200b\u8be5\u200b\u8c03\u7528\u200b\u4ea7\u751f\u200b\u4e00\u4e2a\u200b\u5355\u8bfb\u200b/\u200b\u5199\u8bbf\u95ee\u200b\u5668\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>class RDWR_Smem extends Module {\n  val width: Int = 32\n  val io = IO(new Bundle {\n    val enable = Input(Bool())\n    val write = Input(Bool())\n    val addr = Input(UInt(10.W))\n    val dataIn = Input(UInt(width.W))\n    val dataOut = Output(UInt(width.W))\n  })\n\n  val mem = SyncReadMem(1024, UInt(width.W))\n  io.dataOut := mem.readWrite(io.addr, io.dataIn, io.enable, io.write)\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#mem","title":"<code>Mem</code>: \u200b\u5f02\u6b65\u200b\u8bfb\u53d6\u200b\uff0c\u200b\u540c\u6b65\u200b\u5199\u5165","text":"<p>Chisel\u200b\u901a\u8fc7\u200b <code>Mem</code> \u200b\u7ed3\u6784\u200b\u652f\u6301\u200b\u968f\u673a\u5b58\u53d6\u200b\u5b58\u50a8\u5668\u200b\u3002\u200b\u5bf9\u200b <code>Mem</code> \u200b\u7684\u200b\u5199\u5165\u200b\u662f\u200b\u7ec4\u200b\u5f02\u6b65\u200b\u8bfb\u53d6\u200b\u3001\u200b\u540c\u6b65\u200b\u5199\u5165\u200b\u3002\u200b\u7531\u4e8e\u200b\u73b0\u4ee3\u200b\u6280\u672f\u200b\uff08FPGA\u3001ASIC\uff09\u200b\u4e2d\u200b\u7684\u200b\u5927\u591a\u6570\u200b SRAM \u200b\u5f80\u5f80\u200b\u4e0d\u518d\u200b\u652f\u6301\u200b\u5f02\u6b65\u200b\u8bfb\u53d6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fd9\u4e9b\u200b <code>Mem</code> \u200b\u53ef\u80fd\u200b\u4f1a\u200b\u88ab\u200b\u5408\u6210\u200b\u4e3a\u200b\u5bc4\u5b58\u5668\u200b\u7ec4\u200b\u3002</p> <p>\u200b\u521b\u5efa\u200b\u4e0a\u9762\u200b\u793a\u4f8b\u200b\u7684\u200b\u5f02\u6b65\u200b\u8bfb\u53d6\u200b\u7248\u672c\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b <code>SyncReadMem</code> \u200b\u66ff\u6362\u200b\u4e3a\u200b <code>Mem</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#masks","title":"\u63a9\u7801\u200b\uff08Masks\uff09","text":"<p>Chisel \u200b\u5b58\u50a8\u5668\u200b\u8fd8\u200b\u652f\u6301\u200b\u5b50\u5b57\u200b\u7684\u200b\u5199\u200b\u63a9\u7801\u200b\u3002\u200b\u5982\u679c\u200b\u5b58\u50a8\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u662f\u200b\u5411\u91cf\u200b\uff0cChisel \u200b\u5c06\u200b\u63a8\u65ad\u200b\u63a9\u7801\u200b\u3002\u200b\u8981\u200b\u63a8\u65ad\u200b\u63a9\u7801\u200b\uff0c\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u521b\u5efa\u200b\u5199\u5165\u200b\u7aef\u53e3\u200b\u7684\u200b\u5199\u5165\u200b\u51fd\u6570\u200b\u7684\u200b\u63a9\u7801\u200b\u53c2\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u8bbe\u7f6e\u200b\u4e86\u200b\u76f8\u5e94\u200b\u7684\u200b\u63a9\u7801\u200b\u4f4d\u200b\uff0c\u200b\u5219\u200b\u5199\u5165\u200b\u7ed9\u5b9a\u200b\u7684\u200b\u63a9\u7801\u200b\u957f\u5ea6\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u5982\u679c\u200b\u63a9\u7801\u200b\u7684\u200b\u7b2c\u200b 0 \u200b\u4f4d\u4e3a\u200b\u771f\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u628a\u200b\u6570\u636e\u200b\u7684\u200b\u8f83\u200b\u4f4e\u5b57\u8282\u200b\u5199\u5165\u200b\u76f8\u5e94\u200b\u7684\u200b\u5730\u5740\u200b\u3002</p> <pre><code>import chisel3._\nclass MaskedReadWriteSmem extends Module {\n  val width: Int = 8\n  val io = IO(new Bundle {\n    val enable = Input(Bool())\n    val write = Input(Bool())\n    val addr = Input(UInt(10.W))\n    val mask = Input(Vec(4, Bool()))\n    val dataIn = Input(Vec(4, UInt(width.W)))\n    val dataOut = Output(Vec(4, UInt(width.W)))\n  })\n\n  // \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5b57\u8282\u200b\u63a9\u7801\u200b\u7684\u200b 32 \u200b\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u5bf8\u5c3a\u200b\n  val mem = SyncReadMem(1024, Vec(4, UInt(width.W)))\n  // \u200b\u63a9\u7801\u200b\u5199\u5165\u200b\n  mem.write(io.addr, io.dataIn, io.mask)\n  io.dataOut := mem.read(io.addr, io.enable)\n}\n</code></pre> <p>\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u8bfb\u5199\u200b\u7aef\u53e3\u200b\u7684\u200b\u63a9\u7801\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>import chisel3._\nclass MaskedRWSmem extends Module {\n  val width: Int = 32\n  val io = IO(new Bundle {\n    val enable = Input(Bool())\n    val write = Input(Bool())\n    val mask = Input(Vec(2, Bool()))\n    val addr = Input(UInt(10.W))\n    val dataIn = Input(Vec(2, UInt(width.W)))\n    val dataOut = Output(Vec(2, UInt(width.W)))\n  })\n\n  val mem = SyncReadMem(1024, Vec(2, UInt(width.W)))\n  io.dataOut := DontCare\n  when(io.enable) {\n    val rdwrPort = mem(io.addr)\n    when (io.write) {\n      when(io.mask(0)) {\n        rdwrPort(0) := io.dataIn(0)\n      }\n      when(io.mask(1)) {\n        rdwrPort(1) := io.dataIn(1)\n      }\n    }.otherwise { io.dataOut := rdwrPort }\n  }\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#memory-initialization","title":"\u5b58\u50a8\u200b\u521d\u59cb\u5316\u200b\uff08Memory Initialization\uff09","text":"<p>Chisel\u200b\u5b58\u50a8\u5668\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u5916\u90e8\u200b\u4e8c\u8fdb\u5236\u200b\u6216\u200b\u5341\u516d\u8fdb\u5236\u200b\u6587\u4ef6\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u8be5\u200b\u6587\u4ef6\u200b\u53d1\u51fa\u200b\u7528\u4e8e\u200b\u5408\u6210\u200b\u6216\u200b\u6a21\u62df\u200b\u7684\u200b\u6b63\u786e\u200bVerilog\u3002\u200b\u6709\u200b\u591a\u79cd\u200b\u521d\u59cb\u5316\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u6709\u5173\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u200b\u67e5\u770b\u200b\u5173\u4e8e\u200b\u52a0\u8f7d\u200b\u5185\u5b58\u200b\u529f\u80fd\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u6587\u6863\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#interfaces-connections","title":"\u63a5\u53e3\u200b\u548c\u200b\u8fde\u63a5\u200b\uff08Interfaces &amp; Connections\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u5728\u200b\u5b9a\u4e49\u200b\u6a21\u5757\u200b\u7684\u200bIO\u200b\u65f6\u200b\u5b9a\u4e49\u200b\u548c\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u63a5\u53e3\u7c7b\u200b\u5f88\u200b\u6709\u7528\u200b\u3002\u200b\u9996\u5148\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\uff0c\u200b\u63a5\u53e3\u7c7b\u200b\u4fc3\u8fdb\u200b\u91cd\u7528\u200b\uff0c\u200b\u5141\u8bb8\u200b\u7528\u6237\u200b\u4ee5\u200b\u6709\u7528\u200b\u7684\u200b\u5f62\u5f0f\u200b\u6355\u83b7\u200b\u4e00\u6b21\u6027\u200b\u7684\u200b\u901a\u7528\u200b\u63a5\u53e3\u200b\u3002</p> <p>\u200b\u7b2c\u4e8c\u200b\uff0c\u200b\u63a5\u53e3\u200b\u5141\u8bb8\u200b\u7528\u6237\u200b\u901a\u8fc7\u200b\u652f\u6301\u200b\u751f\u4ea7\u8005\u200b\u548c\u200b\u6d88\u8d39\u8005\u200b\u6a21\u5757\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6279\u91cf\u200b\u8fde\u63a5\u200b\u663e\u8457\u200b\u7684\u200b\u51cf\u5c11\u200b\u5e03\u7ebf\u200b\u3002\u200b\u6700\u540e\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e00\u5904\u200b\u5730\u65b9\u200b\u5bf9\u200b\u5927\u578b\u200b\u63a5\u53e3\u200b\u8fdb\u884c\u200b\u66f4\u6539\u200b\uff0c\u200b\u51cf\u5c11\u200b\u6dfb\u52a0\u200b\u6216\u200b\u5220\u9664\u200b\u63a5\u53e3\u200b\u90e8\u5206\u200b\u65f6\u200b\u7684\u200b\u66f4\u65b0\u200b\u6570\u91cf\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b Chisel \u200b\u6709\u200b\u4e00\u4e9b\u200b\u5185\u7f6e\u200b\u7684\u200b\u6807\u51c6\u63a5\u53e3\u200b\uff0c\u200b\u5e94\u8be5\u200b\u5c3d\u91cf\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u63a5\u53e3\u200b\u5b9e\u73b0\u200b\u76f8\u4e92\u200b\u64cd\u4f5c\u200b\uff08\u200b\u6bd4\u5982\u200b\uff0cDecoupled\uff09</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#ports-subclasses-nesting","title":"\u7aef\u53e3\u200b\uff1a\u200b\u5b50\u7c7b\u200b\u548c\u200b\u7f51\u7edc\u200b\uff08Ports: Subclasses &amp; Nesting\uff09","text":"<p>\u200b\u50cf\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u770b\u5230\u200b\u7684\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b <code>Bundle</code> \u200b\u7684\u200b\u5b50\u7c7b\u200b\u5b9a\u4e49\u200b\u4ed6\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5982\u4e0b\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u63e1\u624b\u200b\u6570\u636e\u200b\u7684\u200b\u7b80\u5355\u200b\u8fde\u63a5\u200b\uff1a</p> <pre><code>class SimpleLink extends Bundle {\n  val data = Output(UInt(16.W))\n  val valid = Output(Bool())\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6269\u5c55\u200b\u4e00\u4e2a\u200b\u5947\u5076\u6821\u9a8c\u200b\u4f4d\u200b\u3002</p> <pre><code>class PLink extends SimpleLink {\n  val parity = Output(UInt(5.W))\n}\n</code></pre> <p>\u200b\u901a\u5e38\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7ee7\u627f\u200b\u5c06\u200b\u4ed6\u4eec\u200b\u7684\u200b\u63a5\u53e3\u200b\u7ec4\u7ec7\u200b\u8fdb\u200b\u5c42\u6b21\u7ed3\u6784\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u4ece\u200b\u90a3\u91cc\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5c06\u200b\u4e24\u4e2a\u200b PLink \u200b\u5d4c\u5957\u200b\u5230\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b FilterIO \u200b\u4e2d\u6765\u200b\u5b9a\u4e49\u200b\u6ee4\u6ce2\u5668\u200b\u63a5\u53e3\u200b\uff1a From there we can define a filter interface by nesting two PLinks into a new FilterIO bundle:</p> <pre><code>class FilterIO extends Bundle {\n  val x = Flipped(new PLink)\n  val y = new PLink\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b\u9012\u5f52\u200b\u7684\u200b\u7ffb\u8f6c\u200b\u4e86\u200b\u63a5\u53e3\u200b\u7684\u200b\u65b9\u5411\u200b\uff0c\u200b\u5c06\u200b\u8f93\u5165\u200b\u53d8\u4e3a\u200b\u8f93\u51fa\u200b\uff0c\u200b\u8f93\u51fa\u200b\u53d8\u4e3a\u200b\u8f93\u5165\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b module \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u6ee4\u6ce2\u5668\u200b\u7c7b\u200b\u3002</p> <pre><code>class Filter extends Module {\n  val io = IO(new FilterIO)\n  // ...\n}\n</code></pre> <p>\u200b\u5728\u200b io \u200b\u57df\u200b\u4e2d\u200b\u5305\u542b\u200b FilterIO\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#bundle-vectors","title":"Bundle Vectors","text":"<p>\u200b\u9664\u4e86\u200b\u5355\u4e2a\u200b\u5143\u7d20\u200b\u4e4b\u5916\u200b\uff0c\u200b\u5143\u7d20\u200b\u7684\u200b\u5411\u91cf\u200b\u5f62\u6210\u200b\u4e86\u200b\u66f4\u200b\u4e30\u5bcc\u200b\u7684\u200b\u5c42\u6b21\u200b\u63a5\u53e3\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u521b\u5efa\u200b\u5177\u6709\u200b\u8f93\u5165\u200b\u5411\u91cf\u200b\u7684\u200b\u4ea4\u53c9\u5f00\u5173\u200b\uff0c\u200b\u4ea7\u751f\u200b\u8f93\u51fa\u200b\u5411\u91cf\u200b\uff0c\u200b\u5e76\u200b\u7531\u200b UInt \u200b\u8f93\u5165\u200b\u9009\u62e9\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b Vec \u200b\u6784\u9020\u51fd\u6570\u200b\uff1a</p> <pre><code>import chisel3.util.log2Ceil\nclass CrossbarIo(n: Int) extends Bundle {\n  val in = Vec(n, Flipped(new PLink))\n  val sel = Input(UInt(log2Ceil(n).W))\n  val out = Vec(n, new PLink)\n}\n</code></pre> <p>\u200b\u5176\u4e2d\u200b Vec \u200b\u5c06\u200b\u5927\u5c0f\u200b\u4f5c\u4e3a\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5c06\u200b\u8fd4\u56de\u200b\u7aef\u53e3\u200b\u7684\u200b\u5757\u200b\u4f5c\u4e3a\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#bulk-connections","title":"\u6279\u91cf\u200b\u8fde\u63a5\u200b\uff08Bulk Connections\uff09","text":"<p>\u200b\u4e00\u65e6\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u63a5\u53e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u80fd\u200b\u901a\u8fc7\u200b <code>MonoConnect</code> \u200b\u64cd\u4f5c\u7b26\u200b\uff08<code>:=</code>\uff09\u200b\u6216\u8005\u200b <code>Biconnect</code> \u200b\u64cd\u4f5c\u7b26\u200b\uff08<code>&lt;&gt;</code>\uff09\u200b\u8fde\u63a5\u200b\u5230\u200b\u4ed6\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#monoconnect-algorithm","title":"<code>MonoConnect</code> Algorithm","text":"<p><code>MonoConnect.connect</code>\uff0c\u200b\u6216\u8005\u200b <code>:=</code>\uff0c\u200b\u6309\u200b\u5143\u7d20\u200b\u6267\u884c\u200b\u5355\u5411\u200b\u8fde\u63a5\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u53ef\u200b\u4ea4\u6362\u200b\u7684\u200b\u3002\u200b\u5728\u200b\u8c03\u7528\u200b\u4e4b\u524d\u200b\u5df2\u7ecf\u200b\u786e\u5b9a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u660e\u786e\u200b\u7684\u200b\u6e90\u200b\u548c\u200b\u6c47\u200b\u3002</p> <p>\u200b\u8fd9\u4e2a\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u200b\u5c06\u200b\u5411\u4e0b\u200b\u9012\u5f52\u200b\u5230\u200b\u5de6\u4fa7\u200b\u7684\u200b Data\uff08\u200b\u5e26\u6709\u200b\u53f3\u4fa7\u200b\u7684\u200b Data\uff09\u3002\u200b\u5982\u679c\u200b\u901a\u8fc7\u200b\u5de6\u4fa7\u200b\u7684\u200b\u79fb\u52a8\u200b\u65e0\u6cd5\u200b\u5728\u200b\u53f3\u4fa7\u200b\u5339\u914d\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u5f15\u53d1\u200b\u5f02\u5e38\u200b\u3002\u200b\u53f3\u4fa7\u200b\u5141\u8bb8\u200b\u6709\u200b\u989d\u5916\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u3002Vec \u200b\u7684\u200b\u5927\u5c0f\u200b\u5fc5\u987b\u200b\u5b8c\u5168\u76f8\u540c\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b LHS \u200b\u5143\u7d20\u200b\u5fc5\u987b\u200b\u662f\u200b\u53ef\u200b\u5199\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u5fc5\u987b\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5185\u90e8\u200b\u53ef\u200b\u5199\u200b\u8282\u70b9\u200b\uff08Reg or Wire\uff09</li> <li>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u51fa\u200b</li> <li>\u200b\u662f\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u7684\u200b\u5b50\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u5165\u200b</li> </ul> <p>\u200b\u6ce8\u610f\u200b RHS \u200b\u5143\u7d20\u200b\u5fc5\u987b\u200b\u662f\u200b\u53ef\u8bfb\u200b\u7684\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u5fc5\u987b\u200b\u5305\u542b\u200b\uff1a</p> <ul> <li>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5185\u90e8\u200b\u53ef\u200b\u8bfb\u200b\u8282\u70b9\u200b\uff08Reg, Wire, Op\uff09</li> <li>\u200b\u662f\u200b\u5b57\u9762\u200b\u91cf\u200b</li> <li>\u200b\u662f\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u7684\u200b\u7aef\u53e3\u200b\u6216\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u5b50\u200b\u6a21\u5757\u200b\u7684\u200b\u7aef\u53e3\u200b</li> </ul>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#biconnect-algorithm","title":"<code>BiConnect</code> Algorithm","text":"<p><code>BiConnect.connect</code>\uff0c\u200b\u6216\u8005\u200b <code>&lt;&gt;</code>\uff0c\u200b\u6309\u200b\u5143\u7d20\u200b\u6267\u884c\u200b\u53cc\u5411\u200b\u8fde\u63a5\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u81ea\u53d8\u91cf\u200b\u662f\u200b\u5de6\u200b\u548c\u200b\u53f3\u200b\uff08\u200b\u800c\u200b\u4e0d\u662f\u200b\u6e90\u548c\u6c47\u200b\uff09\uff0c\u200b\u56e0\u6b64\u200b\u76ee\u7684\u200b\u662f\u200b\u4f7f\u200b\u8fd0\u7b97\u200b\u5177\u6709\u200b\u4ea4\u6362\u200b\u6027\u200b\u3002\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u200b\u5c06\u200b\u5411\u4e0b\u200b\u9012\u5f52\u200b\u5230\u200b\u5de6\u4fa7\u200b\u7684\u200bData\uff08\u200b\u5e26\u6709\u200b\u53f3\u4fa7\u200b\u7684\u200bData\uff09\u3002\u200b\u5982\u679c\u200b\u5de6\u4fa7\u200b\u7684\u200b\u79fb\u52a8\u200b\u65e0\u6cd5\u200b\u5728\u200b\u53f3\u4fa7\u200b\u5339\u914d\u200b\uff0c\u200b\u6216\u8005\u200b\u53f3\u4fa7\u200b\u6709\u200b\u989d\u5916\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u5f15\u53d1\u200b\u5f02\u5e38\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u6211\u4eec\u200b\u5f3a\u70c8\u5efa\u8bae\u200b\u4f7f\u7528\u200b <code>Connectable</code> \u200b\u64cd\u4f5c\u7b26\u200b\u7f16\u5199\u200b\u4ee3\u7801\u200b\u800c\u200b\u4e0d\u662f\u200b\u4f7f\u7528\u200b <code>&lt;&gt;</code>\u3002</p> <p>\u200b\u4f7f\u7528\u200b\u53cc\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b <code>&lt;&gt;</code>\uff0c \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u6ee4\u6ce2\u5668\u200b\u7ec4\u5408\u6210\u200b\u4e00\u4e2a\u200b\u6ee4\u6ce2\u5668\u200b\uff1a</p> <pre><code>class Block extends Module {\n  val io = IO(new FilterIO)\n  val f1 = Module(new Filter)\n  val f2 = Module(new Filter)\n  f1.io.x &lt;&gt; io.x\n  f1.io.y &lt;&gt; f2.io.x\n  f2.io.y &lt;&gt; io.y\n}\n</code></pre> <p>\u200b\u53cc\u5411\u200b\u6279\u91cf\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b <code>&lt;&gt;</code> \u200b\u5c06\u200b\u540c\u540d\u200b\u7684\u200b\u53f6\u200b\u7aef\u53e3\u200b\u76f8\u4e92\u8fde\u63a5\u200b\u3002Bundle \u200b\u7684\u200b Scala \u200b\u7c7b\u578b\u200b\u4e0d\u200b\u9700\u8981\u200b\u5339\u914d\u200b\u3002\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u547d\u540d\u200b\u7684\u200b\u4fe1\u53f7\u200b\u5728\u200b\u53e6\u4e00\u4fa7\u200b\u4e0d\u200b\u5b58\u5728\u200b\uff0cChisel \u200b\u4f1a\u200b\u50cf\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e00\u6837\u200b\u62a5\u9519\u200b\uff1a</p> <pre><code>class NotReallyAFilterIO extends Bundle {\n  val x = Flipped(new PLink)\n  val y = new PLink\n  val z = Output(new Bool())\n}\nclass Block2 extends Module {\n  val io1 = IO(new FilterIO)\n  val io2 = IO(Flipped(new NotReallyAFilterIO))\n\n  io1 &lt;&gt; io2\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u4f1a\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u7684\u200b\u62a5\u9519\u200b\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Block2)\n// chisel3.package$ChiselException: Connection between left (Block2.io1: IO[FilterIO]) and source (Block2.io2: IO[NotReallyAFilterIO]) failed @.z: Left Record missing field (z).\n//  at ... ()\n//  at repl.MdocSession$MdocApp$Block2.&lt;init&gt;(interfaces-and-connections.md:89)\n//  at repl.MdocSession$MdocApp$$anonfun$22$$anonfun$apply$20.apply(interfaces-and-connections.md:97)\n//  at repl.MdocSession$MdocApp$$anonfun$22$$anonfun$apply$20.apply(interfaces-and-connections.md:97)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u53cc\u5411\u200b\u8fde\u63a5\u200b\u5e94\u4ec5\u200b\u4e0e\u200b**\u200b\u5b9a\u5411\u200b\u5143\u7d20\u200b**\uff08\u200b\u5982\u200b IO\uff09\u200b\u4e00\u8d77\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4e0d\u200b\u652f\u6301\u200b\u8fde\u63a5\u200b\u4e24\u6761\u7ebf\u200b\uff0c\u200b\u56e0\u4e3a\u200b Chisel \u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u81ea\u52a8\u200b\u786e\u5b9a\u200b\u65b9\u5411\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u653e\u7f6e\u200b\u4e24\u6761\u200b\u4e34\u65f6\u200b\u7535\u7ebf\u200b\u5e76\u200b\u5728\u200b\u6b64\u5904\u200b\u8fde\u63a5\u200b\u5b83\u4eec\u200b\u662f\u200b\u884c\u4e0d\u901a\u200b\u7684\u200b\uff0c\u200b\u5373\u4f7f\u200b\u4ece\u200b\u7aef\u70b9\u200b\u53ef\u4ee5\u200b\u77e5\u9053\u200b\u65b9\u5411\u200b\uff1a</p> <pre><code>class BlockWithTemporaryWires extends Module {\n  val io = IO(new FilterIO)\n  val f1 = Module(new Filter)\n  val f2 = Module(new Filter)\n  f1.io.x &lt;&gt; io.x\n val tmp1 = Wire(new FilterIO)\n val tmp2 = Wire(new FilterIO)\n  f1.io.y &lt;&gt; tmp1\n  tmp1 &lt;&gt; tmp2\n  tmp2 &lt;&gt; f2.io.x\n  f2.io.y &lt;&gt; io.y\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u4f1a\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u7684\u200b\u62a5\u9519\u200b\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new BlockWithTemporaryWires)\n// chisel3.package$ChiselException: Connection between left (Filter.io.y: IO[PLink]) and source (BlockWithTemporaryWires.tmp1: Wire[FilterIO]) failed @.y: Left Record missing field (y).\n//  at ... ()\n//  at repl.MdocSession$MdocApp$BlockWithTemporaryWires.&lt;init&gt;(interfaces-and-connections.md:113)\n//  at repl.MdocSession$MdocApp$$anonfun$33$$anonfun$apply$29.apply(interfaces-and-connections.md:124)\n//  at repl.MdocSession$MdocApp$$anonfun$33$$anonfun$apply$29.apply(interfaces-and-connections.md:124)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u6709\u5173\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u548c\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b</p> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5f53\u200b\u4f7f\u7528\u200b <code>Chisel._</code>\uff08\u200b\u517c\u5bb9\u200b\u6a21\u5f0f\u200b\uff09\u200b\u800c\u200b\u4e0d\u662f\u200b <code>chisel3._</code> \u200b\u65f6\u200b\uff0c<code>:=</code> \u200b\u64cd\u4f5c\u7b26\u200b\u4ee5\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>&lt;&gt;</code> \u200b\u7684\u200b\u53cc\u5411\u200b\u65b9\u5f0f\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5b8c\u5168\u76f8\u540c\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#the-standard-ready-valid-interface-readyvalidio-decoupled","title":"The standard ready-valid interface (ReadyValidIO / Decoupled)","text":"<p>Chisel \u200b\u4e3a\u200b ready-valid \u200b\u63a5\u53e3\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6807\u51c6\u63a5\u53e3\u200b\u3002\u200b\u5c31\u7eea\u200b\u6709\u6548\u200b\u63a5\u53e3\u200b\u7531\u200b\u5c31\u7eea\u200b\u4fe1\u53f7\u200b\u3001\u200b\u6709\u6548\u200b\u4fe1\u53f7\u200b\u548c\u200b\u4e00\u4e9b\u200b\u5b58\u50a8\u200b\u5728\u4f4d\u200b\u4e2d\u200b\u7684\u200b\u6570\u636e\u200b\u7ec4\u6210\u200b\u3002\u200b\u5c31\u7eea\u200b\u4f4d\u200b\u8868\u793a\u200b\u6d88\u8d39\u8005\u200b\u5df2\u200b\u51c6\u5907\u200b\u597d\u200b\u6d88\u8d39\u200b\u6570\u636e\u200b\u3002\u200b\u6709\u6548\u200b\u4f4d\u200b\u6307\u793a\u200b\u751f\u4ea7\u8005\u200b\u5728\u4f4d\u200b\u4e0a\u200b\u5177\u6709\u200b\u6709\u6548\u200b\u6570\u636e\u200b\u3002\u200b\u5f53\u200b <code>ready</code> \u200b\u548c\u200b <code>valid</code> \u200b\u90fd\u200b\u88ab\u200b\u65ad\u8a00\u200b\u65f6\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u53d1\u751f\u200b\u4ece\u200b\u751f\u4ea7\u8005\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\u7684\u200b\u6570\u636e\u4f20\u8f93\u200b\u3002\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b9\u4fbf\u200b\u7684\u200b\u65b9\u6cd5\u200b <code>fire</code>\uff0c\u200b\u5982\u679c\u200b <code>ready</code> \u200b\u548c\u200b <code>valid</code> \u200b\u90fd\u200b\u88ab\u200b\u65ad\u8a00\u200b\uff0c\u200b\u5b83\u200b\u5c31\u200b\u4f1a\u200b\u88ab\u200b\u65ad\u8a00\u200b\u3002</p> <p>\u200b\u901a\u5e38\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u51fd\u6570\u200b <code>Decoupled()</code> \u200b\u5c06\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b\u5c31\u7eea\u200b\u6709\u6548\u200b\u63a5\u53e3\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b ReadyValidIO\u3002</p> <ul> <li><code>Decoupled(...)</code> \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u751f\u4ea7\u8005\u200b/\u200b\u8f93\u51fa\u200b\u5c31\u7eea\u200b\u6709\u6548\u200b\u63a5\u53e3\u200b\uff08\u200b\u5373\u4f4d\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8f93\u51fa\u200b\uff09\u3002</li> <li><code>Flipped(Decoupled(...))</code> \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u6d88\u8d39\u8005\u200b/\u200b\u8f93\u5165\u200b\u5c31\u7eea\u200b\u6709\u6548\u200b\u63a5\u53e3\u200b\uff08\u200b\u5373\u4f4d\u200b\u662f\u200b\u8f93\u5165\u200b\uff09\u3002</li> </ul> <p>\u200b\u67e5\u770b\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b Chisel \u200b\u4ee3\u7801\u200b\uff0c\u200b\u4ee5\u200b\u66f4\u597d\u200b\u5730\u200b\u7406\u89e3\u200b\u751f\u6210\u200b\u7684\u200b\u5185\u5bb9\u200b\uff1a</p> <pre><code>import chisel3._\nimport chisel3.util.Decoupled\n\n/**\n  * Using Decoupled(...) creates a producer interface.\n  * i.e. it has bits as an output.\n  * This produces the following ports:\n  *   input         io_readyValid_ready,\n  *   output        io_readyValid_valid,\n  *   output [31:0] io_readyValid_bits\n  */\nclass ProducingData extends Module {\n  val io = IO(new Bundle {\n    val readyValid = Decoupled(UInt(32.W))\n  })\n  // do something with io.readyValid.ready\n  io.readyValid.valid := true.B\n  io.readyValid.bits := 5.U\n}\n\n/**\n  * Using Flipped(Decoupled(...)) creates a consumer interface.\n  * i.e. it has bits as an input.\n  * This produces the following ports:\n  *   output        io_readyValid_ready,\n  *   input         io_readyValid_valid,\n  *   input  [31:0] io_readyValid_bits\n  */\nclass ConsumingData extends Module {\n  val io = IO(new Bundle {\n    val readyValid = Flipped(Decoupled(UInt(32.W)))\n  })\n  io.readyValid.ready := false.B\n  // do something with io.readyValid.valid\n  // do something with io.readyValid.bits\n}\n</code></pre> <p><code>DecoupledIO</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c31\u7eea\u200b\u6709\u6548\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5176\u200b\u7ea6\u5b9a\u200b\u4e0d\u200b\u4fdd\u8bc1\u200b\u89e3\u9664\u200b\u65ad\u8a00\u200b\u5c31\u7eea\u200b\u6216\u200b\u6709\u6548\u200b\u6216\u4f4d\u200b\u7684\u200b\u7a33\u5b9a\u6027\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b <code>ready</code> \u200b\u548c\u200b <code>valid</code> \u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6ca1\u6709\u200b\u6570\u636e\u4f20\u8f93\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u53d6\u6d88\u200b\u65ad\u8a00\u200b\u3002</p> <p><code>IrrevocableIO</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b ready-valid \u200b\u63a5\u53e3\u200b\uff0c\u200b\u5176\u200b\u7ea6\u5b9a\u200b\u662f\u200b\u5728\u200b <code>valid</code> \u200b\u88ab\u200b\u65ad\u8a00\u200b\u548c\u200b <code>ready</code> \u200b\u88ab\u200b\u53d6\u6d88\u200b\u65ad\u8a00\u200b\u65f6\u200b\uff0c\u200b\u4f4d\u200b\u7684\u200b\u503c\u200b\u4e0d\u4f1a\u200b\u6539\u53d8\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u6d88\u8d39\u8005\u200b\u5e94\u200b\u5728\u200b <code>ready</code> \u200b\u4e3a\u200b\u9ad8\u4e14\u200b <code>valid</code> \u200b\u4e3a\u200b\u4f4e\u200b\u7684\u200b\u5468\u671f\u200b\u540e\u200b\u4fdd\u6301\u200b <code>ready</code> \u200b\u65ad\u8a00\u200b\u3002\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e0d\u53ef\u200b\u64a4\u9500\u200b\u7684\u200b\u7ea6\u675f\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u7ea6\u5b9a\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u7531\u200b\u63a5\u53e3\u200b\u5f3a\u5236\u6267\u884c\u200b\u3002 Chisel \u200b\u4e0d\u4f1a\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u68c0\u67e5\u200b\u5668\u200b\u6216\u200b\u65ad\u8a00\u200b\u6765\u200b\u5f3a\u5236\u6267\u884c\u200b\u4e0d\u53ef\u200b\u64a4\u9500\u200b\u7684\u200b\u7ea6\u5b9a\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#blackboxes","title":"BlackBoxes","text":"<p>Chisel \u200b\u7684\u200b BlackBoxes \u200b\u88ab\u200b\u7528\u6765\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u5916\u90e8\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u5757\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u7ed3\u6784\u200b\u5728\u200b\u4f7f\u7528\u200b\u4e0d\u80fd\u200b\u88ab\u200b Chisel \u200b\u63cf\u8ff0\u200b\u7684\u200b\u786c\u4ef6\u200b\u7ed3\u6784\u200b\u548c\u200b\u8fde\u63a5\u200b\u5230\u200b FPGA \u200b\u6216\u200b\u5176\u4ed6\u200b\u6ca1\u6709\u200b\u4f7f\u7528\u200b Chisel \u200b\u5b9a\u4e49\u200b\u7684\u200b\u6a21\u5757\u200b\u65f6\u200b\u5f88\u200b\u6709\u7528\u200b\u3002</p> <p>\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u4e3a\u200b <code>BlackBox</code> \u200b\u7684\u200b\u6a21\u5757\u200b\u4f1a\u200b\u5728\u200b\u751f\u6210\u200b\u7684\u200b Verilog \u200b\u4e2d\u200b\u88ab\u200b\u5b9e\u4f8b\u200b\u5316\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e0d\u4f1a\u200b\u751f\u6210\u200b\u5b9a\u4e49\u200b\u6a21\u5757\u200b\u884c\u4e3a\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p> <p>\u200b\u548c\u200b <code>Module</code> \u200b\u4e0d\u540c\u200b\uff0c<code>BlackBox</code> \u200b\u6ca1\u6709\u200b\u9690\u5f0f\u200b\u65f6\u949f\u200b\u548c\u200b\u590d\u4f4d\u200b\u3002<code>BlackBox</code> \u200b\u7684\u200b\u65f6\u949f\u200b\u548c\u200b\u590d\u4f4d\u200b\u7aef\u53e3\u200b\u8981\u200b\u663e\u793a\u200b\u58f0\u660e\u200b\u5e76\u200b\u8fde\u63a5\u200b\u5230\u200b\u8f93\u5165\u200b\u4fe1\u53f7\u200b\u3002\u200b\u5728\u200b IO Bundle \u200b\u4e2d\u200b\u58f0\u660e\u200b\u7684\u200b\u7aef\u53e3\u200b\u5c06\u4f1a\u200b\u88ab\u200b\u751f\u200b\u6210\u4e3a\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u540d\u79f0\u200b\uff08\u200b\u6ca1\u6709\u200b <code>io_</code> \u200b\u524d\u7f00\u200b\uff09\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_1","title":"\u53c2\u6570\u200b\u5316","text":"<p>Verilog \u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u4f20\u9012\u200b\u7ed9\u200b BlackBox \u200b\u6784\u9020\u51fd\u6570\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u8003\u8651\u200b\u5728\u200b Chisel \u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u5b9e\u4f8b\u200b\u5316\u200b Xilinx \u200b\u5dee\u5206\u200b\u65f6\u949f\u200b\u7f13\u51b2\u5668\u200b (IBUFDS)\uff1a</p> <pre><code>import chisel3._\nimport chisel3.util\nimport chisel3.experiment._\n\nclass IBUFDS extends BlackBox(Map(\"DIFF_TERM\"-&gt;\"True\", \n                                  \"IOSTANDARD\"-&gt;\"DEFAULT\")) {\n  val io = IO(new Bundle {\n    val O = Output(Clock())\n    val I = Input(Clock())\n    val IB = Input(Clock())\n  })\n}\n\nclass TOP extends Module {\n  val io = IO(new Bundle {})\n  val ibufds = Module(new IBUFDS)\n  ibufds.io.I :=clock\n}\n</code></pre> <p>\u200b\u5728\u200b chisel \u200b\u751f\u6210\u200b\u7684\u200b Verilog \u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c<code>IBUFDS</code> \u200b\u5c06\u4f1a\u200b\u88ab\u200b\u5b9e\u4f8b\u200b\u5316\u4e3a\u200b\uff1a</p> <pre><code>IBUFDS #(.DIFF_TERM(\"TRUE\"), .IOSTANDARD(\"DEFAULT\")) ibufds (\n  .IB(ibufds_IB)\n  .I(ibufds_I)\n  .O(ibufds_O)\n);\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#blackboxes_1","title":"\u63d0\u4f9b\u200b\u5b9e\u73b0\u200b\u7684\u200b BlackBoxes","text":"<p>Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4ee5\u4e0b\u200b\u65b9\u5f0f\u200b\u6765\u200b\u63d0\u4f9b\u200b\u9ed1\u76d2\u200b\u5e95\u5c42\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002\u200b\u8003\u8651\u200b\u4ee5\u4e0b\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u5b9e\u6570\u200b\u76f8\u52a0\u200b\u7684\u200b\u9ed1\u76d2\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u6570\u5b57\u200b\u5728\u200b chisel3 \u200b\u4e2d\u200b\u8868\u793a\u200b\u4e3a\u200b 64 \u200b\u4f4d\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u3002</p> <pre><code>import chisel3._\n\nclass BlackBoxRealAdd extends BlackBox {\n  val io = IO(new Bundle {\n    val in1 = Input(UInt(64.W))\n    val in2 = Input(UInt(64.W))\n    val out = Output(UInt(64.W))\n  })\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4f8b\u5b50\u200b\u5982\u200b\u4e0b\u9762\u200b\u7684\u200b Verilog \u200b\u4ee3\u7801\u200b\u63cf\u8ff0\u200b\uff1a</p> <pre><code>module BlackBoxAdd(\n  input [63:0] in1,\n  input [63:0] in2,\n  output [63:0] out\n);\n\nalways @* begin\n  out &lt;= $realtobits($bitstoreal(in1) + $bitstoreal(in2));\nend\n\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#verilog-blackboxes","title":"Verilog \u200b\u5728\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b BlackBoxes","text":"<p>\u200b\u4e3a\u4e86\u200b\u5c06\u200b\u4e0a\u8ff0\u200b\u4ee3\u7801\u200b\u4f20\u9012\u200b\u5230\u200b\u540e\u200b\u7aef\u200b\u6a21\u62df\u5668\u200b\uff0cchisel3 \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u57fa\u4e8e\u200b chisel/firrtl \u200b\u6ce8\u91ca\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5982\u4e0b\u200b\u5de5\u5177\u200b\u3002\u200b\u5728\u200b\u58f0\u660e\u200b\u4e2d\u200b\u6dfb\u52a0\u200b <code>HasBlackBoxResource</code> \u200b\u7279\u5f81\u200b\uff0c\u200b\u7136\u540e\u200b\u8c03\u7528\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u544a\u77e5\u200b\u7cfb\u7edf\u200b\u5728\u200b\u54ea\u91cc\u200b\u53ef\u4ee5\u200b\u627e\u5230\u200b verilog\u3002\u200b\u8fd9\u4e2a\u200b\u6a21\u5757\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>import chisel3._\n\nclass BlackBoxRealAdd extends BlackBox {\n  val io = IO(new Bundle {\n    val in1 = Input(UInt(64.W))\n    val in2 = Input(UInt(64.W))\n    val out = Output(UInt(64.W))\n  })\nsetResource(\"/real_math.v\")\n}\n</code></pre> <p>\u200b\u4e0a\u8ff0\u200b verilog \u200b\u4ee3\u7801\u200b\u653e\u7f6e\u200b\u5728\u200b <code>real_math.v</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002\u200b\u4ec0\u4e48\u200b\u662f\u200b\u8d44\u6e90\u200b\u6587\u4ef6\u200b\uff1f\u200b\u5b83\u200b\u6765\u81ea\u200b\u4e8e\u200b\u5c06\u200b\u6587\u4ef6\u200b\u4fdd\u5b58\u200b\u5728\u200b\u9879\u76ee\u200b\u4e2d\u200b\u7684\u200b java \u200b\u7ea6\u5b9a\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u6587\u4ef6\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5305\u542b\u200b\u5728\u200b\u5e93\u200b\u53d1\u884c\u7248\u200b\u4e2d\u200b\u3002\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5178\u578b\u200b\u7684\u200b Chisel3 \u200b\u5de5\u7a0b\u200b\u4e2d\u200b\uff08\u200b\u53c2\u8003\u200b chisel-template\uff09\uff0c\u200b\u8fd9\u4f1a\u200b\u662f\u200b\u6e90\u6587\u4ef6\u200b\u5c42\u6b21\u7ed3\u6784\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u76ee\u5f55\u200b\uff1a<code>src/main/resource/real_math.v</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#verilog-blackboxes_1","title":"\u5185\u8054\u200b Verilog \u200b\u7684\u200b BlackBoxes","text":"<p>\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u628a\u200b Verilog \u200b\u4ee3\u7801\u200b\u653e\u5165\u200b scala \u200b\u6e90\u6587\u4ef6\u200b\u3002\u200b\u4f7f\u7528\u200b <code>HasBlackBoxInline</code> \u200b\u66ff\u6362\u200b\u6389\u200b <code>HasBlackBoxResource</code>\uff0c\u200b\u7136\u540e\u200b\u7528\u200b <code>setinline</code> \u200b\u66ff\u6362\u200b\u6389\u200b <code>setResource</code>\u3002\u200b\u4ee3\u7801\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>import chisel3._\nimport chisel3.util.HasBlackBoxInline\nclass BlackBoxRealAdd extends BlackBox with HasBlackBoxInline {\n  val io = IO(new Bundle {\n    val in1 = Input(UInt(64.W))\n    val in2 = Input(UInt(64.W))\n    val out = Output(UInt(64.W))\n  })\n  setInline(\"BlackBoxRealAdd.v\",\n    \"\"\"module BlackBoxRealAdd(\n      |    input  [15:0] in1,\n      |    input  [15:0] in2,\n      |    output [15:0] out\n      |);\n      |always @* begin\n      |  out &lt;= $realtobits($bitstoreal(in1) + $bitstoreal(in2));\n      |end\n      |endmodule\n    \"\"\".stripMargin)\n}\n</code></pre> <p>\u200b\u8be5\u200b\u6280\u672f\u200b\u4f1a\u200b\u5c06\u200b\u5185\u8054\u200b verilog \u200b\u590d\u5236\u5230\u200b\u76ee\u6807\u76ee\u5f55\u200b\u7684\u200b <code>BlackBoxRealAdd.v</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_2","title":"\u5f15\u64ce\u200b\u4e4b\u4e0b","text":"<p>\u200b\u8fd9\u79cd\u200b\u5c06\u200b verilog \u200b\u5185\u5bb9\u200b\u4f20\u9012\u200b\u5230\u200b\u6d4b\u8bd5\u200b\u540e\u200b\u7aef\u7684\u200b\u673a\u5236\u200b\u662f\u200b\u901a\u8fc7\u200b chisel/firrtl \u200b\u6ce8\u91ca\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002 inline \u200b\u548c\u200b resources \u200b\u8fd9\u200b\u4e24\u79cd\u200b\u65b9\u6cd5\u200b\u662f\u200b\u901a\u8fc7\u200b <code>setInline</code> \u200b\u548c\u200b <code>setResource</code> \u200b\u65b9\u6cd5\u200b\u8c03\u7528\u200b\u521b\u5efa\u200b\u7684\u200b\u4e24\u79cd\u200b\u6ce8\u91ca\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u6ce8\u91ca\u200b\u4f1a\u200b\u4f20\u9012\u200b\u7ed9\u200b chisel \u200b\u6d4b\u8bd5\u4eba\u5458\u200b\uff0c\u200b\u7136\u540e\u200b chisel \u200b\u6d4b\u8bd5\u4eba\u5458\u200b\u4f1a\u200b\u5c06\u200b\u5b83\u4eec\u200b\u4f20\u9012\u200b\u7ed9\u200b firrtl\u3002\u200b\u9ed8\u8ba4\u200b\u7684\u200b firrtl verilog \u200b\u7f16\u8bd1\u5668\u200b\u6709\u200b\u4e00\u4e2a\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u68c0\u6d4b\u200b\u6ce8\u91ca\u200b\u5e76\u200b\u5c06\u200b\u6587\u4ef6\u200b\u6216\u200b\u5185\u8054\u200b\u6d4b\u8bd5\u200b\u79fb\u52a8\u200b\u5230\u200b\u6784\u5efa\u200b\u76ee\u5f55\u200b\u4e2d\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u6dfb\u52a0\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u552f\u4e00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u8f6c\u6362\u200b\u4f1a\u200b\u5411\u200b\u6587\u4ef6\u200b black_box_verilog_files.f \u200b\u6dfb\u52a0\u200b\u4e00\u884c\u200b\uff0c\u200b\u8be5\u200b\u6587\u4ef6\u200b\u5c06\u200b\u6dfb\u52a0\u200b\u5230\u200b\u4e3a\u200b verilator \u200b\u6216\u200b vcs \u200b\u6784\u5efa\u200b\u7684\u200b\u547d\u4ee4\u884c\u200b\u4e2d\u200b\uff0c\u200b\u4ee5\u200b\u901a\u77e5\u200b\u5b83\u4eec\u200b\u8981\u200b\u67e5\u627e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002dsptools \u200b\u9879\u76ee\u200b\u662f\u200b\u4f7f\u7528\u200b\u6b64\u200b\u529f\u80fd\u200b\u6784\u5efa\u200b\u57fa\u4e8e\u200b\u9ed1\u5323\u5b50\u200b\u7684\u200b\u5b9e\u6570\u200b\u6a21\u62df\u200b\u6d4b\u8bd5\u200b\u5668\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u597d\u200b\u7684\u200b\u4f8b\u5b50\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel-chiselenum","title":"Chisel \u200b\u679a\u4e3e\u200b\uff08ChiselEnum\uff09","text":"<p>ChiselEnum \u200b\u7c7b\u578b\u200b\u7ecf\u5e38\u200b\u88ab\u200b\u7528\u6765\u200b\u51cf\u5c11\u200b\u7f16\u7801\u200b\u9009\u62e9\u5668\u200b\uff0c\u200b\u64cd\u4f5c\u7801\u200b\u548c\u200b\u529f\u80fd\u200b\u5355\u5143\u200b\u64cd\u4f5c\u200b\u7684\u200b\u51fa\u9519\u200b\u673a\u4f1a\u200b\u3002\u200b\u4e0e\u200b <code>Chisel.util.Enum</code> \u200b\u76f8\u6bd4\u200b\uff0c<code>ChiselEnum</code> \u200b\u662f\u200b <code>Data</code> \u200b\u7684\u200b\u5b50\u7c7b\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5b9a\u4e49\u200b <code>Bundle</code> \u200b\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5305\u62ec\u200b <code>IO</code> \u200b\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_3","title":"\u529f\u80fd\u200b\u548c\u200b\u793a\u4f8b","text":"<pre><code>// \u200b\u5728\u200b\u540e\u7eed\u200b\u5b9e\u4f8b\u200b\u4e2d\u200b\u7528\u5230\u200b\u7684\u200b import\nimport circt.stage.ChiselStage\nimport chisel3._\nimport chisel3.util._\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u770b\u5230\u200b ChiselEnum \u200b\u88ab\u200b\u7528\u4f5c\u200b RISC-V \u200b\u5185\u6838\u200b\u7684\u200b\u591a\u8def\u590d\u7528\u200b\u5668\u200b\u9009\u62e9\u200b\u4fe1\u53f7\u200b\u3002\u200b\u867d\u7136\u200b\u4e0d\u200b\u9700\u8981\u200b\u5c06\u200b\u5bf9\u8c61\u200b\u5305\u88c5\u200b\u5728\u200b\u5305\u4e2d\u200b\uff0c\u200b\u4f46\u200b\u5f3a\u70c8\u5efa\u8bae\u200b\u8fd9\u6837\u200b\u505a\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u5141\u8bb8\u200b\u66f4\u200b\u8f7b\u677e\u200b\u5730\u200b\u5728\u200b\u591a\u4e2a\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8be5\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>// package CPUTypes {\nobject AluMux1Sel extends ChiselEnum {\n  val selectRS1, selectPC = value\n}\n// \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6253\u5370\u200b\u6240\u6709\u200b\u503c\u6765\u200b\u67e5\u770b\u200b\u6620\u5c04\u200b\nAluMux1Sel.all.foreach(println)\n// AluMux1Sel(0=selectRS1)\n// AluMux1Sel(1=selectPC)\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u9009\u62e9\u5668\u200b\u4f7f\u7528\u200b AluMux1Sel \u200b\u6765\u200b\u9009\u62e9\u200b\u4e0d\u540c\u200b\u7684\u200b\u8f93\u5165\u200b\u3002</p> <pre><code>import AluMux1Sel._\n\nclass AluMux1Bundle extends Bundle {\n  val AluMux1Sel = Input(AluMux1Sel())\n  val rs1Out     = Input(Bits(32.W))\n  val pcOut      = Input(Bits(32.W))\n  val aluMuxOut  = Output(Bits(32.W))\n}\n\nclass AluMux1File extends Module {\n  val io = IO(new AluMux1Bundle)\n  io.aluMuxOut := 0.U\n\n  switch(io.AluMux1Sel) {\n    is (selectRS1) {\n      io.aluMux1Out := io.rs1Out\n    }\n    is (selectPC) {\n      io.aluMux1Out := io.pcOut\n    }\n  }\n}\n// Generated by CIRCT firtool-1.44.0\nmodule AluMux1File( // &lt;stdin&gt;:17:10\n  input         clock,  // &lt;stdin&gt;:18:11\n                reset,  // &lt;stdin&gt;:19:11\n                io_aluMux1Sel,  // chisel-enum.md:63:14\n  input  [31:0] io_rs1Out,  // chisel-enum.md:63:14\n                io_pcOut,   // chisel-enum.md:63:14\n  output [31:0] io_aluMux1Out   // chisel-enum.md:63:14\n);\n\n  assign io_aluMux1Out = io_aluMux1Sel ? io_pcOut : io_rs1Out;  // &lt;stdin&gt;:17:10, chisel-enum.md:68:26, :70:21\nendmodule\n</code></pre> <p>ChiselEnum \u200b\u4e5f\u200b\u5141\u8bb8\u200b\u7528\u6237\u200b\u50cf\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u7684\u200b\u65b9\u5f0f\u200b\u7ed9\u200b <code>Value(...)</code> \u200b\u76f4\u63a5\u200b\u4f20\u9012\u200b <code>UInt</code> \u200b\u6765\u200b\u8bbe\u5b9a\u503c\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c\u200b\u6bcf\u4e2a\u200b <code>Value</code> \u200b\u7684\u200b\u5927\u5c0f\u200b\u5fc5\u987b\u200b\u4e25\u683c\u200b\u5927\u4e8e\u200b\u524d\u200b\u4e00\u4e2a\u200b\u3002</p> <pre><code>object Opcode extends ChiselEnum {\n    val load  = Value(0x03.U) // i \"load\"  -&gt; 000_0011\n    val imm   = Value(0x13.U) // i \"imm\"   -&gt; 001_0011\n    val auipc = Value(0x17.U) // u \"auipc\" -&gt; 001_0111\n    val store = Value(0x23.U) // s \"store\" -&gt; 010_0011\n    val reg   = Value(0x33.U) // r \"reg\"   -&gt; 011_0011\n    val lui   = Value(0x37.U) // u \"lui\"   -&gt; 011_0111\n    val br    = Value(0x63.U) // b \"br\"    -&gt; 110_0011\n    val jalr  = Value(0x67.U) // i \"jalr\"  -&gt; 110_0111\n    val jal   = Value(0x6F.U) // j \"jal\"   -&gt; 110_1111\n}\n</code></pre> <p>\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u201c\u200b\u8df3\u8f6c\u200b\u201d\u200b\u5230\u200b\u67d0\u4e2a\u200b\u503c\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u4f20\u9012\u200b\u8d77\u70b9\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u5e38\u89c4\u200b\u503c\u200b\u5b9a\u4e49\u200b\u6765\u200b\u7ee7\u7eed\u200b\u9012\u589e\u200b\u3002</p> <pre><code>object BranchFunct3 extends ChiselEnum {\n  val beq, bne = Value\n  val blt = Value(4.U)\n  val bge, bltu, bgeu = Value\n}\n\n// \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6253\u5370\u200b\u6240\u6709\u200b\u503c\u6765\u200b\u67e5\u770b\u200b\u6620\u5c04\u200b\nBranchFunct3.all.foreach(println)\n// BranchFunct3(0=beq)\n// BranchFunct3(1=bne)\n// BranchFunct3(4=blt)\n// BranchFunct3(5=bge)\n// BranchFunct3(6=bltu)\n// BranchFunct3(7=bgeu)\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_4","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>.asUInt</code> \u200b\u628a\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b <code>UInt</code>\uff1a</p> <pre><code>class ToUInt extends RawModule {\n  val in = IO(Input(Opcode()))\n  val out = IO(Output(UInt()))\n  out := in.asUInt\n}\n</code></pre> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5c06\u200b <code>UInt</code> \u200b\u4f20\u9012\u200b\u7ed9\u200b <code>ChiselEnum</code> \u200b\u7684\u200b apply \u200b\u65b9\u6cd5\u200b\u6765\u200b\u5c06\u200b\u5176\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>class FromUInt extends Module {\n  val in = IO(Input(UInt(7.W)))\n  val out = IO(Output(Opcode()))\n  out := Opcode(in)\n}\n</code></pre> <p>\u200b\u4f46\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b <code>UInt</code> \u200b\u53ef\u80fd\u200b\u9047\u5230\u200b\u7684\u200b\u679a\u4e3e\u200b\u503c\u4e2d\u200b\u5b58\u5728\u200b\u672a\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u65f6\u200b\u4ece\u200b <code>UInt</code> \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\uff0c\u200b\u60a8\u200b\u5c06\u200b\u770b\u5230\u200b\u5982\u4e0b\u200b\u8b66\u544a\u200b\uff1a</p> <pre><code>[warn] chisel-enum.md:136:16: Casting non-literal UInt to repl.MdocSession$MdocApp$Opcode. You can use repl.MdocSession$MdocApp$Opcode.safe to cast without this warning.\n[warn] There were 1 warning(s) during hardware elaboration.\n</code></pre> <p>\uff08\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u6211\u4eec\u200b\u7684\u200b\u6587\u6863\u200b\u751f\u6210\u200b\u6d41\u7a0b\u200b\u7684\u200b\u4ea7\u7269\u200b\uff0c\u200b\u679a\u4e3e\u200b\u7684\u200b\u540d\u79f0\u200b\u5f88\u200b\u96be\u770b\u200b\uff0c\u200b\u5728\u200b\u6b63\u5e38\u200b\u4f7f\u7528\u200b\u4e2d\u200b\u5b83\u200b\u4f1a\u200b\u66f4\u200b\u5e72\u51c0\u200b\uff09\u3002</p> <p>\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b <code>.safe</code> \u200b\u5de5\u5382\u200b\u65b9\u6cd5\u200b\u6765\u200b\u907f\u514d\u200b\u6b64\u200b\u8b66\u544a\u200b\uff0c\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u9664\u4e86\u200b\u6307\u793a\u200b\u679a\u4e3e\u200b\u662f\u5426\u200b\u5904\u4e8e\u200b\u6709\u6548\u200b\u72b6\u6001\u200b\u7684\u200b <code>Bool</code> \u200b\u4e4b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u8fd4\u56de\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>class SafeFromUInt extends Module {\n  val in = IO(Input(UInt(7.W)))\n  val out = IO(Output(Opcode()))\n  val (value, valid) = Opcode.safe(in)\n  assert(valid, \"Enum state must be valid, got %d!\", in)\n  out := value\n}\n</code></pre> <p>\u200b\u73b0\u5728\u200b\u5c06\u200b\u4e0d\u518d\u200b\u6709\u200b\u8b66\u544a\u200b\u3002</p> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u200b <code>suppressEnumCastWarning</code> \u200b\u6765\u200b\u6291\u5236\u200b\u8b66\u544a\u200b\u3002\u200b\u8fd9\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5c06\u200b <code>UInt</code> \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5305\u542b\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u7684\u200b Bundle \u200b\u7c7b\u578b\u200b\uff0c\u200b\u8fd9\u91cc\u200b <code>UInt</code> \u200b\u662f\u200b\u5df2\u77e5\u200b\u7684\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</p> <pre><code>class MyBundle extends Bundle {\n  val addr = UInt(8.W)\n  val op = Opcode()\n}\n\nclass SuppressedFromUInt extends Module {\n  val io = IO(Input(UInt(15.W)))\n  val out = IO(Output(new MyBundle()))\n  suppressedEnumCastWarning {\n    out := in.asTypeOf(new MyBundle)\n  }\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_5","title":"\u6d4b\u8bd5","text":"<p>\u200b\u679a\u4e3e\u200b\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b <code>&lt;ChiselEnum Object&gt;.Type</code>\uff0c\u200b\u5b83\u200b\u53ef\u200b\u7528\u4e8e\u200b\u5c06\u503c\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u4f20\u9012\u200b\u7ed9\u200b\u51fd\u6570\u200b\uff08\u200b\u6216\u200b\u4efb\u4f55\u200b\u5176\u4ed6\u200b\u9700\u8981\u200b\u7c7b\u578b\u200b\u6ce8\u91ca\u200b\u7684\u200b\u65f6\u5019\u200b\uff09\u3002\u200b\u5bf9\u200b\u679a\u4e3e\u200b\u503c\u200b\u8c03\u7528\u200b <code>.litValue</code> \u200b\u5c06\u200b\u8fd4\u56de\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u7684\u200b <code>BigInt</code> \u200b\u6574\u6570\u200b\u503c\u200b\u3002</p> <pre><code>def expectedSel(sel: AluMux1Sel.Type): Boolean = sel match {\n  case AluMux1Sel.selectRS1 =&gt; (sel.litValue == 0)\n  case AluMux1Sel.selectPC  =&gt; (sel.litValue == 1)\n  case _                    =&gt; false\n}\n</code></pre> <p>\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u4e5f\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u7b80\u4fbf\u200b\u7684\u200b\u65b9\u6cd5\u200b\u6765\u200b\u4f7f\u7528\u200b <code>ChiselEnum</code> \u200b\u503c\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4ecd\u7136\u200b\u4f7f\u7528\u200b RISC-V \u200b\u7684\u200b\u64cd\u4f5c\u7801\u200b\u793a\u4f8b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>.isOneOf</code> \u200b\u65b9\u6cd5\u200b\u8f7b\u677e\u200b\u7684\u200b\u521b\u5efa\u200b\u4ec5\u200b\u5728\u200b LOAD/STORE \u200b\u64cd\u4f5c\u200b\uff08\u200b\u5f53\u200b\u679a\u4e3e\u200b\u503c\u200b\u7b49\u4e8e\u200b <code>Opcode.load</code> \u200b\u548c\u200b <code>Opcode.store</code> \u200b\u65f6\u200b\uff09\u200b\u4e0a\u200b\u65ad\u8a00\u200b\u7684\u200b\u786c\u4ef6\u200b\u4fe1\u53f7\u200b\u3002</p> <pre><code>class LoadStoreExample extends Module {\n  val io = IO(new Bundle {\n    val opcode = Input(Opcode())\n    val load_or_store = Output(Bool())\n  })\n  io.load_or_store := io.opcode.isOneOf(Opcode.load, Opcode.store)\n}\n</code></pre> <p><code>Chisel.Enum</code> \u200b\u5b9a\u4e49\u200b\u7684\u200b\u4e00\u4e9b\u200b\u6709\u7528\u200b\u7684\u200b\u5176\u4ed6\u200b\u65b9\u6cd5\u200b\u662f\u200b\uff1a</p> <ul> <li><code>.all</code>\uff1a\u200b\u8fd4\u56de\u200b\u679a\u4e3e\u200b\u4e2d\u200b\u7684\u200b\u679a\u4e3e\u200b\u503c\u200b</li> <li><code>.getWidth</code>\uff1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bbd\u5ea6\u200b</li> </ul>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_6","title":"\u89e3\u51b3\u95ee\u9898","text":"<p>\u200b\u81ea\u200b Chisel v3.4.3\uff082020 \u200b\u5e74\u200b 7 \u200b\u6708\u200b 1 \u200b\u53f7\u200b\uff09\u200b\u8d77\u200b\uff0c\u200b\u503c\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u90fd\u200b\u662f\u200b\u88ab\u200b\u63a8\u65ad\u200b\u7684\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u989d\u5916\u200b\u7684\u200b\u503c\u6765\u200b\u5f3a\u5236\u200b\u89c4\u5b9a\u200b\u4e00\u4e2a\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u50cf\u200b\u4e0b\u9762\u200b\u4f8b\u5b50\u200b\u8fd9\u6837\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4e86\u200b <code>ukn</code> \u200b\u6765\u200b\u5f3a\u5236\u200b\u4f7f\u4f4d\u200b\u5bbd\u200b\u4e3a\u200b 3\u3002</p> <pre><code>object StoreFunct3 extends ChiselEnum {\n  val sb, sh, sw = Value\n  val ukn = Value(7.U)\n}\n// \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6253\u5370\u200b\u6240\u6709\u200b\u503c\u6765\u200b\u67e5\u770b\u200b\u6620\u5c04\u200b\nStoreFunct3.all.foreach(println)\n// StoreFunct3(0=sb)\n// StoreFunct3(1=sh)\n// StoreFunct3(2=sw)\n// StoreFunct3(7=ukn)\n</code></pre> <p>\u200b\u4e0d\u200b\u652f\u6301\u200b\u5e26\u7b26\u53f7\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5982\u679c\u200b\u60a8\u200b\u60f3\u8981\u200b\u5e26\u7b26\u53f7\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5219\u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b <code>.asSInt</code> \u200b\u8f6c\u6362\u200b <code>UInt</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_7","title":"\u5176\u4ed6\u200b\u8d44\u6e90","text":"<p>ChiselEnum \u200b\u7c7b\u578b\u200b\u6bd4\u200b\u4e0a\u9762\u200b\u6240\u8ff0\u200b\u7684\u200b\u529f\u80fd\u5f3a\u5927\u200b\u5f97\u200b\u591a\u200b\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u8fdb\u884c\u200b Sequence\u3001Vec \u200b\u548c\u200b Bundle \u200b\u5206\u914d\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5141\u8bb8\u200b\u9010\u6b65\u200b\u6267\u884c\u200b\u987a\u5e8f\u200b\u72b6\u6001\u200b\u7684\u200b <code>.next</code> \u200b\u64cd\u4f5c\u200b\u548c\u200b\u7528\u4e8e\u200b\u68c0\u67e5\u200b\u786c\u4ef6\u200b\u503c\u200b\u662f\u5426\u200b\u4e3a\u200b\u6709\u6548\u503c\u200b\u7684\u200b <code>.isValid</code>\u3002 ChiselEnum \u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u5728\u200b <code>EnumFactory</code> \u200b\u7c7b\u4e2d\u200b\u627e\u5230\u200b\u3002 ChiselEnum \u200b\u64cd\u4f5c\u200b\u7684\u200b\u793a\u4f8b\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u5904\u200b\u627e\u5230\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#dataview","title":"DataView","text":"<p>Chisel 3.5 \u200b\u4e2d\u200b\u7684\u200b\u65b0\u200b\u529f\u80fd\u200b</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_8","title":"\u4ecb\u7ecd","text":"<p>DataView \u200b\u662f\u200b\u4e00\u79cd\u200b\u5c06\u200b Scala \u200b\u5bf9\u8c61\u200b \u201cviewing\u201d \u200b\u4f5c\u4e3a\u200b chisel3.Data \u200b\u5b50\u200b\u7c7b\u578b\u200b\u7684\u200b\u673a\u5236\u200b\u3002\u200b\u901a\u5e38\u200b\uff0c\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u5c06\u200b chisel3.Data \u200b\u7684\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u7c7b\u578b\u200b\u67e5\u770b\u200b\u4e3a\u200b\u53e6\u200b\u4e00\u79cd\u200b\u5b50\u200b\u7c7b\u578b\u200b\u5f88\u200b\u6709\u7528\u200b\u3002\u200b\u4eba\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b DataView \u200b\u89c6\u4e3a\u200b\u4ece\u200b Target \u200b\u7c7b\u578b\u200b <code>T</code> \u200b\u5230\u200b View \u200b\u7c7b\u578b\u200b <code>V</code> \u200b\u7684\u200b\u6620\u5c04\u200b\u3002\u200b\u8fd9\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\uff08\u200b\u4f8b\u5982\u200b <code>.asTypeOf</code>\uff09\uff0c\u200b\u4f46\u200b\u6709\u200b\u4e00\u4e9b\u200b\u5dee\u5f02\u200b\uff1a</p> <ol> <li>View \u200b\u662f\u200b\u53ef\u200b\u8fde\u63a5\u200b\u7684\u200b \u2014\u2014 \u200b\u5230\u200b view \u200b\u7684\u200b\u8fde\u63a5\u200b\u53d1\u751f\u200b\u76ee\u6807\u200b\u4e0a\u200b</li> <li>\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\u662f\u200b\u7ed3\u6784\u6027\u200b\u7684\u200b\uff08\u200b\u5bf9\u200b\u5e95\u5c42\u200b\u4f4d\u200b\u7684\u200b\u91cd\u65b0\u200b\u89e3\u91ca\u200b\uff09\uff0c\u200b\u800c\u200b DataView \u200b\u662f\u200b\u53ef\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u6620\u5c04\u200b</li> <li>View \u200b\u53ef\u4ee5\u200b\u53ea\u6709\u200b\u4e00\u90e8\u5206\u200b \u2014\u2014 \u200b\u4e0d\u662f\u200b\u76ee\u6807\u200b\u6240\u6709\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u90fd\u200b\u8981\u200b\u5305\u542b\u200b\u5728\u200b\u6620\u5c04\u200b\u4e2d\u200b</li> </ol>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#axi4","title":"\u4e00\u4e2a\u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\uff08AXI4\uff09","text":"<p>AXI4 \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u5e38\u7528\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002\u200b\u4f7f\u7528\u200b AXI4 \u200b\u7684\u200b\u5178\u578b\u200b Verilog \u200b\u5916\u8bbe\u200b\u5c06\u200b\u5199\u200b\u901a\u9053\u200b\u5b9a\u4e49\u200b\u6210\u200b\u4e0b\u9762\u200b\u8fd9\u6837\u200b\uff1a</p> <pre><code>module my_module(\n  input        AXI_AWVALID,\n  output       AXI_AWREADY,\n  input [3:0]  AXI_AWID,\n  input [19:0] AXI_AWADDR,\n  input [1:0]  AXI_AWLEN,\n  input [1:0]  AXI_AWSIZE,\n  // ...\n);\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200b\u5bf9\u5e94\u200b\u4e8e\u200b\u4ee5\u4e0b\u200b Chisel \u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>class VerilogAXIBundle(val addrWidth: Int) extends Bundle {\n  val AWVALID = Output(Bool())\n  val AWREADY = Input(Bool())\n  val AWID    = Output(UInt(4.W))\n  val AWADDR  = Output(UInt(addrwidth.W))\n  val AWLEN   = Output(UInt(2.W))\n  val AWSIZE  = Output(UInt(2.W))\n  // ...\n}\n\n// \u200b\u5b9e\u4f8b\u200b\u5316\u200b\nclass my_module extends RawModule {\n  val AXI = IO(new VerilogAXIBundle(20))\n}\n</code></pre> <p>\u200b\u5728\u200b Chisel \u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u7528\u200b <code>BlackBoxes</code> \u200b\u5b9e\u4f8b\u200b\u5316\u200b Verilog \u200b\u6a21\u5757\u200b\u65f6\u200b\uff0c\u200b\u8868\u8fbe\u200b\u6807\u51c6\u200b\u7684\u200b Verilog \u200b\u63a5\u53e3\u200b\u662f\u200b\u5f88\u200b\u91cd\u8981\u200b\u7684\u200b\u3002\u200b\u4f46\u662f\u200b\u4e00\u822c\u6765\u8bf4\u200b\uff0cChisel \u200b\u5f00\u53d1\u8005\u200b\u66f4\u200b\u559c\u6b22\u200b\u901a\u8fc7\u200b <code>Decoupled</code> \u200b\u8fd9\u6837\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u6765\u200b\u4f7f\u7528\u200b\u7ec4\u5408\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u50cf\u200b\u4e0a\u9762\u200b\u90a3\u6837\u200b\u5355\u72ec\u200b\u5904\u7406\u200b <code>valid</code> \u200b\u548c\u200b <code>ready</code>\u3002\u200b\u4e00\u4e2a\u200b\u66f4\u200b \u201cChisel-y\u201d \u200b\u7684\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>// \u200b\u6ce8\u610f\u200b AW \u200b\u4e0e\u200b AR \u200b\u901a\u9053\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b Bundle \u200b\u5b9a\u4e49\u200b\nclass AXIAddressChannel(val addrwidth: Int) extends Bundle {\n  val id   = UInt(4.W)\n  val addr = UInt(addrwidth.W)\n  val len  = UInt(2.W)\n  val size = UInt(2.W)\n  // ...\n}\n\nimport chisel3.util.Decoupled\n// \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5404\u4e2a\u200b AXI \u200b\u901a\u9053\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\nclass AXIBundle(val addrwidth: Int) extends Bundle {\n  val aw = Decoupled(new AXIAddressChannel(addrwidth))\n  // val ar = new AXIAddressChannel\n  // ...\n}\n\nclass MyModule extends RawModule {\n  val axi = IO(new AXIBundle(20))\n}\n</code></pre> <p>\u200b\u5f53\u7136\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u975e\u5e38\u200b\u4e0d\u540c\u200b\u7684\u200b Verilog \u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule MyModule(    // &lt;stdin&gt;:3:10\n  input         axi_aw_ready,   // dataview.md:53:15\n  output        axi_aw_valid,   // dataview.md:53:15\n  output [3:0]  axi_aw_bits_id, // dataview.md:53:15\n  output [19:0] axi_aw_bits_addr,   // dataview.md:53:15\n  output [1:0]  axi_aw_bits_len,    // dataview.md:53:15\n                axi_aw_bits_size    // dataview.md:53:15\n);\n\n  assign axi_aw_valid = 1'h0;   // &lt;stdin&gt;:3:10, dataview.md:62:7\n  assign axi_aw_bits_id = 4'h0; // &lt;stdin&gt;:3:10, dataview.md:62:7\n  assign axi_aw_bits_addr = 20'h0;  // &lt;stdin&gt;:3:10, dataview.md:62:7\n  assign axi_aw_bits_len = 2'h0;    // &lt;stdin&gt;:3:10, dataview.md:62:7\n  assign axi_aw_bits_size = 2'h0;   // &lt;stdin&gt;:3:10, dataview.md:62:7\nendmodule\n</code></pre> <p>\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u8be5\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u66f4\u200b\u7ed3\u6784\u5316\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u540c\u65f6\u200b\u53c8\u200b\u4fdd\u7559\u200b\u9884\u671f\u200b\u7684\u200b Verilog \u200b\u63a5\u53e3\u200b\u5462\u200b\uff1f\u200b\u770b\u770b\u200b DataView\uff1a</p> <pre><code>import chisel3.experiment.dataview._\n\n//\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5c06\u200b DataView \u200b\u653e\u5165\u200b\u6240\u200b\u6d89\u53ca\u200b\u7c7b\u578b\u200b\u4e4b\u4e00\u200b\u7684\u200b\u4f34\u751f\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\nobject AXIBundle {\n  // \u200b\u4e0d\u7528\u200b\u5bb3\u6015\u200b\u4f7f\u7528\u200b implicit\uff0c\u200b\u6211\u4eec\u200b\u4f1a\u200b\u5728\u200b\u4e4b\u540e\u200b\u8be6\u7ec6\u200b\u8ba8\u8bba\u200b\u8fd9\u90e8\u5206\u200b\n  implicit val axiView = DataView[VerilogAXIBundle, AXIBundle](\n    // \u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u4ece\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff08VerilogAXIBundle\uff09\n    // \u200b\u6784\u9020\u200b\u4e00\u4e2a\u200b View \u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff08AIXBundle\uff09\n    vab =&gt; new AXIBundle(vab.addrwidth),\n    // \u200b\u5176\u4f59\u200b\u53c2\u6570\u200b\u662f\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u5b57\u6bb5\u200b\u7684\u200b\u6620\u5c04\u200b\n    _.AWVALID -&gt; _.aw.valid,\n    _.AWREADY -&gt; _.aw.ready,\n    _.AWID    -&gt; _.aw.bits.id,\n    _.AWADDR  -&gt; _.aw.bits.addr,\n    _.AWLEN   -&gt; _.aw.bits.len,\n    _.AWSIZE  -&gt; _.aw.bits.size,\n    // ...\n  )\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b <code>DataView</code> \u200b\u662f\u200b Verilog \u200b\u98ce\u683c\u200b\u7684\u200b AXI Bundle \u200b\u548c\u200b\u66f4\u5177\u200b\u7ec4\u5408\u200b\u6027\u200b\u7684\u200b Chisel \u200b\u98ce\u683c\u200b\u7684\u200b AXI Bundle \u200b\u4e4b\u95f4\u200b\u7684\u200b\u6620\u5c04\u200b\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b\u6211\u4eec\u200b\u7684\u200b\u7aef\u53e3\u200b\u6765\u200b\u5339\u914d\u200b Verilog \u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u540c\u65f6\u200b\u50cf\u200b\u66f4\u200b\u7ed3\u6784\u5316\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e00\u6837\u200b\u64cd\u4f5c\u200b\u4ed6\u200b\uff1a</p> <pre><code>class AXIStub extends RawModule {\n  val AXI = IO(new VerilogAXIBundle(20))\n  val view = AXI.viewAs[AXIBundle]\n\n  // \u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b `view` \u200b\u64cd\u4f5c\u200b `AXI`\n  view.aw.bits := 0.U.asTypeOf(new AXIAddressChannel(20)) // \u200b\u9ed8\u8ba4\u200b\u5c06\u200b\u6240\u6709\u200b\u5185\u5bb9\u200b\u7f6e\u200b\u96f6\u200b\n  view.aw.valid \uff1a= true.B\n  when (view.aw.ready) {\n    view.aw.bits.id := 5.U\n    view.aw.bits.addr := 1234.U\n    // \u200b\u6211\u4eec\u200b\u4ecd\u7136\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u8fd9\u6837\u200b\u64cd\u4f5c\u200b AXI\n    AXI.AWLEN := 1.U\n  }\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u5339\u914d\u200b\u6807\u51c6\u200b\u547d\u540d\u200b\u7ea6\u5b9a\u200b\u7684\u200b Verilog \u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule AXIStub( // &lt;stdin&gt;:3:10\n  input         AXI_AWREADY,    // dataview.md:94:15\n  output        AXI_AWVALID,    // dataview.md:94:15\n  output [3:0]  AXI_AWID,   // dataview.md:94:15\n  output [19:0] AXI_AWADDR, // dataview.md:94:15\n  output [1:0]  AXI_AWLEN,  // dataview.md:94:15\n                AXI_AWSIZE  // dataview.md:94:15\n);\n\n  assign AXI_AWVALID = 1'h1;    // &lt;stdin&gt;:3:10, dataview.md:99:17\n  assign AXI_AWID = AXI_AWREADY ? 4'h5 : 4'h0;  // &lt;stdin&gt;:3:10, dataview.md:98:{16,31}, :100:24, :101:21\n  assign AXI_AWADDR = AXI_AWREADY ? 20'h4D2 : 20'h0;    // &lt;stdin&gt;:3:10, dataview.md:98:{16,31}, :100:24, :102:23\n  assign AXI_AWLEN = {1'h0, AXI_AWREADY};   // &lt;stdin&gt;:3:10, dataview.md:98:16, :100:24, :104:15\n  assign AXI_AWSIZE = 2'h0; // &lt;stdin&gt;:3:10, dataview.md:98:31\nendmodule\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b \u200b\u548c\u200b View \u200b\u7c7b\u578b\u200b*\u200b\u90fd\u200b\u662f\u200b <code>Data</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u5b50\u200b\u7c7b\u578b\u200b\uff0c<code>DataView</code> \u200b\u662f\u200b*\u200b\u53ef\u9006\u200b\u7684\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8f7b\u677e\u200b\u7684\u200b\u4ece\u200b\u5df2\u6709\u200b\u7684\u200b <code>DataView[VerilogAXIBundle, AXIBundle]</code> \u200b\u4e2d\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b <code>DataView[AXIBundle, VerilogAXIBundle]</code>\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u505a\u200b\u7684\u200b\u662f\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4ece\u200b <code>AXIBundle</code> \u200b\u7684\u200b\u5b9e\u4f8b\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b <code>VerilogAXIBundle</code>\uff1a</p> <pre><code>// \u200b\u6ce8\u610f\u200b\u901a\u5e38\u200b\u4f60\u200b\u9700\u8981\u200b\u628a\u200b\u4ed6\u4eec\u200b\u5b9a\u4e49\u200b\u5728\u200b\u4e00\u8d77\u200b\uff08\u200b\u5728\u200b AXIBundle \u200b\u5bf9\u8c61\u200b\u4e2d\u200b\uff09\nimplicit val axiView2 = AXIBundle.axiView.invert(ab =&gt; new VerilogAXIBundle(ab.addrwidth))\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u5c55\u793a\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u5e76\u4e14\u200b\u8bf4\u660e\u200b\u4e86\u200b <code>DataView</code> \u200b\u7684\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b\u60c5\u51b5\u200b \u2014\u2014 \u200b\u8fde\u63a5\u200b\u4e0d\u200b\u76f8\u5173\u200b\u7684\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>class ConnectionExample extends RawModule {\n  val in = IO(new AXIBundle(20))\n  val out = IO(Flipped(new VerilogAXIBundle(20)))\n\n  out.viewAs[AXIBundle] &lt;&gt; in\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u7ed3\u679c\u200b\u4f1a\u200b\u4f7f\u200b Verilog \u200b\u4e2d\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u76f8\u8fde\u63a5\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule ConnectionExample(   // &lt;stdin&gt;:3:10\n  input         in_aw_ready,    // dataview.md:125:14\n                out_AWVALID,    // dataview.md:126:15\n  input  [3:0]  out_AWID,   // dataview.md:126:15\n  input  [19:0] out_AWADDR, // dataview.md:126:15\n  input  [1:0]  out_AWLEN,  // dataview.md:126:15\n                out_AWSIZE, // dataview.md:126:15\n  output        in_aw_valid,    // dataview.md:125:14\n  output [3:0]  in_aw_bits_id,  // dataview.md:125:14\n  output [19:0] in_aw_bits_addr,    // dataview.md:125:14\n  output [1:0]  in_aw_bits_len, // dataview.md:125:14\n                in_aw_bits_size,    // dataview.md:125:14\n  output        out_AWREADY // dataview.md:126:15\n);\n\n  assign in_aw_valid = out_AWVALID; // &lt;stdin&gt;:3:10\n  assign in_aw_bits_id = out_AWID;  // &lt;stdin&gt;:3:10\n  assign in_aw_bits_addr = out_AWADDR;  // &lt;stdin&gt;:3:10\n  assign in_aw_bits_len = out_AWLEN;    // &lt;stdin&gt;:3:10\n  assign in_aw_bits_size = out_AWSIZE;  // &lt;stdin&gt;:3:10\n  assign out_AWREADY = in_aw_ready; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_9","title":"\u5176\u4ed6\u200b\u793a\u4f8b","text":"<p>\u200b\u867d\u7136\u200b\u50cf\u200b AXI \u200b\u5b9e\u4f8b\u200b\u4e2d\u200b\u90a3\u6837\u200b\u5728\u200b <code>Bundle</code> \u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u6620\u5c04\u200b\u7684\u200b\u80fd\u529b\u200b\u5341\u5206\u200b\u5f15\u4eba\u6ce8\u76ee\u200b\u3002\u200b\u4f46\u200b DataView \u200b\u8fd8\u6709\u200b\u5f88\u591a\u200b\u5176\u4ed6\u200b\u5e94\u7528\u200b\u3002\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b <code>DataView</code> \u200b\u7684\u200b*\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b*\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b <code>Data</code>\uff0c\u200b\u6240\u4ee5\u200b\u4ed6\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u4f7f\u7528\u200b\u9700\u8981\u200b <code>Data</code> \u200b\u7684\u200b API \u200b\u83b7\u53d6\u200b <code>non-Data</code> \u200b\u5bf9\u8c61\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#tuple","title":"\u5143\u7ec4\u200b\uff08Tuple\uff09","text":"<p>\u200b\u4e5f\u8bb8\u200b\u6700\u200b\u6709\u6548\u200b\u7684\u200b\u4e3a\u200b <code>non-Data</code> \u200b\u4f7f\u7528\u200b <code>DataView</code> \u200b\u7684\u200b\u65b9\u5f0f\u200b\u5c31\u662f\u200b\u5c06\u200b Scala \u200b\u7684\u200b\u5143\u7ec4\u200b\u89c6\u4e3a\u200b <code>Bundle</code>\u3002\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u5728\u200b\u5305\u542b\u200b <code>DataView</code> \u200b\u4e4b\u524d\u200b\u7684\u200b Chisel\uff0c\u200b\u6709\u4eba\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b <code>Mux</code> \u200b\u5143\u7ec4\u200b\u7136\u540e\u200b\u6536\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u62a5\u9519\u200b\uff1a</p> <pre><code>class TupleExample extends RawModule {\n  val a, b, c, d = IO(Input(UInt(8.W)))\n  val cond = IO(Input(Bool()))\n  val x, y = IO(Output(UInt(8.W)))\n  (x, y) := Mux(cond, (a, b), (c, d))\n}\n// error: value := is not a member of (chisel3.UInt, chisel3.UInt)\n//   Expression does not convert to assignment because receiver is not assignable.\n//   (x, y) := Mux(cond, (a, b), (c, d))\n//   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n// error: inferred type arguments [(chisel3.UInt, chisel3.UInt)] do not conform to macro method apply's type parameter bounds [T &lt;: chisel3.Data]\n//   (x, y) := Mux(cond, (a, b), (c, d))\n//             ^^^\n// error: type mismatch;\n//  found   : (chisel3.UInt, chisel3.UInt)\n//  required: T\n//   (x, y) := Mux(cond, (a, b), (c, d))\n//                       ^^^^^^\n// error: type mismatch;\n//  found   : (chisel3.UInt, chisel3.UInt)\n//  required: T\n//   (x, y) := Mux(cond, (a, b), (c, d))\n//                               ^^^^^^\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u662f\u56e0\u4e3a\u200b\u50cf\u200b <code>Mux</code> \u200b\u548c\u200b <code>:=</code> \u200b\u8fd9\u6837\u200b\u7684\u200b Chisel \u200b\u539f\u8bed\u200b\u53ea\u200b\u64cd\u4f5c\u200b <code>Data</code> \u200b\u548c\u200b\u5143\u7ec4\u200b\u7684\u200b\u5b50\u200b\u7c7b\u578b\u200b\uff08\u200b\u4f5c\u4e3a\u200b Scala \u200b\u6807\u51c6\u200b\u5e93\u200b\u7684\u200b\u6210\u5458\u200b\uff09\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b <code>Data</code> \u200b\u7684\u200b\u5b50\u7c7b\u200b\u3002<code>DataView</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b*\u200b\u67e5\u770b\u200b* <code>Tuple</code> \u200b\u7684\u200b\u673a\u5236\u200b\uff0c\u200b\u5c31\u200b\u597d\u50cf\u200b\u4ed6\u200b\u662f\u200b <code>Data</code> \u200b\u4e00\u6837\u200b\uff1a</p> <pre><code>// \u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u6765\u200b\u8868\u793a\u200b\u5143\u7ec4\u200b\nclass HWTuple2[A &lt;: Data, B &lt;: Data](val _1: A, val _2: B) extends Bundle\n\n// \u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b Tuple \u200b\u548c\u200b HWTuple \u200b\u4e4b\u95f4\u200b\u7684\u200b DataView\nimplicit def view[A &lt;: Data, B &lt;: Data]: DataView[(A, B), HWTuple2[A, B]] =\n  DataView(tup =&gt; new HWTuple(tup._1.cloneType, tup._2.cloneType),\n           _._1 -&gt; _._1, _._2 -&gt; _._2)\n</code></pre> <p>\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>.viewAs</code> \u200b\u50cf\u200b\u4ed6\u4eec\u200b\u662f\u200b <code>Data</code> \u200b\u7684\u200b\u5b50\u200b\u7c7b\u578b\u200b\u4e00\u6837\u200b\u6765\u200b\u67e5\u770b\u200b\u5143\u7ec4\u200b\uff1a</p> <pre><code>class TupleVerboseExample extends RawModule {\n  val a, b, c, d = IO(Input(UInt(8.W)))\n  val cond = IO(Input(Bool()))\n  val x, y = IO(Output(UInt(8.W)))\n  (x, y).viewAs[HWTuple[UInt, UInt]] := Mux(cond, (a, b).viewAs[HWTuple2[UInt, UInt]], (c, d).viewAs[HWTuple2[UInt, UInt]])\n}\n</code></pre> <p>\u200b\u8fd9\u6bd4\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b\u5143\u7ec4\u200b\u7684\u200b\u539f\u59cb\u200b\u60f3\u6cd5\u200b\u8981\u200b\u5197\u957f\u200b\u5f97\u200b\u591a\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u63d0\u4f9b\u200b\u5c06\u200b <code>Tuple</code> \u200b\u89c6\u4e3a\u200b <code>HWTuple2</code> \u200b\u7684\u200b\u9690\u5f0f\u200b\u8f6c\u6362\u200b\u6765\u200b\u6539\u5584\u200b\u8fd9\u200b\u4e00\u70b9\u200b\uff1a</p> <pre><code>implicit def tuple2hwtuple[A &lt;: Data, B &lt;: Data](tup: (A, B)): HWTuple2[A, B] = \n  tup.viewAs[HWTuple(A, B)]\n</code></pre> <p>\u200b\u73b0\u5728\u200b\uff0c\u200b\u539f\u59cb\u200b\u7684\u200b\u4ee3\u7801\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8fd0\u884c\u200b\u4e86\u200b\uff01</p> <pre><code>class TupleExample extends RawModule {\n  val a, b, c, d = IO(Input(UInt(8.W)))\n  val cond = IO(Input(Bool()))\n  val x, y = IO(Output(UInt(8.W)))\n  (x, y) := Mux(cond, (a, b), (c, d))\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u5ffd\u7565\u200b\u4e86\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5fc5\u987b\u200b\u7684\u200b\u90e8\u5206\u200b\uff0c<code>DataProduct</code>\uff08\u200b\u67e5\u770b\u200b\u4e0b\u9762\u200b\u7684\u200b\u76f8\u5173\u200b\u6587\u6863\u200b\uff09</p> <p>\u200b\u6240\u6709\u200b\u7684\u200b\u8fd9\u4e9b\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e00\u6b21\u200b\u5bfc\u5165\u200b\u542f\u7528\u200b\uff1a</p> <pre><code>import chisel3.experiment.conversions._\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#dataview_1","title":"\u5b8c\u5168\u200b\u7684\u200b\u548c\u200b\u90e8\u5206\u200b\u7684\u200b DataView","text":"<p>\u200b\u5f53\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b\u548c\u200b View \u200b\u7c7b\u578b\u200b\u7684\u200b\u6240\u6709\u200b\u5b57\u6bb5\u200b\u90fd\u200b\u5305\u542b\u200b\u5728\u200b\u6620\u5c04\u200b\u4e2d\u200b\u65f6\u200b\uff0c<code>DataView</code> \u200b\u662f\u200b\u5b8c\u6574\u200b\u7684\u200b\u3002\u200b\u5982\u679c\u200b <code>DataView</code> \u200b\u4e2d\u6709\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u88ab\u200b\u9057\u5fd8\u200b\u4e86\u200b Chisel \u200b\u5c31\u200b\u4f1a\u200b\u62a5\u9519\u200b\u3002\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>class BundleA extends Bundle {\n  val foo = UInt(8.W)\n  val bar = UInt(8.W)\n}\nclass BundleB extends Bundle {\n  val fizz = UInt(8.W)\n}\n// \u200b\u6211\u4eec\u200b\u5728\u200b\u6620\u5c04\u200b\u4e2d\u200b\u5fd8\u8bb0\u200b\u4e86\u200b foo\nimplicit val myView = DataView[BundleA, BundleB](_ =&gt; new BundleB, _.bar -&gt; _.fizz)\nclass BadMapping extends Module {\n  val in = IO(Input(new BundleA))\n  val out = IO(Output(new BundleB))\n  out := in.viewAs[BundleB]\n}\n// \u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u8fd0\u884c\u200b Chisel \u200b\u6765\u200b\u770b\u5230\u200b\u9519\u8bef\u200b\ngetVerilogString(new BadMapping)\n// chisel3.experimental.dataview.package$InvalidViewException: Viewing BadMapping.in: IO[BundleA] as BundleB is non-Total!\n//   Target field '_.foo' is missing.\n//   DataView used is DataView(defined @[dataview.md 228:49]).\n//   If the view *should* be non-total, try a 'PartialDataView'.\n//  at ... ()\n//  at repl.MdocSession$MdocApp6$$anonfun$55$BadMapping$1$$anonfun$60.apply(dataview.md:232)\n//  at repl.MdocSession$MdocApp6$$anonfun$55$BadMapping$1$$anonfun$60.apply(dataview.md:232)\n//  at chisel3.Data.$anonfun$$colon$eq$1(Data.scala:681)\n//  at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:33)\n//  at chisel3.Data.$colon$eq(Data.scala:681)\n//  at repl.MdocSession$MdocApp6$$anonfun$55$BadMapping$1.&lt;init&gt;(dataview.md:232)\n//  at repl.MdocSession$MdocApp6$$anonfun$55$$anonfun$apply$67.apply(dataview.md:234)\n//  at repl.MdocSession$MdocApp6$$anonfun$55$$anonfun$apply$67.apply(dataview.md:234)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u5c31\u200b\u50cf\u200b\u62a5\u9519\u200b\u4e2d\u200b\u5efa\u8bae\u200b\u7684\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b view \u200b\u662f\u200b\u4e0d\u200b\u5b8c\u5168\u200b\u7684\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>PartialDataView</code>\uff1a</p> <pre><code>// PartialDataView \u200b\u4e0d\u7528\u200b\u662f\u200b\u76ee\u6807\u200b\u7684\u200b\u5168\u90e8\u200b\nimplicit val myView = PartialDataView[BundleA, BundleB](_ =&gt; new BundleB, _.bar -&gt; _.fizz)\nclass PartialDataViewModule extends Module {\n  val in = IO(Input(new BundleA))\n  val out = IO(Output(new BundleB))\n  out = in.viewAs[BundleB]\n}\n// Generated by CIRCT firtool-1.44.0\nmodule PartialDataViewModule(   // &lt;stdin&gt;:3:10\n  input        clock,   // &lt;stdin&gt;:4:11\n               reset,   // &lt;stdin&gt;:5:11\n  input  [7:0] in_foo,  // dataview.md:247:15\n               in_bar,  // dataview.md:247:15\n  output [7:0] out_fizz // dataview.md:248:16\n);\n\n  assign out_fizz = in_bar; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre> <p>\u200b\u867d\u7136\u200b <code>PartialDataView</code> \u200b\u4e0d\u200b\u9700\u8981\u200b\u662f\u200b*\u200b\u76ee\u6807\u200b\u7c7b\u578b\u200b*\u200b\u7684\u200b\u5168\u90e8\u200b\uff0c\u200b\u4f46\u662f\u200b*View \u200b\u7c7b\u578b\u200b*\u200b\u7684\u200b <code>PartialDataView</code> \u200b\u548c\u200b <code>DataView</code> \u200b\u5fc5\u987b\u200b\u662f\u200b\u5168\u90e8\u200b\u3002\u200b\u8fd9\u200b\u5bfc\u81f4\u200b <code>PartialDataView</code> **\u200b\u4e0d\u80fd\u200b**\u200b\u50cf\u200b <code>DataView</code> \u200b\u90a3\u6837\u200b\u53ef\u9006\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>implicit val myView2 = myView.invert(_ =&gt; new BundleA)\nclass PartialDataViewModule2 extends Module {\n  val in = IO(Input(new BundleA))\n  val out = IO(Output(new BundleB))\n  // \u200b\u4f7f\u7528\u200b\u9006\u8f6c\u200b\u540e\u200b\u7684\u200b\u6620\u5c04\u200b\n  out.viewAs[BundleA] := in\n}\n// \u200b\u6211\u4eec\u200b\u8981\u200b\u8fd0\u884c\u200b Chisel \u200b\u5f97\u5230\u200b\u62a5\u9519\u200b\ngetVerilogString(new PartialDataViewModule2)\n// chisel3.experimental.dataview.package$InvalidViewException: Cannot invert 'PartialDataView(defined @[dataview.md 243:56])' as it is non-total.\n//   Try providing a DataView[MdocApp6.this.BundleB, MdocApp6.this.BundleA].\n//   Please see https://www.chisel-lang.org/chisel3/docs/explanations/dataview.\n//  at chisel3.experimental.dataview.DataView$InvertibleDataView.invert(DataView.scala:138)\n//  at repl.MdocSession$MdocApp6$$anonfun$67.apply(dataview.md:263)\n//  at repl.MdocSession$MdocApp6$$anonfun$67.apply(dataview.md:262)\n</code></pre> <p>\u200b\u5c31\u200b\u50cf\u200b\u63d0\u5230\u200b\u7684\u200b\u90a3\u6837\u200b\uff0c\u200b\u6620\u5c04\u200b\u5fc5\u987b\u200b\u662f\u200b <code>View</code> \u200b\u7684\u200b\u5168\u90e8\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_10","title":"\u8fdb\u9636\u200b\u7ec6\u8282","text":"<p><code>DataView</code> \u200b\u5229\u7528\u200b\u4e86\u200b\u5f88\u591a\u200b Chisel \u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u719f\u6089\u200b\u7684\u200b scala \u200b\u529f\u80fd\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b Type \u200b\u7c7b\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#type","title":"Type \u200b\u7c7b","text":"<p>Type \u200b\u7c7b\u200b\u662f\u200b\u7528\u4e8e\u200b\u7f16\u5199\u200b\u591a\u6001\u200b\u4ee3\u7801\u200b\u7684\u200b\u5f3a\u5927\u200b\u8bed\u8a00\u200b\u529f\u80fd\u200b\u3002\u200b\u5b83\u4eec\u200b\u662f\u200b Scala\u3001Swift\uff08\u200b\u53c2\u89c1\u200b Protocols\uff09\u200b\u548c\u200b Rust\uff08\u200b\u53c2\u89c1\u200b Traits\uff09\u200b\u7b49\u200b\u201c\u200b\u73b0\u4ee3\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\u201d\u200b\u7684\u200b\u5e38\u89c1\u200b\u529f\u80fd\u200b\u3002Type \u200b\u7c7b\u200b\u53ef\u80fd\u200b\u770b\u8d77\u6765\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u7ee7\u627f\u200b\uff0c\u200b\u4f46\u200b\u6709\u200b\u4e00\u4e9b\u200b\u91cd\u8981\u200b\u7684\u200b\u533a\u522b\u200b\uff1a</p> <ol> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u4e0d\u200b\u5c5e\u4e8e\u200b\u4f60\u200b\u7684\u200b\u7c7b\u578b\u200b\u63d0\u4f9b\u200b Type \u200b\u7c7b\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b\u7b2c\u4e09\u65b9\u200b\u5e93\u200b\u3001Scala \u200b\u6807\u51c6\u200b\u5e93\u200b\u6216\u200b Chisel \u200b\u672c\u8eab\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u200b\uff09</li> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u8bb8\u591a\u200b\u6ca1\u6709\u200b\u5b50\u200b\u7c7b\u578b\u200b\u5173\u7cfb\u200b\u7684\u200b\u7c7b\u578b\u200b\u7f16\u5199\u200b\u5355\u4e2a\u200b Type \u200b\u7c7b\u200b</li> <li>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u540c\u4e00\u200b\u7c7b\u578b\u200b\u63d0\u4f9b\u200b\u591a\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b Type \u200b\u7c7b\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b <code>DataView</code>\uff0c1 \u200b\u81f3\u5173\u91cd\u8981\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u80fd\u591f\u200b\u5b9e\u73b0\u200b\u5185\u7f6e\u200b Scala \u200b\u7c7b\u578b\u200b\uff08\u200b\u5982\u200b\u5143\u7ec4\u200b\u548c\u200b <code>Seq</code>\uff09\u200b\u7684\u200b DataView\u3002\u200b\u6b64\u5916\u200b\uff0c<code>DataView</code> \u200b\u6709\u200b\u4e24\u4e2a\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\uff08Target \u200b\u548c\u200b View \u200b\u7c7b\u578b\u200b\uff09\uff0c\u200b\u56e0\u6b64\u200b\u7ee7\u627f\u200b\u5b9e\u9645\u4e0a\u200b\u6ca1\u6709\u200b\u610f\u4e49\u200b \u2014\u2014 \u200b\u54ea\u200b\u79cd\u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u6269\u5c55\u200b DataView\uff1f</li> </ol> <p>\u200b\u5728\u200b Scala2 \u200b\u4e2d\u200b\uff0cType \u200b\u7c7b\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u5185\u7f6e\u200b\u7684\u200b\u8bed\u8a00\u200b\u7279\u6027\u200b\uff0c\u200b\u800c\u662f\u200b\u4f7f\u7528\u200b implicit \u200b\u5b9e\u73b0\u200b\u3002\u200b\u82e5\u6709\u200b\u5174\u8da3\u200b\u53ef\u4ee5\u200b\u9605\u8bfb\u200b\uff1a</p> <ul> <li>\u200b\u57fa\u7840\u6559\u7a0b\u200b</li> <li>\u200b\u5728\u200b StackOverflow \u200b\u4e0a\u200b\u5f88\u200b\u6709\u200b\u610f\u4e49\u200b\u7684\u200b\u89e3\u91ca\u200b</li> </ul> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0cScala 3 \u200b\u6dfb\u52a0\u200b\u4e86\u200b\u4e0d\u9002\u200b\u7528\u4e8e\u200b Chisel 3 \u200b\u7684\u200b Type \u200b\u7c7b\u200b\u5185\u7f6e\u200b\u8bed\u6cd5\u200b\uff0cChisel 3 \u200b\u76ee\u524d\u200b\u4ec5\u200b\u652f\u6301\u200b Scala 2\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#implicit","title":"implicit \u200b\u89e3\u6790","text":"<p>\u200b\u9274\u4e8e\u200b <code>DataView</code> \u200b\u662f\u200b\u4f7f\u7528\u200b implicit \u200b\u5b9e\u73b0\u200b\u7684\u200b\uff0c\u200b\u7406\u89e3\u200b implicit \u200b\u5c31\u200b\u5f88\u200b\u91cd\u8981\u200b\u3002\u200b\u5f53\u200b\u7f16\u8bd1\u5668\u200b\u9700\u8981\u200b\u9690\u5f0f\u200b\u53c2\u6570\u200b\u65f6\u200b\uff0c\u200b\u5b83\u200b\u9996\u5148\u200b\u5728\u200b*\u200b\u5f53\u524d\u200b\u4f5c\u7528\u57df\u200b*\u200b\u5bfb\u627e\u200b\uff0c\u200b\u7136\u540e\u200b\u624d\u200b\u5728\u200b\u9690\u5f0f\u200b\u4f5c\u7528\u57df\u200b\u5bfb\u627e\u200b\u3002</p> <ol> <li>\u200b\u5f53\u524d\u200b\u4f5c\u7528\u57df\u200b</li> <li>\u200b\u5f53\u524d\u200b\u4f5c\u7528\u57df\u200b\u5b9a\u4e49\u200b\u7684\u200b\u503c\u200b</li> <li>\u200b\u663e\u5f0f\u200b\u5bfc\u5165\u200b</li> <li>\u200b\u901a\u914d\u7b26\u200b\u5bfc\u5165\u200b</li> <li>\u200b\u9690\u5f0f\u200b\u4f5c\u7528\u57df\u200b</li> <li>\u200b\u7c7b\u578b\u200b\u7684\u200b\u4f34\u751f\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u9690\u5f0f\u200b\u8303\u56f4\u200b</li> <li>\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u7684\u200b\u9690\u5f0f\u200b\u8303\u56f4\u200b</li> </ol> <p>\u200b\u5982\u679c\u200b\u5728\u200b\u4efb\u4e00\u200b\u9636\u6bb5\u200b\u53d1\u73b0\u200b\u591a\u4e2a\u200b implicit\uff0c\u200b\u5219\u200b\u4f7f\u7528\u200b\u9759\u6001\u200b\u91cd\u8f7d\u200b\u89c4\u5219\u200b\u6765\u200b\u89e3\u51b3\u200b\u5b83\u200b\u3002\u200b\u7b80\u800c\u8a00\u4e4b\u200b\uff0c\u200b\u5982\u679c\u200b\u4e00\u79cd\u200b implicit \u200b\u7528\u4e8e\u200b\u53e6\u200b\u4e00\u79cd\u200b\u66f4\u200b\u5177\u4f53\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5219\u200b\u5c06\u200b\u9009\u62e9\u200b\u66f4\u200b\u5177\u4f53\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u5982\u679c\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u9636\u6bb5\u200b\u5185\u200b\u5e94\u7528\u200b\u591a\u4e2a\u200b implicit\uff0c\u200b\u5219\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u629b\u51fa\u200b\u4e0d\u200b\u660e\u786e\u200b\u7684\u200b implicit \u200b\u89e3\u6790\u200b\u9519\u8bef\u200b\u3002</p> <p>\u200b\u672c\u200b\u8282\u200b\u5927\u91cf\u200b\u501f\u9274\u200b\u4e86\u200b 1 \u200b\u548c\u200b 2\u3002\u200b\u5c24\u5176\u200b\u662f\u200b\u67e5\u770b\u200b [1] \u200b\u7684\u200b\u793a\u4f8b\u200b</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#implicit_1","title":"implicit \u200b\u89e3\u6790\u200b\u793a\u4f8b","text":"<p>\u200b\u4e3a\u4e86\u200b\u66f4\u52a0\u200b\u6e05\u695a\u200b\u7684\u200b\u7406\u89e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u8003\u8651\u4e00\u4e0b\u200b implicit \u200b\u89e3\u6790\u200b\u662f\u200b\u5982\u4f55\u200b\u4e3a\u200b <code>DataView</code> \u200b\u5de5\u4f5c\u200b\u7684\u200b\u3002\u200b\u770b\u200b <code>viewAs</code> \u200b\u7684\u200b\u5b9a\u4e49\u200b\uff1a</p> <pre><code>def viewAs[V &lt;: Data](implicit dataView: DataView[T, V]): V\n</code></pre> <p>\u200b\u6709\u200b\u4e86\u200b\u4e0a\u200b\u4e00\u8282\u200b\u7684\u200b\u77e5\u8bc6\u200b\uff0c\u200b\u6211\u4eec\u200b\u77e5\u9053\u200b\u6bcf\u5f53\u200b\u6211\u4eec\u200b\u8c03\u7528\u200b <code>.viewAs</code> \u200b\u65f6\u200b\uff0cScala \u200b\u7f16\u8bd1\u5668\u200b\u5c06\u200b\u9996\u5148\u200b\u5728\u200b\u5f53\u524d\u200b\u4f5c\u7528\u57df\u200b\uff08\u200b\u5b9a\u4e49\u200b\u6216\u200b\u5bfc\u5165\u200b\uff09\u200b\u4e2d\u200b\u67e5\u627e\u200b <code>DataView[T, V]</code>\uff0c\u200b\u7136\u540e\u200b\u67e5\u627e\u200b <code>DataView</code>\u3001<code>T</code> \u200b\u548c\u200b <code>V</code> \u200b\u7684\u200b\u4f34\u751f\u200b\u5bf9\u8c61\u200b\u3002\u200b\u8fd9\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e00\u79cd\u200b\u76f8\u5f53\u200b\u5f3a\u5927\u200b\u7684\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5373\u200b <code>DataView</code> \u200b\u7684\u200b\u9ed8\u8ba4\u200b\u6216\u200b\u5178\u578b\u200b\u5b9e\u73b0\u200b\u5e94\u8be5\u200b\u5728\u200b\u4e24\u79cd\u200b\u7c7b\u578b\u200b\u4e4b\u4e00\u200b\u7684\u200b\u4f34\u751f\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u3002\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u5b9a\u4e49\u200b\u7684\u200b <code>DataView</code> \u200b\u89c6\u4e3a\u200b\u201c\u200b\u4f4e\u4f18\u5148\u7ea7\u200b\u9ed8\u8ba4\u503c\u200b\u201d\u3002\u200b\u5982\u679c\u200b\u7ed9\u5b9a\u200b\u7528\u6237\u200b\u60f3\u8981\u200b\u4e0d\u540c\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5b83\u4eec\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7279\u5b9a\u200b\u7684\u200b\u5bfc\u5165\u200b\u5426\u51b3\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <p>\u200b\u7ed9\u5b9a\u200b\u4ee5\u4e0b\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>class Foo extends Bundle {\n  val a = UInt(8.W)\n  val b = UInt(8.W)\n}\n\nclass Bar extends Bundle {\n  val c = UInt(8.W)\n  val d = UInt(8.W)\n}\n\nobject Foo {\n  implicit val f2b = DataView[Foo, Bar](_ =&gt; new Bar, _.a -&gt; _.c, _.b -&gt; _.d)\n  implicit val b2f = f2b.invert(_ =&gt; new Foo)\n}\n</code></pre> <p>\u200b\u8fd9\u200b\u5728\u200b\u9690\u5f0f\u200b\u4f5c\u7528\u57df\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b DataView \u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u4f5c\u4e3a\u200b Foo \u200b\u548c\u200b Bar \u200b\u4e4b\u95f4\u200b\u7684\u200b\u201c\u200b\u9ed8\u8ba4\u200b\u201d\u200b\u6620\u5c04\u200b\uff08\u200b\u751a\u81f3\u200b\u4e0d\u200b\u9700\u8981\u200b\u5bfc\u5165\u200b\uff01\uff09\uff1a</p> <pre><code>class FooToBar extends Module {\n  val foo = IO(Input(new Foo))\n  val bar = IO(Output(new Bar))\n  bar := foo.viewAs[Bar]\n}\n// Generated by CIRCT firtool-1.44.0\nmodule FooToBar(    // &lt;stdin&gt;:3:10\n  input        clock,   // &lt;stdin&gt;:4:11\n               reset,   // &lt;stdin&gt;:5:11\n  input  [7:0] foo_a,   // dataview.md:301:15\n               foo_b,   // dataview.md:301:15\n  output [7:0] bar_c,   // dataview.md:302:15\n               bar_d    // dataview.md:302:15\n);\n\n  assign bar_c = foo_a; // &lt;stdin&gt;:3:10\n  assign bar_d = foo_b; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre> <p>\u200b\u7136\u800c\u200b\uff0c\u200b\u4e00\u4e9b\u200b <code>Foo</code> \u200b\u548c\u200b <code>Bar</code> \u200b\u7684\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u5e0c\u671b\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c\u200b\u4e5f\u8bb8\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u76f4\u63a5\u200b\u6620\u5c04\u200b\u4ed6\u4eec\u200b\u66f4\u200b\u559c\u6b22\u200b \u201cSwizzling\u201d \u200b\u7684\u200b\u884c\u4e3a\u200b\uff1a</p> <pre><code>object Swizzle {\n  implicit val swizzle = DataView[Foo, Bar](_ =&gt; new Bar, _.a -&gt; _.d, _.b -&gt; _.c)\n}\n// \u200b\u5f53\u524d\u200b\u4f5c\u7528\u57df\u200b\u6c38\u8fdc\u200b\u80dc\u8fc7\u200b\u9690\u5f0f\u200b\u4f5c\u7528\u57df\u200b\nimport Swizzle._\nclass FooToBarSwizzled extends Module {\n  val foo = IO(Input(new Foo))\n  val bar = IO(Output(new Bar))\n  bar := foo.viewAs[Bar]\n}\n// Generated by CIRCT firtool-1.44.0\nmodule FooToBarSwizzled(    // &lt;stdin&gt;:3:10\n  input        clock,   // &lt;stdin&gt;:4:11\n               reset,   // &lt;stdin&gt;:5:11\n  input  [7:0] foo_a,   // dataview.md:325:15\n               foo_b,   // dataview.md:325:15\n  output [7:0] bar_c,   // dataview.md:326:15\n               bar_d    // dataview.md:326:15\n);\n\n  assign bar_c = foo_b; // &lt;stdin&gt;:3:10\n  assign bar_d = foo_a; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#dataproduct","title":"DataProduct","text":"<p><code>DataProduct</code> \u200b\u662f\u200b <code>DataView</code> \u200b\u7528\u4e8e\u200b\u9a8c\u8bc1\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u7684\u200b\u6620\u5c04\u200b\u7684\u200b\u6b63\u786e\u6027\u200b\u7684\u200b Type \u200b\u7c7b\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4f7f\u200b\u7c7b\u578b\u200b\u53ef\u200b\u67e5\u770b\u200b\uff08\u200b\u5373\u200b <code>DataView</code> \u200b\u7684\u200b <code>Target</code> \u200b\u7c7b\u578b\u200b\uff09\uff0c\u200b\u5b83\u200b\u5fc5\u987b\u200b\u5177\u6709\u200b <code>DataProduct</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e9b\u200b non-Bundle \u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>// \u200b\u57fa\u4e8e\u200b chisel3.util.Counter\nclass MyCounter(val width: Int) {\n  /** \u200b\u6307\u793a\u200b\u8ba1\u6570\u5668\u200b\u662f\u5426\u200b\u5728\u200b\u672c\u200b\u5468\u671f\u200b\u9012\u589e\u200b */\n  val active = WireDefault(false.B)\n  val value = RegInit(0.U(width.W))\n  def inc(): Unit = {\n    active := true.B\n    value := value + 1.U\n  }\n  def reset(): Unit = {\n    value := 0.U\n  }\n}\n</code></pre> <p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u8981\u200b\u5c06\u200b <code>MyCounter</code> \u200b\u89c6\u4e3a\u200b <code>Valid[UInt]</code>\uff1a</p> <pre><code>import chisel3.util.Valid\nimplicit val counterView = DataView[MyCounter, Valid[UInt]](c =&gt; Valid(UInt(c.width.W)), _.value -&gt; _.bits, _.active -&gt; _.valid)\n// error: myView is already defined as value myView\n// implicit val myView = PartialDataView[BundleA, BundleB](_ =&gt; new BundleB, _.bar -&gt; _.fizz)\n// ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n// error: Could not find implicit value for DataView[MdocApp1.this.BundleA, MdocApp1.this.BundleB].\n// Please see https://www.chisel-lang.org/chisel3/docs/explanations/dataview\n//    out := in.viewAs[BundleB]\n//           ^^^^^^^^^^^^^^^^^^\n// error: Could not find implicit value for DataView[MdocApp1.this.BundleA, MdocApp1.this.BundleB].\n// Please see https://www.chisel-lang.org/chisel3/docs/explanations/dataview\n//    out := in.viewAs[BundleB]\n//           ^^^^^^^^^^^^^^^^^^\n// error: Could not find implicit value for DataView[MdocApp1.this.BundleB, MdocApp1.this.BundleA].\n// Please see https://www.chisel-lang.org/chisel3/docs/explanations/dataview\n//    out.viewAs[BundleA] := in\n//    ^^^^^^^^^^^^^^^^^^^\n// error: Could not find implicit value for DataProduct[MdocApp1.this.MyCounter].\n// Please see https://www.chisel-lang.org/chisel3/docs/explanations/dataview#dataproduct\n// implicit val counterView = DataView[MyCounter, Valid[UInt]](c =&gt; Valid(UInt(c.width.W)), _.value -&gt; _.bits, _.active -&gt; _.valid)\n//                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre> <p>\u200b\u5982\u200b\u4f60\u200b\u6240\u89c1\u200b\uff0cScala \u200b\u4f1a\u200b\u7f16\u8bd1\u200b\u5931\u8d25\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u63d0\u4f9b\u200b <code>DataProductp[Mycounter]</code> \u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5b83\u200b\u4e3a\u200b Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u8bbf\u95ee\u200b <code>MyCounter</code> \u200b\u4e2d\u200b <code>Data</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff1a</p> <pre><code>import chisel3.util.Valid\nimplicit val counterProduct = new DataProduct[MyCounter] {\n  // \u200b\u5143\u7ec4\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u90e8\u5206\u200b\u65f6\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8def\u5f84\u200b\uff0c\u200b\u7528\u6765\u200b\u5e2e\u52a9\u200b\u8c03\u8bd5\u200b\n  def dataIterator(a: MyCounter, path: String): Iterator[(Data, String)] =\n    List(a.value -&gt; s\"$path.value\", a.active -&gt; s\"$path.active\").iterator\n}\n// Now this works\nimplicit val counterView = DataView[MyCounter, Valid[UInt]](c =&gt; Valid(UInt(c.width.W)), _.value -&gt; _.bits, _.active -&gt; _.valid)\n</code></pre> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8fd9\u200b\u6709\u7528\u200b\uff1f\u200b\u8fd9\u200b\u5c31\u662f\u200b Chisel \u200b\u80fd\u591f\u200b\u68c0\u67e5\u200b <code>DataView</code> \u200b\u5b8c\u6574\u6027\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002\u200b\u9664\u4e86\u200b\u68c0\u67e5\u7528\u6237\u200b\u662f\u5426\u200b\u5728\u200b\u6620\u5c04\u200b\u4e4b\u5916\u200b\u9057\u6f0f\u200b\u4e86\u200b\u5b57\u200b\u6bb5\u200b\u4e4b\u5916\u200b\uff0c\u200b\u5b83\u200b\u8fd8\u200b\u5141\u8bb8\u200b Chisel \u200b\u68c0\u67e5\u7528\u6237\u200b\u662f\u5426\u200b\u5728\u200b\u6620\u5c04\u200b\u4e2d\u200b\u5305\u542b\u200b\u4e86\u200b\u5b9e\u9645\u4e0a\u200b\u4e0d\u200b\u5c5e\u4e8e\u200b*\u200b\u76ee\u6807\u200b*\u200b\u6216\u200b *view \u200b\u7c7b\u578b\u200b*\u200b\u90e8\u5206\u200b\u7684\u200b <code>Data</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#function-module-creation","title":"\u529f\u80fd\u6a21\u5757\u200b\u521b\u5efa\u200b\uff08Function Module Creation\uff09","text":"<p>Scala \u200b\u4e2d\u200b\u7684\u200b\u5bf9\u8c61\u200b\u6709\u200b\u4e00\u4e2a\u200b\u9884\u5148\u200b\u5b58\u5728\u200b\u7684\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\uff08\u200b\u65b9\u6cd5\u200b\uff09\uff0c\u200b\u53eb\u200b <code>apply</code>\u3002\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u5728\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u88ab\u200b\u7528\u4f5c\u200b\u503c\u65f6\u200b\uff08\u200b\u8fd9\u200b\u4e00\u822c\u200b\u610f\u5473\u7740\u200b\u8c03\u7528\u200b\u4e86\u200b\u6784\u9020\u51fd\u6570\u200b\uff09\uff0c\u200b\u8fd9\u4e2a\u200b\u65b9\u6cd5\u200b\u786e\u8ba4\u200b\u4e86\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u5f53\u200b\u5904\u7406\u200b\u786c\u4ef6\u200b\u6a21\u5757\u200b\u65f6\u200b\uff0c\u200b\u4eba\u4eec\u200b\u4f1a\u200b\u5e0c\u671b\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u51fa\u200b\u80fd\u591f\u200b\u4ee3\u8868\u200b\u6a21\u5757\u200b\u7684\u200b\u529f\u80fd\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6211\u4eec\u200b\u6709\u65f6\u200b\u4f1a\u200b\u5e0c\u671b\u200b\u5bf9\u8c61\u200b\u5728\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u88ab\u200b\u7528\u4f5c\u200b\u503c\u65f6\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u662f\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u56e0\u4e3a\u200b\u786c\u4ef6\u200b\u6a21\u5757\u200b\u88ab\u200b\u8868\u8fbe\u200b\u4e3a\u200b Scala \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u5bf9\u8c61\u200b\u7684\u200b <code>apply</code> \u200b\u65b9\u6cd5\u200b\u4f7f\u200b\u5176\u200b\u8fd4\u56de\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u79f0\u200b\u4f5c\u4e3a\u200b\u6a21\u5757\u200b\u7684\u200b\u6784\u9020\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\u63a5\u53e3\u200b\u3002\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5176\u200b\u7528\u4e8e\u200b\u6807\u51c6\u200b\u7684\u200b mux2 \u200b\u793a\u4f8b\u200b\uff0c\u200b\u6211\u4eec\u200b\u8981\u200b\u5728\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u4f7f\u7528\u200b mux2 \u200b\u65f6\u200b\u8fd4\u56de\u200b mux2 \u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u5b9e\u73b0\u200b\u8fd9\u4e00\u200b\u529f\u80fd\u200b\u9700\u8981\u200b\u5efa\u7acb\u200b\u4f7f\u7528\u200b\u591a\u8def\u200b\u9009\u62e9\u5668\u200b\u8f93\u5165\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b\u591a\u8def\u200b\u9009\u62e9\u5668\u200b\u8f93\u51fa\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a</p> <pre><code>import chisel3._\n\nclass Mux2 extends Module {\n  val io = IO(new Bundle {\n    val sel = Input(Bool())\n    val in0 = Input(UInt())\n    val in1 = Input(UInt())\n    val out = Output(UInt())\n  })\n  io.out := Mux(io.sel, io.in0, io.in1)\n}\n\nobject Mux2 {\n  def apply(sel: UInt, in0: UInt, in1: UInt) = {\n    val m = Module(new Mux2)\n    m.io.in0 := in0\n    m.io.in1 := in1\n    m.io.sel := sel\n    m.io.out\n  }\n}\n</code></pre> <p>\u200b\u5c31\u200b\u5982\u200b\u6211\u4eec\u200b\u5728\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\u4e2d\u200b\u770b\u5230\u200b\u7684\u200b\u4e00\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>apply</code> \u200b\u65b9\u6cd5\u200b\u6765\u200b\u5c06\u200b Mux2 \u200b\u7684\u200b\u8f93\u5165\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b Mux2 \u200b\u7684\u200b\u8f93\u51fa\u200b\u4f5c\u4e3a\u200b\u5e7b\u672f\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002\u200b\u901a\u8fc7\u200b\u8fd9\u6837\u200b\u5b9a\u4e49\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u4e4b\u540e\u200b\u5b9e\u73b0\u200b\u8fd9\u4e00\u200b\u5e38\u7528\u200b\u6a21\u5757\u200b\u7684\u200b\u66f4\u200b\u5927\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u7248\u672c\u200b\u53d8\u5f97\u200b\u7b80\u5355\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e4b\u524d\u200b\u662f\u200b\u8fd9\u6837\u200b\u5b9e\u73b0\u200b Mux4 \u200b\u7684\u200b\uff1a</p> <pre><code>class Mux4 extends Module {\n  val io = IO(new Bundle) {\n    val in0 = Input(UInt(1.W))\n    val in1 = Input(UInt(1.W))\n    val in2 = Input(UInt(1.W))\n    val in3 = Input(UInt(1.W))\n    val sel = Input(UInt(2.W))\n    val out = Input(UInt(1.W))\n  }\n  val m0 = Module(new Mux2)\n  m0.io.in0 := io.in0\n  m0.io.in1 := io.in1\n  mo.io.sel := io.sel(0)\n\n  val m1 = Module(new Mux2)\n  m1.io.in0 := io.in2\n  m1.io.in1 := io.in3\n  m1.io.sel := io.sel(0)\n\n  val m3 Module(new Mux2)\n  m3.io.in0 := m0.io.out\n  m3.io.in1 := m1.io.out\n  m3.io.sel := io.sel(1)\n\n  io.out := m3.io.out\n}\n</code></pre> <p>\u200b\u7136\u800c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u6211\u4eec\u200b\u4e3a\u200b Mux2 \u200b\u91cd\u200b\u5b9a\u4e49\u200b\u7684\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\uff0c\u200b\u73b0\u5728\u200b\u5728\u200b\u7f16\u5199\u200b Mux4 \u200b\u8f93\u51fa\u200b\u8868\u8fbe\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5c06\u200b Mux2 \u200b\u7684\u200b\u8f93\u51fa\u200b\u5f53\u4f5c\u200b\u6a21\u5757\u200b\u81ea\u8eab\u200b\u7684\u200b\u503c\u200b\u4f7f\u7528\u200b\u4e86\u200b\uff1a</p> <pre><code>class Mux4 extends Module {\n  val io = IO(new Bundle {\n    val in0 = Input(UInt(1.W))\n    val in1 = Input(UInt(1.W))\n    val in2 = Input(UInt(1.W))\n    val in3 = Input(UInt(1.W))\n    val sel = Input(UInt(2.W))\n    val out = Input(UInt(1.W))\n  })\n\n  io.out := Mux2(io.sel(1), \n                 Mux2(io.sel(0), io.in0, io.in1),\n                 Mun2(io.sel(0), io.in0, io.in1))\n}\n</code></pre> <p>\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u6211\u4eec\u200b\u80fd\u591f\u200b\u7f16\u5199\u200b\u66f4\u200b\u76f4\u89c2\u200b\u53ef\u8bfb\u200b\u7684\u200b\u786c\u4ef6\u200b\u8fde\u63a5\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u8fd9\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u8f6f\u4ef6\u200b\u8868\u8fbe\u5f0f\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#muxes-and-input-selection","title":"\u591a\u8def\u590d\u7528\u200b\u5668\u200b\u548c\u200b\u8f93\u5165\u200b\u9009\u62e9\u200b\uff08Muxes and Input Selection\uff09","text":"<p>\u200b\u5728\u200b\u786c\u4ef6\u200b\u63cf\u8ff0\u200b\u4e2d\u200b\u9009\u62e9\u200b\u8f93\u5165\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\uff0c\u200b\u56e0\u6b64\u200b Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5185\u7f6e\u200b\u7684\u200b\u901a\u7528\u200b\u8f93\u5165\u200b\u9009\u62e9\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#mux","title":"Mux","text":"<p>\u200b\u7b2c\u4e00\u4e2a\u200b\u662f\u200b <code>Mux</code>\u3002\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b 2 \u200b\u8f93\u5165\u200b\u9009\u62e9\u5668\u200b\u3002\u200b\u4e0e\u200b\u4e4b\u524d\u200b\u5c55\u793a\u200b\u7684\u200b <code>Mux2</code> \u200b\u793a\u4f8b\u200b\u4e0d\u540c\u200b\uff0c\u200b\u5185\u7f6e\u200b\u7684\u200b <code>Mux</code> \u200b\u5141\u8bb8\u200b\u8f93\u5165\u200b\uff08<code>in0</code> \u200b\u548c\u200b <code>in1</code>\uff09\u200b\u662f\u200b\u4efb\u4f55\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u53ea\u8981\u200b\u4ed6\u4eec\u200b\u90fd\u200b\u662f\u200b <code>Data</code> \u200b\u7684\u200b\u5b50\u7c7b\u200b\u3002</p> <p>\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b\u4e0a\u200b\u4e00\u8282\u200b\u63d0\u5230\u200b\u7684\u200b\u51fd\u6570\u200b\u6a21\u578b\u200b\u521b\u5efa\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u7b80\u5355\u200b\u7684\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u591a\u200b\u8f93\u5165\u200b\u9009\u62e9\u5668\u200b\uff1a</p> <pre><code>Mux(c1, a, Mux(c2, b, Mux(..., default)))\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#muxcase","title":"MuxCase","text":"<p>\u200b\u5d4c\u5957\u200b\u7684\u200b <code>Mux</code> \u200b\u4e0d\u662f\u200b\u5fc5\u987b\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5185\u7f6e\u200b\u7684\u200b <code>MuxCase</code>\uff0c\u200b\u5b83\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u529f\u80fd\u200b\u3002<code>MuxCase</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b n \u200b\u8def\u200b <code>Mux</code>\uff0c\u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>MuxCase(default, Array(c1 -&gt; a, c2 -&gt; b, ...))\n</code></pre> <p>\u200b\u5176\u4e2d\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u9009\u62e9\u200b\u4f9d\u8d56\u200b\u9879\u200b\u90fd\u200b\u8868\u793a\u200b\u4e3a\u200b Scala \u200b\u5143\u7ec4\u200b [condition -&gt; selected_input_port]</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#muxlookup","title":"MuxLookup","text":"<p>Chisel \u200b\u4e5f\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>MuxLookup</code>\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b n \u200b\u8def\u200b\u53ef\u200b\u7d22\u5f15\u200b\u591a\u8def\u200b\u9009\u62e9\u5668\u200b\uff1a</p> <pre><code>MuxLookup(idx, default)(Array(0.U -&gt; a, 1.U -&gt; b, ...))\n</code></pre> <p>\u200b\u8fd9\u200b\u548c\u200b\u6761\u4ef6\u200b\u662f\u200b\u57fa\u4e8e\u200b\u7d22\u5f15\u200b\u7684\u200b <code>MuxCase</code> \u200b\u4f5c\u7528\u200b\u76f8\u540c\u200b\uff1a</p> <pre><code>MuxCase(default,\n        Array((idx === 0.U) -&gt; a),\n              (idx === 1.U) -&gt; b, ...)\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u6761\u4ef6\u200b/\u200b\u60c5\u51b5\u200b/\u200b\u9009\u62e9\u200b\u4fe1\u53f7\u200b\uff08\u200b\u5373\u200b c1, c2\uff09\u200b\u90fd\u200b\u8981\u200b\u5728\u200b\u62ec\u53f7\u200b\u91cc\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#mux1h","title":"Mux1H","text":"<p>\u200b\u53e6\u200b\u4e00\u79cd\u200b <code>Mux</code> \u200b\u662f\u200b\u72ec\u70ed\u200b\u591a\u8def\u590d\u7528\u200b\u5668\u200b\uff0c<code>Mux1H</code>\u3002\u200b\u5b83\u200b\u4f7f\u7528\u200b\u4e00\u7cfb\u5217\u200b\u9009\u62e9\u200b\u4fe1\u53f7\u200b\u548c\u200b\u503c\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e0e\u200b\u7f6e\u4f4d\u200b\u7684\u200b\u9009\u62e9\u200b\u4fe1\u53f7\u200b\u5173\u8054\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u6ca1\u6709\u200b\u7f6e\u4f4d\u200b\u7684\u200b\u9009\u62e9\u200b\u4fe1\u53f7\u200b\u548c\u200b\u591a\u4e2a\u200b\u7f6e\u4f4d\u200b\u7684\u200b\u9009\u62e9\u200b\u4fe1\u53f7\u200b\u662f\u200b\u672a\u5b9a\u4e49\u200b\u7684\u200b\u884c\u4e3a\u200b\u3002\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>val hostvalue = chisel3.util.Mux1H(seq(\n  io.selector(0) -&gt; 2.U,\n  io.selector(1) -&gt; 4.U,\n  io.selector(2) -&gt; 8.U,\n  io.selector(4) -&gt; 11.U,\n))\n</code></pre> <p><code>Mux1H</code> \u200b\u53ea\u8981\u200b\u6709\u200b\u53ef\u80fd\u200b\u5c31\u200b\u4f1a\u200b\u751f\u6210\u200b\u5f88\u200b\u5bb9\u6613\u200b\u4f18\u5316\u200b\u4e3a\u200b\u4f4e\u200b\u6df1\u5ea6\u200b\u4e0e\u200b/\u200b\u6216\u6811\u200b\u7684\u200b Firrtl\u3002\u200b\u8fd9\u4e00\u200b\u4f18\u5316\u200b\u5728\u200b\u503c\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b <code>FixedPoint</code> \u200b\u6216\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b <code>FixedPoint</code> \u200b\u7684\u200b\u805a\u5408\u200b\u7c7b\u578b\u200b\u65f6\u200b\u4e0d\u53ef\u200b\u7528\u200b\uff0c\u200b\u5e76\u4e14\u200b\u7ed3\u679c\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b <code>Mux</code> \u200b\u6811\u200b\u66ff\u4ee3\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u884c\u4e3a\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u662f\u200b\u6700\u4f73\u200b\u7684\u200b\u3002\u200b\u7531\u4e8e\u200b <code>FixedPoint</code> \u200b\u4ecd\u200b\u5904\u4e8e\u200b*\u200b\u5b9e\u9a8c\u200b\u9636\u6bb5\u200b*\uff0c\u200b\u8fd9\u4e00\u200b\u884c\u4e3a\u200b\u672a\u6765\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6709\u200b\u53d8\u5316\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#multiple-clock-domains","title":"\u591a\u200b\u65f6\u949f\u200b\u57df\u200b\uff08Multiple Clock Domains\uff09","text":"<p>Chisel 3 \u200b\u652f\u6301\u200b\u591a\u200b\u65f6\u949f\u200b\u57df\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u5b89\u5168\u200b\u7684\u200b\u8de8\u200b\u65f6\u949f\u200b\u57df\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u9002\u5f53\u200b\u7684\u200b\u540c\u6b65\u200b\u903b\u8f91\u200b\uff08\u200b\u6bd4\u5982\u200b\u5f02\u6b65\u200b FIFO\uff09\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b AsyncQueue \u200b\u5e93\u200b\u8f7b\u677e\u200b\u7684\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u3002</p> <pre><code>import chisel3._\n\nclass MultiClockModule extends Module {\n  val io = IO(new Bundle {\n    val clockB = Input(Clock())\n    val resetB = Input(Bool())\n    val stuff = Input(Bool())\n  })\n\n  // \u200b\u8be5\u200b\u5bc4\u5b58\u5668\u200b\u65f6\u949f\u200b\u4f7f\u7528\u200b\u6a21\u5757\u200b\u65f6\u949f\u200b\n  val regClock = RegNext(io.stuff)\n\n  withClockAndReset (io.clockB, io.resetB) {\n    // \u200b\u5728\u200b\u8fd9\u4e2a\u200b withClock \u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u540c\u6b65\u200b\u5143\u7d20\u200b\u90fd\u200b\u4f9d\u9760\u200b io.clockB \u200b\u4f5c\u4e3a\u200b\u65f6\u949f\u200b\u3002\n    // \u200b\u8fd9\u4e2a\u200b\u533a\u57df\u200b\u4e2d\u200b\u89e6\u53d1\u5668\u200b\u7684\u200b\u590d\u4f4d\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u663e\u5f0f\u200b\u63d0\u4f9b\u200b\u7684\u200b\u590d\u4f4d\u200b io.resetB\u3002\n\n    // \u200b\u8be5\u200b\u5bc4\u5b58\u5668\u200b\u4f7f\u7528\u200b io.ClockB \u200b\u4f5c\u4e3a\u200b\u65f6\u949f\u200b\n    val regClockB = RegNext(io.stuff)\n  }\n\n  // \u200b\u8be5\u200b\u5bc4\u5b58\u5668\u200b\u4e5f\u200b\u4f7f\u7528\u200b\u6a21\u5757\u200b\u65f6\u949f\u200b\u4f5c\u4e3a\u200b\u65f6\u949f\u200b\n  val regClock2 = RegNext(io.stuff)\n}\n</code></pre> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5176\u4ed6\u200b\u65f6\u949f\u200b\u57df\u200b\u4e2d\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u6a21\u5757\u200b\uff1a</p> <pre><code>import chisel3._\n\nclass ChildModule extends Module {\n  val io = IO(new Bundle {\n    val in = Input(Bool())\n  })\n}\n\nclass MultiClockModule extends Module {\n  val io = IO(new Bundle {\n    val clockB = Input(Clock())\n    val resetB = Input(Bool())\n    val stuff = Input(Bool())\n  })\n\n  val clockB_child = withClockAndReset (io.clockB, io.ResetB) { Module(new ChildModule) }\n  clockB_child.io.in := io.stuff\n}\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u53ea\u200b\u5e0c\u671b\u200b\u5c06\u200b\u4f60\u200b\u7684\u200b\u65f6\u949f\u200b\u8fde\u63a5\u200b\u5230\u200b\u65b0\u200b\u7684\u200b\u65f6\u949f\u200b\u57df\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5e38\u7528\u200b\u7684\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>withClock(clock)</code> \u200b\u66ff\u6362\u200b <code>withClockAndReset</code>\u3002</p> <pre><code>import chisel3._\n\nclass MultiClockModule extends Module {\n  val io = IO(new Bundle {\n    val clockB = Input(Clock())\n    val stuff = Input(Bool())\n  })\n\n  // \u200b\u8be5\u200b\u5bc4\u5b58\u5668\u200b\u65f6\u949f\u200b\u4f7f\u7528\u200b\u6a21\u5757\u200b\u65f6\u949f\u200b\n  val regClock = RegNext(io.stuff)\n\n  withClock (io.clockB) {\n    // \u200b\u5728\u200b\u8fd9\u4e2a\u200b withClock \u200b\u4e2d\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b\u540c\u6b65\u200b\u5143\u7d20\u200b\u90fd\u200b\u4f9d\u9760\u200b io.clockB \u200b\u4f5c\u4e3a\u200b\u65f6\u949f\u200b\u3002\n\n    // \u200b\u8be5\u200b\u5bc4\u5b58\u5668\u200b\u4f7f\u7528\u200b io.ClockB \u200b\u4f5c\u4e3a\u200b\u65f6\u949f\u200b\n    val regClockB = RegNext(io.stuff)\n  }\n\n  // \u200b\u8be5\u200b\u5bc4\u5b58\u5668\u200b\u4e5f\u200b\u4f7f\u7528\u200b\u6a21\u5757\u200b\u65f6\u949f\u200b\u4f5c\u4e3a\u200b\u65f6\u949f\u200b\n  val regClock2 = RegNext(io.stuff)\n}\n\n  // \u200b\u4f7f\u7528\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u5176\u4ed6\u200b\u65f6\u949f\u200b\u57df\u200b\u7684\u200b\u6a21\u5757\u200b\nclass MultiClockModule2 extends Module {\n  val io = IO(new Bundle {\n    val clockB = Input(Clock())\n    val stuff = Input(Bool())\n  })\n\n  val clockB_chikd = withClock (io.clockB) { Module(new ChildModule) }\n  clockB_child.io.in := io.stuff\n}\n\nclass ChildModule extends Module {\n  val io = IO(new Bundle{\n    val in = Input(Bool())\n  })\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#reset","title":"\u590d\u4f4d\u200b\uff08Reset\uff09","text":"<p>\u200b\u4ece\u200b chisel 3.2.0 \u200b\u5f00\u59cb\u200b\uff0cChisel 3 \u200b\u652f\u6301\u200b\u540c\u6b65\u200b\u548c\u200b\u5f02\u6b65\u200b\u590d\u4f4d\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u539f\u751f\u200b\u652f\u6301\u200b\u540c\u6b65\u200b\u590d\u4f4d\u200b\u5bc4\u5b58\u5668\u200b\u548c\u200b\u5f02\u6b65\u200b\u590d\u4f4d\u200b\u5bc4\u5b58\u5668\u200b\u3002</p> <p>\u200b\u5bc4\u5b58\u5668\u200b\u7684\u200b\u7c7b\u578b\u200b\u57fa\u4e8e\u200b\u5173\u8054\u200b\u81f3\u200b\u5176\u200b\u7684\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u6709\u200b\u4e09\u79cd\u200b\u7c7b\u578b\u200b\u7684\u200b\u590d\u4f4d\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u516c\u5171\u200b\u7279\u5f81\u200b <code>Reset</code>\uff1a</p> <ul> <li><code>Bool</code> \u2014\u2014 \u200b\u7528\u200b <code>Bool()</code> \u200b\u6784\u9020\u200b\uff0c\u200b\u4e5f\u200b\u79f0\u200b\u201c\u200b\u540c\u6b65\u200b\u590d\u4f4d\u200b\u201d\u3002</li> <li><code>AsyncReset</code> \u2014\u2014 \u200b\u7528\u200b <code>AsyncReset()</code> \u200b\u6784\u9020\u200b\uff0c\u200b\u4e5f\u200b\u79f0\u200b\u201c\u200b\u5f02\u6b65\u200b\u590d\u4f4d\u200b\u201d\u3002</li> <li><code>Reset</code> \u2014\u2014 \u200b\u7528\u200b <code>Reset()</code> \u200b\u6784\u9020\u200b\uff0c\u200b\u4e5f\u200b\u79f0\u4e3a\u200b\u201c\u200b\u62bd\u8c61\u200b\u590d\u4f4d\u200b\u201d\u3002</li> </ul> <p>\u200b\u51fa\u4e8e\u200b\u5b9e\u73b0\u200b\u539f\u56e0\u200b\uff0c\u200b\u5177\u4f53\u200b\u7684\u200b Scala \u200b\u7c7b\u578b\u200b\u662f\u200b <code>ResetType</code>\u3002\u200b\u4ece\u200b\u98ce\u683c\u200b\u4e0a\u200b\u8bb2\u200b\uff0c\u200b\u6211\u4eec\u200b\u907f\u514d\u200b\u4f7f\u7528\u200b <code>ResetType</code>\uff0c\u200b\u800c\u662f\u200b\u4f7f\u7528\u200b\u516c\u5171\u200b\u7279\u5f81\u200b <code>Reset</code>\u3002</p> <p>\u200b\u4f7f\u7528\u200b <code>Bool()</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u4f1a\u200b\u4f5c\u4e3a\u200b\u540c\u6b65\u200b\u590d\u4f4d\u200b\u89e6\u53d1\u5668\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>AsyncReset</code> \u200b\u7c7b\u578b\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u4f5c\u4e3a\u200b\u5f02\u6b65\u200b\u590d\u4f4d\u200b\u5bc4\u5b58\u5668\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>Reset</code> \u200b\u7c7b\u578b\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u5c06\u200b\u5728\u200b FIRRTL \u200b\u7f16\u8bd1\u200b\u671f\u95f4\u200b*\u200b\u63a8\u65ad\u200b*\u200b\u5b83\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_11","title":"\u590d\u4f4d\u200b\u63a8\u65ad","text":"<p>FIRRTL \u200b\u5c06\u200b\u4e3a\u200b\u6709\u200b\u62bd\u8c61\u200b <code>Reset</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u4fe1\u53f7\u200b\u63a8\u65ad\u200b\u4e00\u4e2a\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\uff0c\u200b\u89c4\u5219\u200b\u5982\u4e0b\u200b\uff1a</p> <ol> <li>\u200b\u5728\u200b\u5176\u200b\u6247\u5165\u200b\u6247\u51fa\u200b\u4e2d\u200b\u53ea\u6709\u200b <code>AsyncReset</code> \u200b\u7c7b\u578b\u200b\uff0c\u200b\u62bd\u8c61\u200b <code>Reset</code> \u200b\u7c7b\u578b\u200b\u548c\u200b <code>Dontcare</code> \u200b\u7c7b\u578b\u200b\uff0c\u200b\u63a8\u65ad\u200b\u4e3a\u200b <code>AsyncReset</code>\u3002</li> <li>\u200b\u5728\u200b\u5176\u200b\u6247\u5165\u200b\u6247\u51fa\u200b\u4e2d\u200b\u6709\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u548c\u200b <code>AsyncReset</code> \u200b\u7c7b\u578b\u200b\u662f\u200b\u9519\u8bef\u200b\u7684\u200b\u3002</li> <li>\u200b\u5176\u4ed6\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5c06\u200b\u88ab\u200b\u63a8\u65ad\u200b\u4e3a\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u3002</li> </ol> <p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u7b2c\u200b 3 \u200b\u6761\u200b\u89c6\u4e3a\u200b\u7b2c\u200b 1 \u200b\u6761\u7528\u200b <code>Bool</code> \u200b\u66ff\u6362\u200b <code>AsyncReset</code> \u200b\u7684\u200b\u7248\u672c\u200b\uff0c\u200b\u5e76\u200b\u9644\u52a0\u200b\u4e00\u6761\u200b\uff0c\u200b\u5373\u200b\u6247\u5165\u200b\u6247\u51fa\u200b\u4e2d\u200b\u65e2\u200b\u6ca1\u6709\u200b <code>AsyncReset</code> \u200b\u4e5f\u200b\u6ca1\u6709\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u62bd\u8c61\u200b\u590d\u4f4d\u200b\u5c06\u200b\u88ab\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u3002\u200b\u8fd9\u79cd\u200b\u201c\u200b\u9ed8\u8ba4\u200b\u201d\u200b\u60c5\u51b5\u200b\u5e76\u200b\u4e0d\u200b\u5e38\u89c1\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u610f\u5473\u7740\u200b\u590d\u4f4d\u200b\u4fe1\u53f7\u200b\u7531\u200b <code>Dontcare</code> \u200b\u9a71\u52a8\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_12","title":"\u9690\u5f0f\u200b\u590d\u4f4d","text":"<p>\u200b\u4e00\u4e2a\u200b <code>Module</code> \u200b\u7684\u200b <code>reset</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u62bd\u8c61\u200b <code>Reset</code>\u3002\u200b\u4e3a\u4e86\u200b\u5411\u200b\u540e\u200b\u517c\u5bb9\u200b\uff0c\u200b\u5982\u679c\u200b\u9876\u5c42\u200b\u6a21\u5757\u200b\u6709\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\uff0c\u200b\u5c06\u200b\u9ed8\u8ba4\u200b\u4e3a\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_13","title":"\u8bbe\u7f6e\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u7c7b\u578b","text":"<p>Chisel 3.3.0 \u200b\u7684\u200b\u65b0\u200b\u7279\u6027\u200b</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u5728\u200b\u6a21\u5757\u200b\uff08\u200b\u5305\u62ec\u200b\u9876\u7ea7\u200b\u6a21\u5757\u200b\uff09\u200b\u5185\u200b\u8bbe\u7f6e\u200b\u91cd\u7f6e\u200b\u7c7b\u578b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u4f9d\u8d56\u200b\u91cd\u7f6e\u200b\u63a8\u7406\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u52a0\u5165\u200b\u4ee5\u4e0b\u200b\u7279\u5f81\u200b\u4e4b\u4e00\u200b\uff1a</p> <ul> <li><code>RequireSyncReset</code> \u2014\u2014 \u200b\u5c06\u200b <code>reset</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>Bool</code></li> <li><code>RequireAsyncReset</code> \u2014\u2014 \u200b\u5c06\u200b <code>reset</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>AsyncReset</code></li> </ul> <p>\u200b\u6bd4\u5982\u200b\uff1a</p> <pre><code>class MyAlwaysSyncResetModule extends Module with RequireSyncReset {\n  val mySyncResetReg = RegInit(false.B) // \u200b\u590d\u4f4d\u200b\u662f\u200b Bool \u200b\u7c7b\u578b\u200b\u7684\u200b\n}\nclass MyAlwaysAsyncResetModule extends Module with RequireAsyncReset {\n  val myAsyncResetReg = RegInit(false.B) // \u200b\u590d\u4f4d\u200b\u662f\u200b AsyncReset \u200b\u7c7b\u578b\u200b\u7684\u200b\n}\n</code></pre> <p>**\u200b\u6ce8\u610f\u200b\uff1a**\u200b\u8fd9\u4f1a\u200b\u8bbe\u7f6e\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b Scala \u200b\u7c7b\u578b\u200b\u5c06\u200b\u4fdd\u6301\u200b <code>Reset</code>\uff0c\u200b\u56e0\u6b64\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4ecd\u7136\u200b\u662f\u200b\u6709\u200b\u5fc5\u8981\u200b\u7684\u200b\u3002\u200b\u8fd9\u4e00\u200b\u95ee\u9898\u200b\u901a\u5e38\u200b\u51fa\u73b0\u200b\u4e8e\u200b\u5728\u200b\u903b\u8f91\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>Bool</code> \u200b\u7c7b\u578b\u200b\u590d\u4f4d\u200b\u7684\u200b\u65f6\u5019\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#reset-agnostic-code","title":"\u4e0e\u200b\u590d\u4f4d\u200b\u65e0\u5173\u200b\u7684\u200b\u4ee3\u7801\u200b\uff08Reset-Agnostic Code\uff09","text":"<p>\u200b\u62bd\u8c61\u200b\u590d\u4f4d\u200b\u7684\u200b\u76ee\u7684\u200b\u662f\u200b\u4f7f\u200b\u8bbe\u8ba1\u200b\u4e0e\u200b\u6240\u200b\u4f7f\u7528\u200b\u7684\u200b\u590d\u4f4d\u200b\u89c4\u5219\u200b\u65e0\u5173\u200b\u7684\u200b\u786c\u4ef6\u200b\u6210\u4e3a\u200b\u53ef\u80fd\u200b\u3002\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u91cd\u7f6e\u200b\u89c4\u5219\u200b\u4e0e\u200b\u6a21\u5757\u200b\u7684\u200b\u529f\u80fd\u200b\u65e0\u5173\u200b\u7684\u200b\u5b9e\u7528\u7a0b\u5e8f\u200b\u548c\u200b\u8bbe\u8ba1\u200b\u53ef\u4ee5\u200b\u91cd\u7528\u200b\u4ee3\u7801\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u4e0b\u9762\u200b\u7684\u200b\u4e24\u4e2a\u200b\u793a\u4f8b\u200b\u6a21\u5757\u200b\uff0c\u200b\u5b83\u4eec\u200b\u4e0e\u200b\u5176\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u91cd\u7f6e\u200b\u7c7b\u578b\u200b\u65e0\u5173\u200b\uff1a</p> <pre><code>class ResetAgnosticModule extends Module {\n  val io = IO(new Bundle {\n    val out = UInt(4.W)\n  })\n  val resetAgnosticReg = RegInit(0.U(4.W))\n  resetAgnosticReg := resetAgnosticReg + 1.U\n  io.out := resetAgnosticReg\n}\n\nclass ResetAgnosticRawModule extends RawModule {\n  val clk = IO(Input(Clock()))\n  val rst = IO(Input(Reset()))\n  val out = IO(Output(UInt(8.W)))\n\n  val resetAgnosticReg = withClockAndReset(clk, rst)(RegInit(0.U(8.W)))\n  resetAgnosticReg := resetAgnosticReg + 1.U\n  out := resetAgnosticReg\n}\n</code></pre> <p>\u200b\u8fd9\u4e9b\u200b\u6a21\u5757\u200b\u53ef\u200b\u7528\u4e8e\u200b\u540c\u6b65\u200b\u548c\u200b\u5f02\u6b65\u200b\u590d\u4f4d\u200b\u57df\u200b\u3002\u200b\u5b83\u4eec\u200b\u7684\u200b\u91cd\u7f6e\u200b\u7c7b\u578b\u200b\u5c06\u200b\u6839\u636e\u200b\u4f7f\u7528\u200b\u5b83\u4eec\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u6765\u200b\u63a8\u65ad\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#forcing-reset-type","title":"\u5f3a\u5236\u200b\u590d\u4f4d\u200b\u7c7b\u578b\u200b\uff08Forcing Reset Type\uff09","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5982\u4e0a\u6240\u8ff0\u200b\u8bbe\u7f6e\u200b\u6a21\u5757\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5f3a\u5236\u6267\u884c\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\u7684\u200b\u590d\u4f4d\u200b\u3002</p> <ul> <li><code>.asBool</code> \u200b\u4f1a\u200b\u5c06\u200b <code>Reset</code> \u200b\u91cd\u65b0\u200b\u89e3\u91ca\u200b\u4e3a\u200b <code>Bool</code></li> <li><code>.asAsyncReset</code> \u200b\u5c06\u200b\u91cd\u7f6e\u200b\u91cd\u65b0\u200b\u89e3\u91ca\u200b\u4e3a\u200b <code>AsyncReset</code>\u3002</li> </ul> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>withReset</code> \u200b\u5c06\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\u590d\u4f4d\u200b\u7528\u4f5c\u200b\u9690\u5f0f\u200b\u91cd\u7f6e\u200b\u3002\u200b\u6709\u5173\u200b <code>withReset</code> \u200b\u7684\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b\u591a\u200b\u65f6\u949f\u200b\u57df\u200b\u3002</p> <p>\u200b\u4ee5\u4e0b\u200b\u5c06\u200b\u4f7f\u200b <code>myReg</code> \u200b\u4ee5\u53ca\u200b\u4e24\u4e2a\u200b <code>ResetAgnosticRegs</code> \u200b\u540c\u6b65\u200b\u590d\u4f4d\u200b\uff1a</p> <pre><code>class ForcedSyncReset extends Module {\n  // withReset \u200b\u7684\u200b \u200b\u53c2\u6570\u200b\u4f5c\u4e3a\u200b\u8fd9\u4e2a\u200b\u4f5c\u7528\u57df\u200b\u4e2d\u200b\u7684\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u53c2\u6570\u200b\n  withReset (reset.asBool) {\n    val myReg = RegInit(0.U)\n    val myModule = Module(new ResetAgnosticModule)\n\n    // RawModules \u200b\u6ca1\u6709\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u6240\u4ee5\u200b withReset \u200b\u6ca1\u6709\u200b\u5f71\u54cd\u200b\n    val myRawModule = Module(new ResetAgnosticRawModule)\n    // \u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u624b\u52a8\u200b\u9a71\u52a8\u200b\u590d\u4f4d\u200b\u7aef\u53e3\u200b\n    myRawModule.rst := Module.reset // Module.reset \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u7684\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\n  }\n}\n</code></pre> <p>\u200b\u4ee5\u4e0b\u200b\u5c06\u200b\u4f7f\u200b <code>myReg</code> \u200b\u4ee5\u53ca\u200b <code>ResetAgnosticRegs</code> \u200b\u5f02\u6b65\u200b\u91cd\u7f6e\u200b\uff1a</p> <pre><code>class ForcedAysncReset extends Module {\n  // withReset \u200b\u7684\u200b \u200b\u53c2\u6570\u200b\u4f5c\u4e3a\u200b\u8fd9\u4e2a\u200b\u4f5c\u7528\u57df\u200b\u4e2d\u200b\u7684\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u53c2\u6570\u200b\n  withReset (reset.asAsyncReset){\n    val myReg = RegInit(0.U)\n    val myModule = Module(new ResetAgnosticModule) // myModule.reset \u200b\u88ab\u200b\u9690\u5f0f\u200b\u8fde\u63a5\u200b\u4e86\u200b\n\n    // RawModules \u200b\u6ca1\u6709\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\u6240\u4ee5\u200b withReset \u200b\u6ca1\u6709\u200b\u5f71\u54cd\u200b\n    val myRawModule = Module(new ResetAgnosticRawModule)\n    // \u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u624b\u52a8\u200b\u9a71\u52a8\u200b\u590d\u4f4d\u200b\u7aef\u53e3\u200b\n    myRawModule.rst := Module.reset // Module.reset \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u7684\u200b\u9690\u5f0f\u200b\u590d\u4f4d\u200b\n  }\n}\n</code></pre> <p>**\u200b\u6ce8\u610f\u200b\uff1a**FIRRTL \u200b\u4e0d\u4f1a\u200b\u68c0\u67e5\u200b\u6b64\u7c7b\u200b\u8f6c\u6362\u200b\uff08<code>asBool</code> \u200b\u548c\u200b <code>asAsyncReset</code>\uff09\u3002\u200b\u5728\u200b\u8fdb\u884c\u200b\u8fd9\u6837\u200b\u7684\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\u65f6\u200b\uff0c\u200b\u4f5c\u4e3a\u200b\u8bbe\u8ba1\u8005\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u5728\u200b\u544a\u8bc9\u200b\u7f16\u8bd1\u5668\u200b\u4f60\u200b\u77e5\u9053\u200b\u81ea\u5df1\u200b\u5728\u200b\u505a\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u5e76\u200b\u5f3a\u5236\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#last-connect-semantics","title":"\u6700\u540e\u200b\u8fde\u63a5\u200b\u8bed\u4e49\u200b\uff08Last-Connect Semantics\uff09","text":"<p>\u200b\u4f7f\u7528\u200b\u6700\u540e\u200b\u8fde\u63a5\u200b\u8bed\u4e49\u200b\u8986\u76d6\u200b\u91cd\u7f6e\u200b\u7c7b\u578b\u200b\u662f\u200b\u4e0d\u200b\u5408\u6cd5\u200b\u7684\u200b\uff0c\u200b\u9664\u975e\u200b\u60a8\u200b\u8981\u200b\u8986\u76d6\u200b <code>DontCare</code>\uff1a</p> <pre><code>class MyModule extends Module {\n  val resetBool = Wire(Reset())\n  resetBool := DontCare\n  resetBool := false.B // \u200b\u8fd9\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\n  withReset(resetBool) {\n    val mySubmodule = Module(new Submodule())\n  }\n  resetBool := true.B // \u200b\u8fd9\u662f\u200b\u6b63\u786e\u200b\u7684\u200b\n  resetBool := false.B.asAsyncReset // \u200b\u5728\u200b FIRRTL \u200b\u4e2d\u200b\u8fd9\u200b\u662f\u200b\u9519\u8bef\u200b\u7684\u200b\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#polymorphism-and-parameterization","title":"\u591a\u6001\u200b\u4e0e\u200b\u53c2\u6570\u200b\u5316\u200b\uff08Polymorphism and Parameterization\uff09","text":"<p>\u200b\u8fd9\u200b\u4e00\u8282\u200b\u662f\u200b\u8fdb\u9636\u200b\u90e8\u5206\u200b\uff0c\u200b\u7b2c\u4e00\u6b21\u200b\u9605\u8bfb\u200b\u53ef\u4ee5\u200b\u63a0\u8fc7\u200b\u3002</p> <p>Scala \u200b\u662f\u200b\u4e00\u79cd\u200b\u5f3a\u200b\u7c7b\u578b\u200b\u8bed\u8a00\u200b\uff0c\u200b\u4f7f\u7528\u200b\u53c2\u6570\u200b\u5316\u200b\u7c7b\u578b\u200b\u6765\u200b\u6307\u5b9a\u200b\u51fd\u6570\u200b\u548c\u200b\u7c7b\u200b\u3002\u200b\u5728\u200b\u672c\u8282\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5c55\u793a\u200b Chisel \u200b\u7528\u6237\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u53c2\u6570\u200b\u5316\u7c7b\u200b\u5b9a\u4e49\u200b\u81ea\u5df1\u200b\u7684\u200b\u53ef\u200b\u91cd\u7528\u200b\u51fd\u6570\u200b\u548c\u200b\u7c7b\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_14","title":"\u53c2\u6570\u200b\u5316\u200b\u51fd\u6570","text":"<p>\u200b\u4e4b\u524d\u200b\u6211\u4eec\u200b\u5728\u200b <code>Bool</code> \u200b\u4e0a\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>Mux2</code>\uff0c\u200b\u4f46\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u5c55\u793a\u200b\u5982\u4f55\u200b\u5b9a\u4e49\u200b\u901a\u7528\u200b\u591a\u8def\u590d\u7528\u200b\u5668\u200b\u51fd\u6570\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u6b64\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u91c7\u7528\u200b\u5e03\u5c14\u200b\u6761\u4ef6\u200b\u4ee5\u53ca\u200b <code>T</code> \u200b\u7c7b\u578b\u200b\u7684\u200b con \u200b\u548c\u200b alt \u200b\u53c2\u6570\u200b\uff08\u200b\u5bf9\u5e94\u200b\u4e8e\u200b then \u200b\u548c\u200b else \u200b\u8868\u8fbe\u5f0f\u200b\uff09\uff1a</p> <pre><code>def Mux[T &lt;: Bits](c: Bool, con: T, alt: T): T = (...)\n</code></pre> <p>\u200b\u5176\u4e2d\u200b <code>T</code> \u200b\u5fc5\u987b\u200b\u662f\u200b <code>Bits</code> \u200b\u7684\u200b\u5b50\u7c7b\u200b\u3002 Scala \u200b\u786e\u4fdd\u200b\u5728\u200b <code>Mux</code> \u200b\u7684\u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b\u4e2d\u200b\uff0c\u200b\u5b83\u200b\u90fd\u200b\u80fd\u200b\u627e\u5230\u200b\u5b9e\u9645\u200b con \u200b\u548c\u200b alt \u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u516c\u5171\u200b\u8d85\u7c7b\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u5bfc\u81f4\u200b Scala \u200b\u7f16\u8bd1\u200b\u7c7b\u578b\u200b\u9519\u8bef\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c</p> <pre><code>Mux(c, UInt(10), UInt(11))\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u4ea7\u751f\u200b\u4e00\u4e2a\u200b <code>UInt</code> \u200b\u7ebf\u200b\uff0c\u200b\u56e0\u4e3a\u200b con \u200b\u548c\u200b alt \u200b\u53c2\u6570\u200b\u90fd\u200b\u662f\u200b <code>UInt</code> \u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_15","title":"\u53c2\u6570\u200b\u5316\u7c7b","text":"<p>\u200b\u4e0e\u200b\u53c2\u6570\u200b\u5316\u200b\u51fd\u6570\u200b\u4e00\u6837\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u53c2\u6570\u200b\u5316\u7c7b\u200b\u4ee5\u200b\u4f7f\u200b\u5176\u200b\u66f4\u5177\u200b\u53ef\u200b\u91cd\u7528\u200b\u6027\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6982\u62ec\u200b Filter \u200b\u7c7b\u4ee5\u200b\u4f7f\u7528\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u7684\u200b\u94fe\u63a5\u200b\u3002\u200b\u6211\u4eec\u200b\u901a\u8fc7\u200b\u53c2\u6570\u200b\u5316\u200b <code>FilterIO</code> \u200b\u7c7b\u200b\u5e76\u200b\u5b9a\u4e49\u200b\u6784\u9020\u51fd\u6570\u200b\u4ee5\u200b\u91c7\u7528\u200b <code>T</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u5355\u4e2a\u200b\u53c2\u6570\u200b <code>gen</code> \u200b\u6765\u200b\u5b9e\u73b0\u200b\u6b64\u200b\u76ee\u7684\u200b\uff0c\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\u3002</p> <pre><code>class FilterIO[T &lt;: Data](gen: T) extends Bundle {\n  val x = Input(gen)\n  val y = Output(gen)\n}\n</code></pre> <p>\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u7c7b\u6765\u200b\u5b9a\u4e49\u200b <code>Filter</code>\uff0c\u200b\u8be5\u200b\u6a21\u5757\u200b\u7c7b\u200b\u4e5f\u200b\u91c7\u7528\u200b\u94fe\u63a5\u200b\u7c7b\u578b\u200b\u6784\u9020\u200b\u51fd\u6570\u53c2\u6570\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>FilterIO</code> \u200b\u63a5\u53e3\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a</p> <pre><code>class Filter[T &lt;: Data](gen: T) extends Module {\n  val io = IO(new FilterIO(gen))\n  // ...\n}\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u5982\u4e0b\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u57fa\u4e8e\u200b <code>PLink</code> \u200b\u7684\u200b <code>Filter</code>\uff1a</p> <pre><code>val f = Module(new Filter(new PLink))\n</code></pre> <p>\u200b\u4e00\u4e2a\u200b\u901a\u7528\u200b FIFO \u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\uff1a</p> <pre><code>import chisel3.util.log2Up\n\nclass DataBundle extends Bundle {\n  val a = UInt(32.W)\n  val b = UInt(32.W)\n}\n\nclass Fifo[T &lt;: Data](gen: T, n: Int) extends Module {\n  val io = IO(new Bundle {\n    val enqVal = Input(Bool())\n    val enqRdy = Output(Bool())\n    val deqVal = Output(Bool())\n    val deqRdy = Input(Bool())\n    val enqDat = Input(gen)\n    val deqDat = Output(gen)\n  })\n  val enqPtr     = RegInit(0.U((log2Up(n)).W))\n  val deqPtr     = RegInit(0.U((log2Up(n)).W))\n  val isFull     = RegInit(false.B)\n  val doEnq      = io.enqRdy &amp;&amp; io.enqVal\n  val doDeq      = io.deqRdy &amp;&amp; io.deqVal\n  val isEmpty    = !isFull &amp;&amp; (endPtr === deqPtr)\n  val deqPtrInc  = deqPtr + 1.U\n  val enqPtrInc  = enqPtr + 1.U\n  val isFullNext = Mux(doEnq &amp;&amp; ~doDeq &amp;&amp; (enqPtrInc === deqPtr)),\n                         true.B, Mux(doDeq &amp;&amp; isFull, false.B,\n                         isFull)\n  enqPtr := Mux(doEnq, enqPtrInc, enqPtr)\n  deqPtr := Mux(doDeq, deqPtrInc, deqPtr)\n  isFUll := isFullNext\n  val ram = Men(n, gen)\n  when (doEnq) {\n    ram(enqPtr) := io.enqDat\n  }\n  io.enqRdy := !isFull\n  io.deqVal := !isEmpty\n  ram(deqPtr) &lt;&gt; io.deqDat\n}\n</code></pre> <p>\u200b\u5177\u6709\u200b 8 \u200b\u4e2a\u200b <code>DataBundle</code> \u200b\u7c7b\u578b\u200b\u5143\u7d20\u200b\u7684\u200b <code>Fifo</code> \u200b\u53ef\u4ee5\u200b\u5b9e\u4f8b\u200b\u5316\u4e3a\u200b\uff1a</p> <pre><code>val fifo = Module(new Fifo(new DataBundle, 8))\n</code></pre> <p>\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u901a\u7528\u200b\u7684\u200b\u53bb\u200b\u8026\u5408\u200b\u63a5\u53e3\u200b\uff08ready/valid\uff09\uff1a</p> <pre><code>class DecoupledIO[T &lt;: Data](data: T) extends Bundle {\n  val ready = Input(Bool())\n  val valid = Output(Bool())\n  val bits = Output(data)\n}\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u8be5\u200b\u6a21\u677f\u200b\u53ef\u200b\u7528\u4e8e\u200b\u5c06\u200b\u63e1\u624b\u200b\u534f\u8bae\u200b\u6dfb\u52a0\u200b\u5230\u200b\u4efb\u4f55\u200b\u4fe1\u53f7\u200b\u96c6\u200b\uff1a</p> <pre><code>class DecoupledDemo extends DecoupledIO(new DataBundle)\n</code></pre> <p>FIFO \u200b\u63a5\u53e3\u200b\u53ef\u4ee5\u200b\u7b80\u5316\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>class Fifo[T &lt;: Data](data: T, n: Int) extends Module {\n  val io = IO(new Bundle {\n    val enq = Flipped(new DecoupledIO(data))\n    val deq = new Decoupled(data)\n  })\n  // ...\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_16","title":"\u57fa\u4e8e\u200b\u6a21\u5757\u200b\u7684\u200b\u53c2\u6570\u200b\u5316","text":"<p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u6a21\u5757\u200b\u800c\u200b\u4e0d\u200b\u53ea\u662f\u200b\u7c7b\u578b\u200b\u6765\u200b\u53c2\u6570\u200b\u5316\u200b\u6a21\u5757\u200b\u3002\u200b\u4e0b\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u662f\u200b\u4f7f\u7528\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u6765\u200b\u53c2\u6570\u200b\u5316\u200b\u6a21\u5757\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>import chisel3.RawModule\nimport chisel3.experimental.BaseModule\nimport circt.stage.ChiselStage\n\n// \u200b\u7531\u200b\u901a\u7528\u200b\u6a21\u5757\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u4e13\u7528\u200b\u7684\u200b\u63a5\u53e3\u200b\n// \u200b\u6ca1\u6709\u200b\u63d0\u4f9b\u200b\u6709\u5173\u200b\u901a\u7528\u200b\u6a21\u5757\u200bIO\u200b\u7684\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u4fe1\u606f\u200b\u3002\ntrait MyAdder {\n  def in1: UInt\n  def in2: UInt\n  def out: UInt\n}\n\nclass Mod1 extends RawModule with MyAdder {\n  val in1 = IO(Input(UInt(8.W)))\n  val in2 = IO(Input(UInt(8.W)))\n  val out = IO(Output(UInt(8.W)))\n  out := in1 + in2\n}\n\nclass Mod2 extends RawModule with Myadder {\n  val in1 = IO(Input(UInt(8.W)))\n  val in2 = IO(Input(UInt(8.W)))\n  val out = IO(Output(UInt(8.W)))\n  out := in1 - in2\n}\n\nclass X[T &lt;: BaseModule with MyAdder](genT: =&gt; T) extends Module {\n  val io = IO(new Bundle {\n    val in1 = Input(UInt(8.W))\n    val in2 = Input(UInt(8.W))\n    val out = Output(UInt(8.W))\n  })\n\n  val subModule = Module(genT)\n  io.out := subModule.out\n  subMod.in1 := io.in1\n  subMod.in2 := io.in2\n}\n\nprintln(ChiselStage.emitSystemVerilog(new X(new Mod1)))\nprintln(ChiselStage.emitSystemVerilog(new X(new Mod2)))\n// Generated by CIRCT firtool-1.44.0\nmodule Mod1(    // &lt;stdin&gt;:3:10\n  input  [7:0] in1, // polymorphism-and-parameterization.md:171:17\n               in2, // polymorphism-and-parameterization.md:172:17\n  output [7:0] out  // polymorphism-and-parameterization.md:173:17\n);\n\n  assign out = in1 + in2;   // &lt;stdin&gt;:3:10, polymorphism-and-parameterization.md:174:16\nendmodule\n\nmodule X(   // &lt;stdin&gt;:12:10\n  input        clock,   // &lt;stdin&gt;:13:11\n               reset,   // &lt;stdin&gt;:14:11\n  input  [7:0] io_in1,  // polymorphism-and-parameterization.md:187:16\n               io_in2,  // polymorphism-and-parameterization.md:187:16\n  output [7:0] io_out   // polymorphism-and-parameterization.md:187:16\n);\n\n  Mod1 subMod ( // polymorphism-and-parameterization.md:192:24\n    .in1 (io_in1),\n    .in2 (io_in2),\n    .out (io_out)\n  );\nendmodule\n\n// Generated by CIRCT firtool-1.44.0\nmodule Mod2(    // &lt;stdin&gt;:3:10\n  input  [7:0] in1, // polymorphism-and-parameterization.md:179:17\n               in2, // polymorphism-and-parameterization.md:180:17\n  output [7:0] out  // polymorphism-and-parameterization.md:181:17\n);\n\n  assign out = in1 - in2;   // &lt;stdin&gt;:3:10, polymorphism-and-parameterization.md:182:16\nendmodule\n\nmodule X(   // &lt;stdin&gt;:12:10\n  input        clock,   // &lt;stdin&gt;:13:11\n               reset,   // &lt;stdin&gt;:14:11\n  input  [7:0] io_in1,  // polymorphism-and-parameterization.md:187:16\n               io_in2,  // polymorphism-and-parameterization.md:187:16\n  output [7:0] io_out   // polymorphism-and-parameterization.md:187:16\n);\n\n  Mod2 subMod ( // polymorphism-and-parameterization.md:192:24\n    .in1 (io_in1),\n    .in2 (io_in2),\n    .out (io_out)\n  );\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel-printing-in-chisel","title":"\u5728\u200b Chisel \u200b\u4e2d\u200b\u6253\u5370\u200b\uff08Printing in Chisel\uff09","text":"<p>Chisel \u200b\u4e3a\u4e86\u200b\u8c03\u8bd5\u200b\u9700\u6c42\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>print_f</code>\u3002\u200b\u5b83\u200b\u6709\u200b\u4e24\u79cd\u200b\u6837\u5f0f\u200b\uff1a</p> <ul> <li>Scala \u200b\u98ce\u683c\u200b</li> <li>C \u200b\u98ce\u683c\u200b</li> </ul>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#scala","title":"Scala \u200b\u98ce\u683c","text":"<p>Chisel \u200b\u652f\u6301\u200b printf\uff0c\u200b\u5176\u200b\u98ce\u683c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b Scala \u200b\u7684\u200b String Interpolation\u3002Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u5b57\u7b26\u4e32\u200b\u63d2\u503c\u200b\u5668\u200b cf\uff0c\u200b\u5b83\u200b\u9075\u5faa\u200b C \u200b\u6837\u5f0f\u200b\u683c\u5f0f\u200b\u8bf4\u660e\u7b26\u200b\uff08\u200b\u8bf7\u53c2\u9605\u200b\u4e0b\u9762\u200b\u7684\u200b C \u200b\u98ce\u683c\u200b\u4e00\u8282\u200b\uff09\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5728\u200b Chisel \u200b\u6784\u9020\u200b\u4e2d\u200b\u4e0d\u200b\u652f\u6301\u200b Scalas-interpolator\uff0c\u200b\u5b83\u4f1a\u200b\u629b\u51fa\u200b\u4e00\u4e2a\u200b\u9519\u8bef\u200b\uff1a</p> <pre><code>class MyModule extends Module {\n  val io = IO(Input(UInt(8.W)))\n  printf(s\"in - $in\\n\")\n}\n// error: The s-interpolator prints the Scala .toString of Data objects rather than the value of the hardware wire during simulation. Use the cf-interpolator instead. If you want an elaboration time print, use println.\n//   printf(s\"in = $in\\n\")\n//   ^^^^^^^^^^^^^^^^^^^^^\n</code></pre> <p>\u200b\u7528\u200b Chisel \u200b\u4e2d\u200b\u7684\u200b cf interpolator \u200b\u66ff\u6362\u200b\u5b83\u200b\uff1a</p> <pre><code>val myUInt = 33.U\nprintf(cf\"myUInt = $myUInt\") // myUInt = 33\n</code></pre> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8fde\u63a5\u200b cf\u201d\u2026\u201d \u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u4ee5\u200b cf\u201d\u2026\u201d \u200b\u5b57\u7b26\u4e32\u200b\u5f00\u5934\u200b\uff1a</p> <pre><code>// \u200b\u4e0d\u80fd\u200b\u63d2\u5165\u200b\u7b2c\u4e8c\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\nval myUInt = 33.U\nprintf(\"my normal string\" + cf\"myUInt = $myUInt\")\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_17","title":"\u7b80\u5355\u200b\u7684\u200b\u683c\u5f0f\u5316","text":"<p>\u200b\u5176\u4ed6\u200b\u683c\u5f0f\u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a</p> <pre><code>val myUInt = 33.U\n// \u200b\u5341\u516d\u8fdb\u5236\u200b\nprintf(cf\"myUInt = 0x$myUInt%x\") // myUInt = 0x21\nprint(cf\"myUInt = $myUInt%b\") // myUInt = 100001\n// \u200b\u5b57\u7b26\u200b\nprint(cf\"myUInt = $myUInt%c\") // myUInt = !\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_18","title":"\u805a\u5408\u200b\u6570\u636e\u7c7b\u578b","text":"<p>Chisel \u200b\u4e3a\u200b Vec \u200b\u548c\u200b Bundle \u200b\u7c7b\u578b\u200b\u63d0\u4f9b\u200b\u9ed8\u8ba4\u200b\u7684\u200b \u201cpretty-printing\u201d\u3002Vec \u200b\u7684\u200b\u9ed8\u8ba4\u200b\u6253\u5370\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5728\u200b Scala \u200b\u4e2d\u200b\u6253\u5370\u200b Seq \u200b\u6216\u200b List\uff0c\u200b\u800c\u200b\u6253\u5370\u200b Bundle \u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u6253\u5370\u200b Scala Map\u3002</p> <pre><code>val myVec = VecInit(5.U, 10.U, 13.U)\nprintf(cf\"myVec = $myVec\") // myVec = Vec(5, 10, 13) // myVec = Vec(5, 10, 13)\n\nval myBundle = Wire(new Bundle {\n  val foo = UInt()\n  val bar = UInt()\n})\nmyBundle.foo := 3.U\nmyBundle.bar := 11.U\nprintf(cf\"myBundle = $myBundle\") // myBundle = Bundle(a -&gt; 3, b -&gt; 11)\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_19","title":"\u81ea\u5b9a\u4e49\u200b\u6253\u5370","text":"<p>Chisel \u200b\u4e5f\u200b\u4e3a\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b Bundle \u200b\u63d0\u4f9b\u200b\u81ea\u5b9a\u4e49\u200b\u6253\u5370\u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p> <pre><code>class Message extends Bundle {\n  val valid = Bool()\n  val addr = UInt(32.W)\n  val length = UInt(4.W)\n  val data = UInt(64.W)\n  override def toPrintable: Printable = {\n    val char = Mux(valid, 'v'.U, '-'.U)\n    cf\"Message:\\n\" +\n    cf\"  valid  : $char%c\\n\" +\n    cf\"  addr   : $addr%x\\n\" +\n    cf\"  length : $length\\n\" +\n    cf\"  data   : $data%x\\n\"\n  }\n}\n\nval myMessage = Wire(new Message)\nmyMessage.valid := true.B\nmyMessage.addr := \"h1234\".U\nmyMessage.length := 10.U\nmyMessage.data := \"hdeadbeef\".U\n\nprintf(cf\"$myMessage\")\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u5f97\u5230\u200b\u4e0b\u9762\u200b\u7684\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>Message:\n  valid  : v\n  addr   : 0x00001234\n  length : 10\n  data   : 0x00000000deadbeef\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\u5728\u200b <code>cf</code> \u200b\u63d2\u5165\u200b\u5b57\u7b26\u4e32\u200b\u4e4b\u95f4\u200b\u4f7f\u7528\u200b\u7684\u200b <code>+</code>\u3002<code>cf</code> \u200b\u63d2\u5165\u200b\u7684\u200b\u7ed3\u679c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>+</code> \u200b\u64cd\u4f5c\u7b26\u200b\u6765\u200b\u8fde\u63a5\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#c","title":"C \u200b\u98ce\u683c","text":"<p>Chisel \u200b\u63d0\u4f9b\u200b\u7684\u200b <code>printf</code> \u200b\u98ce\u683c\u200b\u4e0e\u5176\u200b\u540c\u540d\u200b\u7684\u200b C \u200b\u8bed\u8a00\u200b\u98ce\u683c\u200b\u76f8\u4f3c\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u53cc\u5f15\u53f7\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u4e00\u4e2a\u200b\u53ef\u53d8\u200b\u6570\u91cf\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u8fd9\u4e9b\u200b\u53c2\u6570\u200b\u5c06\u200b\u6253\u5370\u200b\u5728\u200b\u65f6\u949f\u200b\u4e0a\u5347\u200b\u6cbf\u200b\u4e0a\u200b\u3002Chisel \u200b\u652f\u6301\u200b\u4ee5\u4e0b\u200b\u683c\u5f0f\u200b\u8bf4\u660e\u7b26\u200b\uff1a</p> \u200b\u683c\u5f0f\u200b\u8bf4\u660e\u7b26\u200b \u200b\u542b\u4e49\u200b <code>%d</code> \u200b\u5341\u8fdb\u5236\u200b\u6570\u200b <code>%x</code> \u200b\u5341\u516d\u8fdb\u5236\u200b\u6570\u200b <code>%b</code> \u200b\u4e8c\u8fdb\u5236\u200b\u6570\u200b <code>%c</code> 8 \u200b\u4f4d\u200b ASCII \u200b\u5b57\u7b26\u200b <code>%%</code> \u200b\u767e\u5206\u53f7\u200b\u5b57\u7b26\u200b <p>\u200b\u5b83\u200b\u8fd8\u200b\u652f\u6301\u200b\u4e00\u200b\u5c0f\u7ec4\u200b\u8f6c\u4e49\u5b57\u7b26\u200b\uff1a</p> \u200b\u8f6c\u4e49\u200b\u7b26\u200b \u200b\u542b\u4e49\u200b <code>\\n</code> \u200b\u65b0\u200b\u884c\u200b <code>\\t</code> tab <code>\\\"</code> \u200b\u53cc\u5f15\u53f7\u200b\u5b57\u7b26\u200b <code>\\'</code> \u200b\u5355\u5f15\u53f7\u200b\u5b57\u7b26\u200b <code>\\\\</code> \u200b\u53cd\u200b\u659c\u6760\u200b\u5b57\u7b26\u200b <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5355\u5f15\u53f7\u200b\u4e0d\u200b\u9700\u8981\u200b\u8f6c\u4e49\u200b\uff0c\u200b\u4f46\u200b\u8f6c\u4e49\u200b\u662f\u200b\u5408\u6cd5\u200b\u7684\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b printf \u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u4e0e\u200b C \u200b\u4e2d\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u5f0f\u200b\u975e\u5e38\u200b\u76f8\u4f3c\u200b\uff1a</p> <pre><code>val myUInt = 32.U\nprintf(\"myUInt = %d\", myUInt) // myUInt = 32\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#naming","title":"\u547d\u540d\u200b\uff08Naming\uff09","text":"<p>\u200b\u4ece\u200b\u5386\u53f2\u200b\u4e0a\u200b\u770b\u200b\uff0cChisel \u200b\u4e00\u76f4\u200b\u96be\u4ee5\u200b\u53ef\u9760\u200b\u7684\u200b\u6355\u6349\u200b\u4fe1\u53f7\u200b\u7684\u200b\u540d\u79f0\u200b\u3002\u200b\u9020\u6210\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u7684\u200b\u539f\u56e0\u200b\u662f\u200b\uff0c\uff081\uff09\u200b\u4e3b\u8981\u200b\u4f9d\u9760\u200b\u6620\u5c04\u200b\u6765\u200b\u67e5\u627e\u200b\u540d\u79f0\u200b\uff0c\uff082\uff09\u200b\u4f7f\u7528\u200b\u6709\u200b\u4e0d\u200b\u53ef\u9760\u200b\u884c\u4e3a\u200b\u7684\u200b <code>@chiselName</code> \u200b\u5b8f\u200b\u3002</p> <p>Chisel 3.4 \u200b\u5f15\u5165\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b Scala \u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\uff0c\u200b\u5f53\u200b\u4fe1\u53f7\u200b\u540d\u79f0\u200b\u88ab\u200b\u58f0\u660e\u200b\u65f6\u200b\uff0c\u200b\u8be5\u200b\u63d2\u4ef6\u200b\u53ef\u4ee5\u200b\u786e\u8ba4\u200b\u4fe1\u53f7\u200b\u540d\u79f0\u200b\u7684\u200b\u53ef\u9760\u6027\u200b\u548c\u200b\u81ea\u52a8\u200b\u6355\u83b7\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u6b64\u200b\u7248\u672c\u200b\u8fd8\u200b\u5927\u91cf\u200b\u4f7f\u7528\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u524d\u7f00\u200b API\uff0c\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u901a\u8fc7\u200b\u51fd\u6570\u8c03\u7528\u200b\u4ee5\u200b\u7f16\u7a0b\u200b\u65b9\u5f0f\u200b\u751f\u6210\u200b\u7684\u200b\u4fe1\u53f7\u200b\u8fdb\u884c\u200b\u66f4\u200b\u53ef\u9760\u200b\u7684\u200b\u547d\u540d\u200b\u3002</p> <p>\u200b\u672c\u200b\u8282\u200b\u89e3\u91ca\u200b\u4e86\u200b\u5982\u4f55\u200b\u5728\u200b Chisel \u200b\u4e2d\u200b\u5bf9\u200b\u4fe1\u53f7\u200b\u548c\u200b\u6a21\u5757\u200b\u540d\u79f0\u200b\u8fdb\u884c\u200b\u547d\u540d\u200b\u3002\u200b\u6709\u5173\u200b\u5982\u4f55\u200b\u89e3\u51b3\u200b\u7cfb\u7edf\u200b\u540d\u79f0\u200b\u7a33\u5b9a\u6027\u200b\u95ee\u9898\u200b\u7684\u200b\u793a\u4f8b\u200b\uff0c\u200b\u8bf7\u53c2\u9605\u200b cookbook</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_20","title":"\u7f16\u8bd1\u200b\u63d2\u4ef6","text":"<pre><code>// \u200b\u5bfc\u5165\u200b\u63a5\u4e0b\u6765\u200b\u793a\u4f8b\u200b\u4f7f\u7528\u200b\u7684\u200b\u5305\u200b\nimport chisel3._\nimport chisel3.experimental.{prefix, noPrefix}\n</code></pre> <p>\u200b\u4f7f\u7528\u200b Chisel 3.5 \u200b\u7684\u200b\u7528\u6237\u200b\u9700\u8981\u200b\u5728\u200b build.sbt \u200b\u8bbe\u7f6e\u200b\u4e2d\u200b\u52a0\u5165\u200b\u4e00\u884c\u200b\uff1a</p> <pre><code>// chiselVersion \u200b\u662f\u200b\u7248\u672c\u53f7\u200b\u5b57\u7b26\u4e32\u200b\uff08\u200b\u5982\u200b\uff0c\"3.5.3\"\uff09\naddCompilerPlugin(\"edu.berkeley.sc\" % \"chisel3-plugin\" % chiselVersion cross CrossVersion.full)\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u63d2\u4ef6\u200b\u5c06\u200b\u5728\u200b Scala \u200b\u7f16\u8bd1\u5668\u200b\u7684\u200b \u2018typer\u2019 \u200b\u9636\u6bb5\u200b\u4e4b\u540e\u200b\u8fd0\u884c\u200b\u3002\u200b\u5b83\u200b\u67e5\u627e\u200b\u5f62\u5f0f\u200b\u4e3a\u200b <code>val x=y</code> \u200b\u7684\u200b\u4efb\u4f55\u200b\u7528\u6237\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>x</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b \u201cchisel3.Data\u201d, \u201cchisel3.MemBase\u201d \u200b\u6216\u200b \u201cchisel3.experial.BaseModule\u201d\u3002\u200b\u5bf9\u4e8e\u200b\u7b26\u5408\u200b\u6b64\u200b\u6807\u51c6\u200b\u7684\u200b\u6bcf\u200b\u4e00\u884c\u200b\uff0c\u200b\u5b83\u200b\u90fd\u200b\u4f1a\u200b\u91cd\u5199\u200b\u8be5\u884c\u200b\u3002\u200b\u5728\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6ce8\u91ca\u200b\u884c\u662f\u200b\u4e0a\u9762\u200b\u7684\u200b\u884c\u200b\u88ab\u200b\u91cd\u5199\u200b\u7684\u200b\u884c\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u8be5\u884c\u200b\u5728\u200b bundle \u200b\u58f0\u660e\u200b\u4e2d\u200b\u6216\u662f\u200b\u6a21\u5757\u200b\u5b9e\u4f8b\u200b\u5316\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u91cd\u5199\u200b\u8be5\u884c\u200b\uff0c\u200b\u5c06\u200b\u53f3\u4fa7\u200b\u66ff\u6362\u200b\u4e3a\u200b\u5bf9\u200b <code>autoNameRecursively</code> \u200b\u7684\u200b\u8c03\u7528\u200b\uff0c\u200b\u8be5\u200b\u8c03\u7528\u200b\u547d\u540d\u200b\u4fe1\u53f7\u200b/\u200b\u6a21\u5757\u200b\u3002</p> <pre><code>class MyBundle extends Bundle {\n  val foo = Input(UInt(3.W))\n  // val foo = autoNameRecursively(\"foo\")(Input(UInt(3.W)))\n}\nclass Example1 extends Module {\n  // val io = autoNameRecursively(\"io\")(IO(new Bundle()))\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example1(\n  input       clock,\n              reset,\n  input [2:0] io_foo\n);\n\nendmodule\n</code></pre> <p>\u200b\u5426\u5219\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u88ab\u200b\u91cd\u5199\u200b\uff0c\u200b\u4ee5\u200b\u5c06\u200b\u8be5\u200b\u540d\u79f0\u200b\u4f5c\u4e3a\u200b\u524d\u7f00\u200b\u5305\u542b\u200b\u5728\u200b\u6267\u884c\u200b val \u200b\u58f0\u660e\u200b\u7684\u200b\u53f3\u4fa7\u200b\u65f6\u200b\u751f\u6210\u200b\u7684\u200b\u4efb\u4f55\u200b\u4fe1\u53f7\u200b\u4e2d\u200b\uff1a</p> <pre><code>class Example2 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  // val in = autoNameRecursively(\"in\")(prefix(\"in\")(IO(Input(UInt(2.W)))))\n\n  val out = IO(Output(UInt(2.W)))\n  // val out = autoNameRecursively(\"out\")(prefix(\"out\")(IO(Output(UInt(2.W))))\n\n  def inXin() = in * in\n\n  val add = 3.U + inXin()\n  // val add = autoNameRecursively(\"add\")(prefix(\"add\")(3.U + inXin()))\n  // \u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e58\u6cd5\u200b\u7684\u200b\u4e2d\u95f4\u200b\u7ed3\u679c\u200b\u4ee5\u200b add \u200b\u4e3a\u200b\u524d\u7f00\u200b\n\n  out := add + 1.U\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example2(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = in * in;\nendmodule\n</code></pre> <p>\u200b\u524d\u7f00\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6e90\u81ea\u200b\u4e00\u4e2a\u200b\u8fde\u63a5\u200b\u5de6\u8fb9\u200b\u7684\u200b\u4fe1\u53f7\u200b\u540d\u79f0\u200b\u3002\u200b\u867d\u7136\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u4f9d\u9760\u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\u5b9e\u73b0\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u4ed6\u200b\u7684\u200b\u884c\u4e3a\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\uff1a</p> <pre><code>class ConnectPrefixing extends Module {\n  val in = IO(Input(UInt(2.W)))\n  // val in = autoNameRecursively(\"in\")(prefix(\"in\")IO(Input(UInt(2.W))))\n\n  val out = IO(Output(UInt(2.W)))\n  // val out = autoNameRecursively(\"out\")(prefix(\"out\")IO(Output(UInt(2.W))))\n\n  out := { // \u200b\u4ece\u6280\u672f\u4e0a\u200b\u8bb2\u200b\uff0c\u200b\u5b83\u200b\u4e0d\u200b\u5305\u542b\u200b\u5728\u200b AutoNameRecurative \u200b\u6216\u200b Prefix \u200b\u4e2d\u200b\n    // \u200b\u4f46\u662f\u200b Chisel \u200b\u8fd0\u884c\u200b\u65f6\u200b\u4ecd\u7136\u200b\u4f1a\u200b\u4f7f\u7528\u200b out \u200b\u4f5c\u4e3a\u200b\u524d\u7f00\u200b\n    val double = in * in\n    // val double = autoNameRecursively(\"double\")(prefix(\"double\")(in * in))\n    double + 1.U\n  }\n}\n// Generated by CIRCT firtool-1.44.0\nmodule ConnectPrefixing(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = in * in + 2'h1;\nendmodule\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b\u5d4c\u5957\u200b\u5728\u200b <code>Option</code> \u200b\u6216\u200b <code>Iterable</code> \u200b\u7684\u200b\u5b50\u200b\u7c7b\u578b\u200b\u4e2d\u200b\uff0c\u200b\u5219\u200b\u547d\u540d\u200b\u4e5f\u200b\u6709\u6548\u200b\uff1a</p> <pre><code>class Example3 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  // val in = autoNameRecursively(\"in\")(prefix(\"in\")(IO(Input(UInt(2.W)))))\n\n  val out = IO(Output(UInt()))\n  // val out = autoNameRecursively(\"out\")(prefix(\"out\")(IO(Output(UInt()))))\n\n  def func() = {\n    val delay = RegNext(in)\n    delay + 1.U\n  }\n\n  val opt = Some(func())\n  // \u200b\u6ce8\u610f\u200b func() \u200b\u4e2d\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u662f\u200b\u7528\u200b opt \u200b\u4f5c\u4e3a\u200b\u524d\u7f00\u200b\u7684\u200b\n  // val opt = autoNameRecursively(\"opt\")(prefix(\"opt\")(Some(func()))\n\n  out := opt.get + 1.U\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example3(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  reg [1:0] opt_delay;\n  always @(posedge clock)\n    opt_delay &lt;= in;\n  assign out = opt_delay - 2'h2;\nendmodule\n</code></pre> <p>\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u8f7b\u5fae\u200b\u7684\u200b\u53d8\u4f53\u200b\uff08<code>autoNameRecursivevelyProduct</code>\uff09\uff0c\u200b\u7528\u4e8e\u200b\u4f7f\u7528\u200b unapply \u200b\u63d0\u4f9b\u200b\u7684\u200b\u540d\u79f0\u200b\u547d\u540d\u200b\u786c\u4ef6\u200b\uff1a</p> <pre><code>class UnapplyExample extends Module {\n  def mkIO() = (IO(Input(UInt(2.W))), IO(Output(UInt())))\n  val (in, out) = mkIO()\n  // val (in, out) = autoNameRecursivelyProduct(List(Some(\"in\"), Some(\"out\")))(mkIO())\n\n  out := in\n}\n// Generated by CIRCT firtool-1.44.0\nmodule UnapplyExample(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = in;\nendmodule\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u4e0d\u4f1a\u200b\u63d2\u5165\u200b\u524d\u7f00\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u524d\u7f00\u200b\u5e94\u8be5\u200b\u662f\u200b\u4ec0\u4e48\u200b\u5e76\u200b\u4e0d\u200b\u660e\u786e\u200b\u3002\u200b\u9f13\u52b1\u200b\u60f3\u8981\u200b\u524d\u7f00\u200b\u7684\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u5982\u4e0b\u200b\u6240\u8ff0\u200b\u7684\u200b\u524d\u7f00\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_21","title":"\u524d\u7f00","text":"<p>\u200b\u5982\u200b\u4e0a\u200b\u6240\u793a\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u4e3a\u200b\u4e00\u4e9b\u200b\u4fe1\u53f7\u200b\u6dfb\u52a0\u200b\u524d\u7f00\u200b\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u7528\u6237\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u6dfb\u52a0\u200b\u81ea\u5df1\u200b\u7684\u200b\u524d\u7f00\u200b\u3002\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b ECO \u200b\u7c7b\u578b\u200b\u7684\u200b\u4fee\u590d\u200b\u7279\u522b\u200b\u6709\u7528\u200b\uff0c\u200b\u5728\u200b\u8fd9\u79cd\u200b\u4fee\u590d\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u5411\u200b\u6a21\u5757\u200b\u6dfb\u52a0\u200b\u4e00\u4e9b\u200b\u903b\u8f91\u200b\uff0c\u200b\u4f46\u200b\u53c8\u200b\u4e0d\u60f3\u200b\u5f71\u54cd\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b\u540d\u79f0\u200b\u3002</p> <p>\u200b\u5728\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5728\u200b\u9644\u52a0\u200b\u903b\u8f91\u200b\u524d\u9762\u200b\u52a0\u4e0a\u200b \u201cECO\u201d\uff0c\u200b\u5176\u4e2d\u200b Example4 \u200b\u662f\u200b\u52a0\u5165\u200b\u524d\u7f00\u200b\u524d\u200b\u7684\u200b ECO\uff0cExample5 \u200b\u662f\u200b\u52a0\u5165\u200b\u524d\u7f00\u200b\u540e\u200b\u7684\u200b ECO\uff1a</p> <pre><code>class Example4 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt()))\n\n  val add = in + in + in\n\n  out := add + 1.U\n}\n\nclass Example5 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt()))\n\n  val add = in + in + in\n\n  out := prefix(\"ECO\") { add + 1.U + in }\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example4(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = {in[0], 1'h0} + in + 2'h1;\nendmodule\n\n// Generated by CIRCT firtool-1.44.0\nmodule Example5(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = {in[0], 1'h0} + in + in + 2'h1;\nendmodule\n</code></pre> <p>\u200b\u8fd8\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u524d\u7f00\u200b\u76f8\u4e92\u200b\u9644\u52a0\u200b\uff08\u200b\u5305\u62ec\u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\u751f\u6210\u200b\u7684\u200b\u524d\u7f00\u200b\uff09</p> <pre><code>class Example6 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt()))\n\n  val add = prefix(\"foo\") { in + in + in }\n\n  out := add\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example6(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = {in[0], 1'h0} + in;\nendmodule\n</code></pre> <p>\u200b\u6709\u65f6\u200b\u4f60\u200b\u53ef\u80fd\u200b\u5e0c\u671b\u200b\u5173\u95ed\u200b\u524d\u7f00\u200b\u3002\u200b\u5982\u679c\u200b\u60a8\u200b\u6b63\u5728\u200b\u7f16\u5199\u200b\u5e93\u51fd\u6570\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u5e0c\u671b\u200b\u4f7f\u7528\u200b\u524d\u7f00\u200b\uff0c\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>noPrefix</code> \u200b\u5bf9\u8c61\u200b\uff1a</p> <pre><code>class Example7 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt()))\n\n  val add = noPrefix { in + in + in }\n\n  out := add\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example7(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = {in[0], 1'h0} + in;\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#suggest-a-signals-name-or-the-instance-name-of-a-module","title":"Suggest a Signal\u2019s Name (or the instance name of a Module)","text":"<p>\u200b\u5982\u679c\u200b\u8981\u200b\u6307\u5b9a\u200b\u4fe1\u53f7\u200b\u7684\u200b\u540d\u79f0\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>.sugestName</code> API\u3002\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5efa\u8bae\u200b\u7684\u200b\u540d\u79f0\u200b\u4ecd\u200b\u5c06\u200b\u4f5c\u4e3a\u200b\u524d\u7f00\u200b\uff08\u200b\u5305\u62ec\u200b\u63d2\u4ef6\u200b\uff09\u3002\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4e00\u76f4\u200b\u4f7f\u7528\u200b <code>noPrefix</code> \u200b\u5bf9\u8c61\u200b\u6765\u200b\u5265\u79bb\u200b\u3002</p> <pre><code>class Example8 extends Module {\n  val in = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt()))\n\n  val add = (in + (in + in).suggestName(\"foo\"))\n\n  out := add\n}\n// Generated by CIRCT firtool-1.44.0\nmodule Example8(\n  input        clock,\n               reset,\n  input  [1:0] in,\n  output [1:0] out\n);\n\n  assign out = in + {in[0], 1'h0};\nendmodule\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>.suggestName</code> \u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u4ece\u200b val \u200b\u540d\u79f0\u200b\u6d3e\u751f\u200b\u7684\u200b\u524d\u7f00\u200b\uff1b\u200b\u4f46\u662f\u200b\uff0c\u200b\u5b83\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u4ece\u200b\u8fde\u63a5\u200b\u6d3e\u751f\u200b\u7684\u200b\u524d\u7f00\u200b\uff08\u200b\u5982\u200b <code>:=</code>\uff09\uff1a</p> <pre><code>class ConnectionPrefixExample extends Module {\n  val in0 = IO(Input(UInt(2.W)))\n  val in1 = IO(Input(UInt(2.W)))\n\n  val out0 = {\n    val port = IO(Output(UInt()))\n    // Even though this suggestName is before mul, the prefix used in this scope\n    // is derived from `val out0`, so this does not affect the name of mul\n    port.suggestName(\"foo\")\n    // out0_mul\n    val mul = in0 * in1\n    port := mul + 1.U\n    port\n  }\n\n  val out1 = IO(Output(UInt()))\n  val out2 = IO(Output(UInt()))\n\n  out1 := {\n    // out1_sum\n    val sum = in0 + in1\n    sum + 1.U\n  }\n  // Comes after so does *not* affect prefix above\n  out1.suggestName(\"bar\")\n\n  // Comes before so *does* affect prefix below\n  out2.suggestName(\"fizz\")\n  out2 := {\n    // fizz_diff\n    val diff = in0 - in1\n    diff + 1.U\n  }\n}\n// Generated by CIRCT firtool-1.44.0\nmodule ConnectionPrefixExample(\n  input        clock,\n               reset,\n  input  [1:0] in0,\n               in1,\n  output [3:0] foo,\n  output [1:0] bar,\n               fizz\n);\n\n  assign foo = {2'h0, in0} * {2'h0, in1} + 4'h1;\n  assign bar = in0 + in1 + 2'h1;\n  assign fizz = in0 - in1 + 2'h1;\nendmodule\n</code></pre> <p>\u200b\u5982\u200b\u672c\u4f8b\u200b\u6240\u793a\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u884c\u4e3a\u200b\u6709\u70b9\u200b\u4e0d\u200b\u4e00\u81f4\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u672a\u6765\u200b\u7684\u200bChisel\u200b\u7248\u672c\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#unnamed-signals-temporaries","title":"\u201cUnnamed signals\u201d \u200b\u7684\u200b\u884c\u4e3a\u200b\uff08\u200b\u53c8\u540d\u200b \u201cTemporaries\u201d\uff09","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u8868\u793a\u200b\u4fe1\u53f7\u200b\u7684\u200b\u540d\u79f0\u200b\u65e0\u5173\u7d27\u8981\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b val \u200b\u7684\u200b\u540d\u79f0\u200b\u524d\u9762\u200b\u52a0\u4e0a\u200b _\u3002Chisel\u200b\u5c06\u200b\u4fdd\u7559\u200b\u524d\u5bfc\u200b\u7684\u200b\u60ef\u4f8b\u200b\uff0c\u200b\u8868\u793a\u200b\u524d\u7f00\u200b\u4e4b\u95f4\u200b\u7684\u200b\u672a\u547d\u540d\u200b\u4fe1\u53f7\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>class TemporaryExample extends Module {\n  val in0 = IO(Input(UInt(2.W)))\n  val in1 = IO(Input(UInt(2.W)))\n\n  val out = {\n    val port = IO(Output(UInt()))\n    val _sum = in0 + in1\n    port := _sum + 1.U\n    port\n  }\n}\n// Generated by CIRCT firtool-1.44.0\nmodule TemporaryExample(\n  input        clock,\n               reset,\n  input  [1:0] in0,\n               in1,\n  output [1:0] out\n);\n\n  assign out = in0 + in1 + 2'h1;\nendmodule\n</code></pre> <p>\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u672a\u547d\u540d\u200b\u7684\u200b\u4fe1\u53f7\u200b\u672c\u8eab\u200b\u88ab\u200b\u7528\u6765\u200b\u751f\u6210\u200b\u524d\u7f00\u200b\uff0c\u200b\u90a3\u4e48\u200b\u524d\u5bfc\u200b\u7684\u200b_\u200b\u5c06\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u5728\u200b\u5176\u4ed6\u200b\u5d4c\u5957\u200b\u4fe1\u53f7\u200b\u7684\u200b\u540d\u79f0\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u53cc\u200b _\u3002</p> <pre><code>class TemporaryPrefixExample extends Module {\n  val in0 = IO(Input(UInt(2.W)))\n  val in1 = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt()))\n\n  val _sum = {\n    val x = in0 + in1\n    x + 1.U\n  }\n  out := _sum &amp; 0x2.U\n}\n// Generated by CIRCT firtool-1.44.0\nmodule TemporaryPrefixExample(\n  input        clock,\n               reset,\n  input  [1:0] in0,\n               in1,\n  output [1:0] out\n);\n\n  assign out = in0 + in1 + 2'h1 &amp; 2'h2;\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_22","title":"\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u6a21\u5757\u200b\u540d\u79f0","text":"<p>\u200b\u5982\u679c\u200b\u8981\u200b\u6307\u5b9a\u200b\u6a21\u5757\u200b\u7684\u200b\u540d\u79f0\u200b\uff08\u200b\u800c\u200b\u4e0d\u662f\u200b\u6a21\u5757\u200b\u7684\u200b\u5b9e\u4f8b\u200b\u540d\u79f0\u200b\uff09\uff0c\u200b\u5219\u200b\u53ef\u4ee5\u200b\u59cb\u7ec8\u200b\u8986\u76d6\u200b <code>desiredName</code> \u200b\u503c\u200b\u3002\u200b\u6ce8\u610f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6a21\u5757\u200b\u7684\u200b\u53c2\u6570\u200b\u6765\u200b\u53c2\u6570\u200b\u5316\u200b\u540d\u79f0\u200b\u3002\u200b\u8fd9\u662f\u200b\u4e00\u79cd\u200b\u4f7f\u200b\u6a21\u5757\u200b\u540d\u79f0\u200b\u66f4\u52a0\u200b\u7a33\u5b9a\u200b\u7684\u200b\u597d\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5f3a\u70c8\u5efa\u8bae\u200b\u60a8\u200b\u8fd9\u6837\u200b\u505a\u200b\u3002</p> <pre><code>class Example9(width: Int) extends Module {\n  override val desiredName = s\"EXAMPLE9WITHWIDTH$width\"\n  val in = IO(Input(UInt(width.W)))\n  val out = IO(Output(UInt()))\n\n  val add = (in + (in + in).suggestName(\"foo\"))\n\n  out := add\n}\n// Generated by CIRCT firtool-1.44.0\nmodule EXAMPLE9WITHWIDTH8(\n  input        clock,\n               reset,\n  input  [7:0] in,\n  output [7:0] out\n);\n\n  assign out = in + {in[6:0], 1'h0};\nendmodule\n\n// Generated by CIRCT firtool-1.44.0\nmodule EXAMPLE9WITHWIDTH1(\n  input  clock,\n         reset,\n         in,\n  output out\n);\n\n  assign out = in;\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_23","title":"\u6620\u5c04\u200b\u547d\u540d","text":"<p>\u200b\u65e0\u8bba\u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\u662f\u5426\u200b\u542f\u7528\u200b\uff0cChisel \u200b\u6784\u9020\u200b\u6a21\u5757\u200b\u540e\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b\u547d\u540d\u200b\u6a21\u5757\u200b\u7684\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u3002\u200b\u8fd9\u200b\u5c06\u200b\u547d\u540d\u200b\u4f5c\u4e3a\u200b\u6a21\u5757\u200b\u7c7b\u5b57\u200b\u6bb5\u200b\u7684\u200b\u6240\u6709\u200b val\uff0c\u200b\u4f46\u200b\u4e0d\u4f1a\u200b\u547d\u540d\u200b\u5d4c\u5957\u200b\u51fd\u6570\u200b\u6216\u200b\u4f5c\u7528\u57df\u200b\u4e2d\u200b\u7684\u200b\u4efb\u4f55\u200b val\u3002</p> <p>\u200b\u5982\u679c\u200b\u63d2\u4ef6\u200b\u6210\u529f\u200b\u5730\u200b\u547d\u540d\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6620\u5c04\u200b\u547d\u540d\u200b\u5c06\u200b\u4e0d\u4f1a\u200b\u8d77\u200b\u4efb\u4f55\u200b\u4f5c\u7528\u200b\u3002\u200b\u6211\u4eec\u200b\u8ba1\u5212\u200b\u5728\u200b\u672a\u6765\u200b\u7684\u200b Chisel \u200b\u7248\u672c\u200b\u4e2d\u200b\u53d6\u6d88\u200b\u6240\u6709\u200b\u6620\u5c04\u200b\u547d\u540d\u200b\uff0c\u200b\u4f46\u200b\u5141\u8bb8\u200b\u63d2\u4ef6\u200b\u547d\u540d\u200b\u662f\u200b\u53ef\u9009\u200b\u7684\u200b\uff08\u200b\u4f46\u200b\u63a8\u8350\u200b\uff09\u3002</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4ee5\u4e0b\u200b\u6a21\u5757\u200b\u4e2d\u200b\u7684\u200b\u4fe1\u53f7\u200b\u5904\u4e8e\u200b\u5d4c\u5957\u200b\u8303\u56f4\u200b\u5185\u200b\uff1b\u200b\u63d2\u4ef6\u200b\u6210\u529f\u200b\u5730\u200b\u547d\u540d\u200b\u4e86\u200b\u5b83\u4eec\u200b\uff0c\u200b\u4f46\u200b\u6620\u5c04\u200b\u547d\u540d\u200b\u4e0d\u80fd\u200b\uff1a</p> <pre><code>class Example10 extends Module {\n  {\n    val in = IO(Input(UInt(3.W)))\n    val out = IO(Output(UInt()))\n\n    val add = in + in\n\n    out := add\n  }\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chiselname","title":"@chiselName","text":"<p>\u200b\u4e0d\u518d\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\u6b64\u5b8f\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u7684\u200b\u529f\u80fd\u200b\u5df2\u200b\u88ab\u200b\u7f16\u8bd1\u5668\u200b\u63d2\u4ef6\u200b\u5b8c\u5168\u200b\u53d6\u4ee3\u200b\u3002\u200b\u8bf7\u200b\u968f\u610f\u200b\u4ece\u200b\u4f60\u200b\u7684\u200bChisel\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u5220\u9664\u200b\uff01</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#unconnected-wires","title":"\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u7ebf\u200b\uff08Unconnected Wires\uff09","text":"<p>Invalidate API \u200b\u6dfb\u52a0\u200b\u4e86\u200b\u652f\u6301\u200b\u4f7f\u200b Chisel \u200b\u53ef\u4ee5\u200b\u5c06\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u5bfc\u7ebf\u200b\u62a5\u544a\u200b\u4e3a\u200b\u9519\u8bef\u200b\u3002</p> <p>Prior to this pull request, Chisel automatically generated a firrtl is invalid for Module IO(), and each Wire() definition. This made it difficult to detect cases where output signals were never driven. Chisel now supports a DontCare element, which may be connected to an output signal, indicating that that signal is intentionally not driven. Unless a signal is driven by hardware or connected to a DontCare, Firrtl will complain with a \u201cnot fully initialized\u201d error. \u200b\u5728\u200b\u6b64\u200b pull \u200b\u8bf7\u6c42\u200b\u4e4b\u524d\u200b\uff0cChisel \u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b firrtl\uff0c\u200b\u8be5\u200b firrtl \u200b\u5bf9\u4e8e\u200b <code>Module IO()</code>\u200b\u548c\u200b\u6bcf\u4e2a\u200b <code>Wire()</code> \u200b\u5b9a\u4e49\u200b\u65e0\u6548\u200b\u3002\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u96be\u4ee5\u200b\u68c0\u6d4b\u200b\u4ece\u672a\u200b\u9a71\u52a8\u200b\u8f93\u51fa\u200b\u4fe1\u53f7\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002Chisel \u200b\u73b0\u5728\u200b\u652f\u6301\u200b <code>DontCare</code> \u200b\u5143\u4ef6\u200b\uff0c\u200b\u8be5\u200b\u5143\u4ef6\u200b\u53ef\u4ee5\u200b\u8fde\u63a5\u200b\u5230\u200b\u8f93\u51fa\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u8868\u660e\u200b\u8be5\u200b\u4fe1\u53f7\u200b\u662f\u200b\u6545\u610f\u200b\u4e0d\u200b\u88ab\u200b\u9a71\u52a8\u200b\u7684\u200b\u3002\u200b\u9664\u975e\u200b\u4fe1\u53f7\u200b\u7531\u200b\u786c\u4ef6\u200b\u9a71\u52a8\u200b\u6216\u200b\u8fde\u63a5\u200b\u5230\u200b <code>DontCare</code>\uff0c\u200b\u5426\u5219\u200b Firrtl \u200b\u5c06\u200b\u62a5\u544a\u200b \u201cnot fully initialized\u201d \u200b\u9519\u8bef\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#api","title":"API","text":"<p>\u200b\u8f93\u51fa\u200b\u4fe1\u53f7\u200b\u53ef\u80fd\u200b\u88ab\u200b\u8fde\u63a5\u200b\u5230\u200b DontCare\uff0c\u200b\u5f53\u200b\u53d1\u51fa\u200b firrtl \u200b\u7684\u200b\u65f6\u5019\u200b\u751f\u6210\u200b <code>a invalid</code>\uff1a</p> <pre><code>class Out extends Bundle { \n  val debug = Bool()\n  val debugOption = Bool()\n}\nval io = new Bundle { val out = new Out }\nio.out.debug := true.B\nio.out.debugOption := DontCare\n</code></pre> <p>\u200b\u8fd9\u200b\u8868\u793a\u200b\u6545\u610f\u200b\u4e0d\u200b\u9a71\u52a8\u200b\u4fe1\u53f7\u200b <code>io.out.debugOption</code>\uff0cfirrtl \u200b\u4e0d\u200b\u5e94\u200b\u5bf9\u6b64\u200b\u4fe1\u53f7\u200b\u53d1\u51fa\u200b \u201cnot fully initialized\u201d \u200b\u9519\u8bef\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u53ef\u4ee5\u200b\u5e94\u7528\u200b\u4e8e\u200b\u96c6\u5408\u200b\u4ee5\u53ca\u200b\u5355\u4e2a\u200b\u4fe1\u53f7\u200b\uff1a</p> <pre><code>import chisel3._\nclass ModWithVec extends Module {\n  // ...\n  val nElements = 5\n  val io = IO(new Bundle {\n    val outs = Output(Vec(nElements, Bool()))\n  })\n  io.outs &lt;&gt; DontCare\n  // ...\n}\n\nclass TrivialInterface extends Bundle {\n  val in  = Input(Bool())\n  val out = Output(Bool())\n}\n\nclass ModWithTrivalInterface extends Module {\n  // ...\n  val io = IO(new TrivialInterface)\n  io &lt;&gt; DontCare\n  // ...\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_24","title":"\u786e\u5b9a\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u5143\u7d20","text":"<p>\u200b\u6211\u200b\u6709\u200b\u4e00\u4e2a\u200b 42 \u200b\u6761\u7ebf\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002\u200b\u4ed6\u4eec\u200b\u4e4b\u4e2d\u200b\u8c01\u200b\u662f\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\uff1f</p> <p>firrtl \u200b\u7684\u200b\u9519\u8bef\u4fe1\u606f\u200b\u5e94\u8be5\u200b\u5305\u542b\u200b\u4e00\u4e9b\u200b\u4e1c\u897f\u200b\uff1a</p> <pre><code>firrtl.passes.CheckInitialization$RefNotInitializedException:  @[:@6.4] : [module Router]  Reference io is not fully initialized.\n   @[Decoupled.scala 38:19:@48.12] : node _GEN_23 = mux(and(UInt&lt;1&gt;(\"h1\"), eq(UInt&lt;2&gt;(\"h3\"), _T_84)), _GEN_2, VOID) @[Decoupled.scala 38:19:@48.12]\n   @[Router.scala 78:30:@44.10] : node _GEN_36 = mux(_GEN_0.ready, _GEN_23, VOID) @[Router.scala 78:30:@44.10]\n   @[Router.scala 75:26:@39.8] : node _GEN_54 = mux(io.in.valid, _GEN_36, VOID) @[Router.scala 75:26:@39.8]\n   @[Router.scala 70:50:@27.6] : node _GEN_76 = mux(io.load_routing_table_request.valid, VOID, _GEN_54) @[Router.scala 70:50:@27.6]\n   @[Router.scala 65:85:@19.4] : node _GEN_102 = mux(_T_62, VOID, _GEN_76) @[Router.scala 65:85:@19.4]\n   : io.outs[3].bits.body &lt;= _GEN_102\n</code></pre> <p>\u200b\u7b2c\u4e00\u884c\u200b\u662f\u200b\u521d\u59cb\u5316\u200b\u9519\u8bef\u62a5\u544a\u200b\u3002\u200b\u63a5\u4e0b\u6765\u200b\u4e00\u884c\u200b\uff0c\u200b\u7f29\u8fdb\u200b\u5e76\u200b\u4ee5\u200b\u6e90\u6587\u4ef6\u200b\u7684\u200b\u884c\u6570\u200b\u5f00\u5934\u200b\u8868\u793a\u200b\u6709\u200b\u95ee\u9898\u200b\u7684\u200b\u4fe1\u53f7\u200b\u3002\u200b\u4e0d\u5e78\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u4ed6\u4eec\u200b\u5728\u200b\u5305\u542b\u200b\u9009\u62e9\u5668\u200b\u7684\u200b <code>when</code> \u200b\u8bed\u53e5\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5f88\u200b\u96be\u200b\u8bfb\u61c2\u200b\u3002\u200b\u6700\u540e\u200b\u4e00\u884c\u200b\u4e2d\u200b\uff0c\u200b\u7f29\u8fdb\u200b\u5e76\u200b\u4ee5\u200b\u5192\u53f7\u200b\u5f00\u5934\u200b\u8868\u793a\u200b\u672a\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\uff08\u200b\u6765\u6e90\u4e8e\u200b Router tutorial\uff09\u200b\u8f93\u51fa\u200b\u961f\u5217\u200b\u672a\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u4ea7\u751f\u200b\u7684\u200b\u3002\u200b\u4ee5\u524d\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e3a\u200b\uff1a</p> <pre><code>io.outs.foreach { out =&gt; out.noenq() }\n</code></pre> <p>\u200b\u5b83\u200b\u521d\u59cb\u5316\u200b\u4e86\u200b\u961f\u5217\u200b\u7684\u200b\u6709\u6548\u200b\u4f4d\u200b\uff0c\u200b\u4f46\u200b\u6ca1\u6709\u200b\u521d\u59cb\u5316\u200b\u5b9e\u9645\u200b\u7684\u200b\u8f93\u51fa\u200b\u503c\u200b\u3002\u200b\u4fee\u6539\u200b\u540e\u200b\u7684\u200b\u4ee3\u7801\u200b\u662f\u200b\uff1a</p> <pre><code>io.outs.foreach { out =&gt;\n  out.bits := 0.U.asTypeOf(out.bits)\n  out.noenq()\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel-vs-scala","title":"Chisel \u200b\u7c7b\u578b\u200b vs Scala \u200b\u7c7b\u578b","text":"<p>Scala \u200b\u7f16\u8bd1\u5668\u200b\u65e0\u6cd5\u200b\u533a\u5206\u200b Chisel \u200b\u5bf9\u200b\u786c\u4ef6\u200b\u7684\u200b\u8868\u793a\u200b\uff0c\u200b\u5982\u200b <code>false.B</code>, <code>Reg(Bool())</code> \u200b\u548c\u200b\u7eaf\u200b Chisel \u200b\u7c7b\u578b\u200b\uff08\u200b\u5982\u200b <code>Bool()</code> \uff09\u3002\u200b\u5f53\u200b\u9700\u8981\u200b\u786c\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b Chisel \u200b\u7c7b\u578b\u200b\u83b7\u5f97\u200b\u8fd0\u884c\u200b\u65f6\u200b\u9519\u8bef\u200b\uff0c\u200b\u53cd\u4e4b\u4ea6\u7136\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#scala-vs-chisel-vs","title":"Scala \u200b\u7c7b\u578b\u200b vs Chisel \u200b\u7c7b\u578b\u200b vs \u200b\u786c\u4ef6\u200b\u7c7b\u578b","text":"<p>Data \u200b\u7684\u200b Scala \u200b\u7c7b\u578b\u200b\u7531\u200b Scala \u200b\u7f16\u8bd1\u5668\u200b\u8bc6\u522b\u200b\uff0c\u200b\u4f8b\u5982\u200b\u4e2d\u200b\u7684\u200b <code>Bool</code>, <code>Decoupled[UInt]</code> \u200b\u6216\u200b <code>MyBundle</code></p> <pre><code>class MyBundle(w: Int) extends Bundle {\n  val foo = UInt(w.W)\n  val bar = UInt(w.W)\n}\n</code></pre> <p>Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b <code>Data</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b Scala \u200b\u5bf9\u8c61\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u540d\u79f0\u200b\u53ca\u5176\u200b\u7c7b\u578b\u200b\uff08\u200b\u5305\u62ec\u200b\u5bbd\u5ea6\u200b\uff09\u200b\u6355\u83b7\u200b\u5b9e\u9645\u200b\u5b58\u5728\u200b\u7684\u200b\u6240\u6709\u200b\u5b57\u200b\u6bb5\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c<code>MyBundle(3)</code> \u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b Chisel \u200b\u7c7b\u578b\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5305\u542b\u200b\u5b57\u200b\u6bb5\u200b <code>foo:UInt(3.W)</code>, <code>bar:UInt(3.W)</code>\u3002</p> <p>\u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b\u662f\u200b\u6307\u200b\u4e0e\u200b\u53ef\u200b\u5408\u6210\u200b\u786c\u4ef6\u200b\u7ed1\u5b9a\u200b\u7684\u200b <code>Data</code>\u3002\u200b\u4f8b\u5982\u200b <code>false.B</code> \u200b\u6216\u200b <code>Reg(Bool())</code>\u3002\u200b\u7ed1\u5b9a\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u6bcf\u4e2a\u200b\u5b57\u6bb5\u200b\u7684\u200b\u5b9e\u9645\u200b\u65b9\u5411\u6027\u200b\uff0c\u200b\u5b83\u200b\u4e0d\u662f\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u5c5e\u6027\u200b\u3002</p> <p>\u200b\u5b57\u7b26\u200b\u662f\u200b\u4e00\u79cd\u200b <code>Data</code>\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u6587\u5b57\u200b\u503c\u200b\u91cd\u65b0\u200b\u8868\u793a\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u5305\u88c5\u200b\u5728\u200b Wire\u3001Reg \u200b\u6216\u200b IO \u200b\u4e2d\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel-vs-vs","title":"Chisel \u200b\u7c7b\u578b\u200b vs \u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b vs \u200b\u5b57\u7b26","text":"<p>\u200b\u4e0b\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u6f14\u793a\u200b\u4e86\u200b\u5177\u6709\u200b\u76f8\u540c\u200b Scala \u200b\u7c7b\u578b\u200b\uff08<code>MyBundle</code>\uff09\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5982\u4f55\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u5c5e\u6027\u200b\u3002</p> <pre><code>import chisel3.experimental.BundleLiterals._\n\nclass MyModule(gen: () =&gt; MyBundle) extends Module {\n                                                            //   Hardware   Literal\n    val xType:    MyBundle     = new MyBundle(3)            //      -          -\n    val dirXType: MyBundle     = Input(new MyBundle(3))     //      -          -\n    val xReg:     MyBundle     = Reg(new MyBundle(3))       //      x          -\n    val xIO:      MyBundle     = IO(Input(new MyBundle(3))) //      x          -\n    val xRegInit: MyBundle     = RegInit(xIO)               //      x          -\n    val xLit:     MyBundle     = xType.Lit(                 //      x          x\n      _.foo -&gt; 0.U(3.W),\n      _.bar -&gt; 0.U(3.W)\n    )\n    val y:        MyBundle = gen()                          //      ?          ?\n\n    // Need to initialize all hardware values\n    xReg := DontCare\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel-type-vs-hardware-specific-functions-and-errors","title":"Chisel Type vs Hardware \u2013 Specific Functions and Errors","text":"<p><code>.asTypeOf</code> \u200b\u5bf9\u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b\u548c\u200b Chisel \u200b\u7c7b\u578b\u200b\u90fd\u200b\u6709\u6548\u200b:</p> <pre><code>elaborate(new Module {\n  val chiselType = new MyBundle(3)\n  val hardware = Wire(new MyBundle(3))\n  hardware := DontCare\n  val a = 0.U.asTypeOf(chiselType)\n  val b = 0.U.asTypeOf(hardware)\n})\n</code></pre> <p>\u200b\u53ea\u80fd\u200b <code>:=</code> \u200b\u5230\u200b\u786c\u4ef6\u200b\uff1a</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardware = Wire(new MyBundle(3))\n  hardware := DontCare\n})\n// Not this...\nelaborate(new Module {\n  val chiselType = new MyBundle(3)\n  chiselType := DontCare\n})\n// chisel3.package$ExpectedHardwareException: data to be connected 'MyBundle' must be hardware, not a bare Chisel type. Perhaps you forgot to wrap it in Wire(_) or IO(_)?\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$21$$anonfun$apply$21$$anon$3.&lt;init&gt;(chisel-type-vs-scala-type.md:90)\n//  at repl.MdocSession$MdocApp$$anonfun$21$$anonfun$apply$21.apply(chisel-type-vs-scala-type.md:88)\n//  at repl.MdocSession$MdocApp$$anonfun$21$$anonfun$apply$21.apply(chisel-type-vs-scala-type.md:88)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u53ea\u80fd\u200b\u4ece\u200b\u786c\u4ef6\u200b <code>:=</code> \u200b\u8fde\u63a5\u200b\uff1a</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardware = IO(new MyBundle(3))\n  val moarHardware = Wire(new MyBundle(3))\n  moarHardware := DontCare\n  hardware := moarHardware\n})\n// Not this...\nelaborate(new Module {\n  val hardware = IO(new MyBundle(3))\n  val chiselType = new MyBundle(3)\n  hardware := chiselType\n})\n// chisel3.package$ExpectedHardwareException: data to be connected 'MyBundle' must be hardware, not a bare Chisel type. Perhaps you forgot to wrap it in Wire(_) or IO(_)?\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$29$$anonfun$apply$27$$anon$5.&lt;init&gt;(chisel-type-vs-scala-type.md:115)\n//  at repl.MdocSession$MdocApp$$anonfun$29$$anonfun$apply$27.apply(chisel-type-vs-scala-type.md:112)\n//  at repl.MdocSession$MdocApp$$anonfun$29$$anonfun$apply$27.apply(chisel-type-vs-scala-type.md:112)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u5fc5\u987b\u200b\u5c06\u200b\u786c\u4ef6\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>chiselTypeOf</code>\uff1a</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardware = Wire(new MyBundle(3))\n  hardware := DontCare\n  val chiselType = chiselTypeOf(hardware)\n})\n// Not this...\nelaborate(new Module {\n  val chiselType = new MyBundle(3)\n  val crash = chiselTypeOf(chiselType)\n})\n// chisel3.package$ExpectedHardwareException: 'MyBundle' must be hardware, not a bare Chisel type. Perhaps you forgot to wrap it in Wire(_) or IO(_)?\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34$$anon$7$$anonfun$39$$anonfun$apply$36.apply(chisel-type-vs-scala-type.md:138)\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34$$anon$7$$anonfun$39$$anonfun$apply$36.apply(chisel-type-vs-scala-type.md:138)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:50)\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34$$anon$7$$anonfun$39.apply(chisel-type-vs-scala-type.md:138)\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34$$anon$7$$anonfun$39.apply(chisel-type-vs-scala-type.md)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34$$anon$7.&lt;init&gt;(chisel-type-vs-scala-type.md:138)\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34.apply(chisel-type-vs-scala-type.md:136)\n//  at repl.MdocSession$MdocApp$$anonfun$37$$anonfun$apply$34.apply(chisel-type-vs-scala-type.md:136)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u5fc5\u987b\u200b\u628a\u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>*Init</code>\uff1a</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardware = Wire(new MyBundle(3))\n  hardware := DontCare\n  val moarHardware = WireInit(hardware)\n})\n// Not this...\nelaborate(new Module {\n  val crash = WireInit(new MyBundle(3))\n})\n// chisel3.package$ExpectedHardwareException: wire initializer 'MyBundle' must be hardware, not a bare Chisel type. Perhaps you forgot to wrap it in Wire(_) or IO(_)?\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40$$anon$9$$anonfun$45$$anonfun$apply$41.apply(chisel-type-vs-scala-type.md:160)\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40$$anon$9$$anonfun$45$$anonfun$apply$41.apply(chisel-type-vs-scala-type.md:160)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:50)\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40$$anon$9$$anonfun$45.apply(chisel-type-vs-scala-type.md:160)\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40$$anon$9$$anonfun$45.apply(chisel-type-vs-scala-type.md)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40$$anon$9.&lt;init&gt;(chisel-type-vs-scala-type.md:160)\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40.apply(chisel-type-vs-scala-type.md:159)\n//  at repl.MdocSession$MdocApp$$anonfun$44$$anonfun$apply$40.apply(chisel-type-vs-scala-type.md:159)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u4e0d\u80fd\u200b\u628a\u200b\u786c\u4ef6\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>Wire</code>, <code>Reg</code>, <code>IO</code>:</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardware = Wire(new MyBundle(3))\n  hardware := DontCare\n})\n// Not this...\nelaborate(new Module {\n  val hardware = Wire(new MyBundle(3))\n  val crash = Wire(hardware)\n})\n// chisel3.package$ExpectedChiselTypeException: wire type '_44_Anon.hardware: Wire[MyBundle]' must be a Chisel type, not hardware\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44$$anon$11$$anonfun$51$$anonfun$apply$47.apply(chisel-type-vs-scala-type.md:182)\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44$$anon$11$$anonfun$51$$anonfun$apply$47.apply(chisel-type-vs-scala-type.md:182)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:50)\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44$$anon$11$$anonfun$51.apply(chisel-type-vs-scala-type.md:182)\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44$$anon$11$$anonfun$51.apply(chisel-type-vs-scala-type.md)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44$$anon$11.&lt;init&gt;(chisel-type-vs-scala-type.md:182)\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44.apply(chisel-type-vs-scala-type.md:180)\n//  at repl.MdocSession$MdocApp$$anonfun$49$$anonfun$apply$44.apply(chisel-type-vs-scala-type.md:180)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p><code>.Lit</code> \u200b\u53ea\u80fd\u200b\u88ab\u200b Chisel \u200b\u7c7b\u578b\u200b\u8c03\u7528\u200b\uff1a</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardwareLit = (new MyBundle(3)).Lit(\n    _.foo -&gt; 0.U,\n    _.bar -&gt; 0.U\n  )\n})\n//Not this...\nelaborate(new Module {\n  val hardware = Wire(new MyBundle(3))\n  val crash = hardware.Lit(\n    _.foo -&gt; 0.U,\n    _.bar -&gt; 0.U\n  )\n})\n// chisel3.package$ExpectedChiselTypeException: bundle literal constructor model '_52_Anon.hardware: Wire[MyBundle]' must be a Chisel type, not hardware\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52$$anon$13$$anonfun$56$$anonfun$apply$55.apply(chisel-type-vs-scala-type.md:206)\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52$$anon$13$$anonfun$56$$anonfun$apply$55.apply(chisel-type-vs-scala-type.md:206)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:50)\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52$$anon$13$$anonfun$56.apply(chisel-type-vs-scala-type.md:206)\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52$$anon$13$$anonfun$56.apply(chisel-type-vs-scala-type.md)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52$$anon$13.&lt;init&gt;(chisel-type-vs-scala-type.md:206)\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52.apply(chisel-type-vs-scala-type.md:204)\n//  at repl.MdocSession$MdocApp$$anonfun$54$$anonfun$apply$52.apply(chisel-type-vs-scala-type.md:204)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u5728\u200b Bundle \u200b\u5b9a\u4e49\u200b\u4e2d\u200b\u53ea\u80fd\u200b\u4f7f\u7528\u200b Chisel \u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>// Do this...\nelaborate(new Module {\n  val hardware = Wire(new Bundle {\n    val nested = new MyBundle(3)\n  })\n  hardware := DontCare\n})\n// Not this...\nelaborate(new Module {\n  val crash = Wire(new Bundle {\n    val nested = Wire(new MyBundle(3))\n  })\n})\n// chisel3.package$ExpectedChiselTypeException: Bundle: AnonymousBundle contains hardware fields: nested: _60_Anon.crash_nested: Wire[MyBundle]\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60$$anon$16$$anonfun$62$$anonfun$apply$61.apply(chisel-type-vs-scala-type.md:232)\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60$$anon$16$$anonfun$62$$anonfun$apply$61.apply(chisel-type-vs-scala-type.md:232)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:50)\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60$$anon$16$$anonfun$62.apply(chisel-type-vs-scala-type.md:232)\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60$$anon$16$$anonfun$62.apply(chisel-type-vs-scala-type.md)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60$$anon$16.&lt;init&gt;(chisel-type-vs-scala-type.md:232)\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60.apply(chisel-type-vs-scala-type.md:231)\n//  at repl.MdocSession$MdocApp$$anonfun$61$$anonfun$apply$60.apply(chisel-type-vs-scala-type.md:231)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u53ea\u80fd\u200b\u5728\u200b\u786c\u4ef6\u200b\u4e0a\u200b\u8c03\u7528\u200b <code>directionOf</code>\uff1a</p> <pre><code>import chisel3.reflect.DataMirror\n\nclass Child extends Module{\n  val hardware = IO(new MyBundle(3))\n  hardware := DontCare\n  val chiselType = new MyBundle(3)\n}\n// Do this...\nelaborate(new Module {\n  val child = Module(new Child())\n  child.hardware := DontCare\n  val direction = DataMirror.directionOf(child.hardware)\n})\n// Not this...\nelaborate(new Module {\nval child = Module(new Child())\n  child.hardware := DontCare\n  val direction = DataMirror.directionOf(child.chiselType)\n})\n// chisel3.package$ExpectedHardwareException: node requested directionality on 'MyBundle' must be hardware, not a bare Chisel type. Perhaps you forgot to wrap it in Wire(_) or IO(_)?\n//  at ... ()\n//  at repl.MdocSession$MdocApp$$anonfun$70$$anonfun$apply$68$$anon$19.&lt;init&gt;(chisel-type-vs-scala-type.md:271)\n//  at repl.MdocSession$MdocApp$$anonfun$70$$anonfun$apply$68.apply(chisel-type-vs-scala-type.md:268)\n//  at repl.MdocSession$MdocApp$$anonfun$70$$anonfun$apply$68.apply(chisel-type-vs-scala-type.md:268)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u786c\u4ef6\u200b\u7c7b\u578b\u200b\u548c\u200b Chisel \u200b\u7c7b\u578b\u200b\u4e0a\u200b\u8c03\u7528\u200b <code>specifiedDirectionOf</code>\uff1a</p> <pre><code>elaborate(new Module {\n  val child = Module(new Child())\n  child.hardware := DontCare\n  val direction0 = DataMirror.specifiedDirectionOf(child.hardware)\n  val direction1 = DataMirror.specifiedDirectionOf(child.chiselType)\n})\n</code></pre> <p><code>.asInstanceOf</code> vs <code>.asTypeOf</code> vs <code>chiselTypeOf</code> <code>.asInstanceOf</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b Scala \u200b\u8fd0\u884c\u200b\u65f6\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b, \u200b\u901a\u5e38\u200b\u7528\u6765\u200b\u544a\u8bc9\u200b\u7f16\u8bd1\u5668\u200b\u4f60\u200b\u6709\u200b\u6bd4\u200b\u4ed6\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u4fe1\u606f\u200b\u6765\u200b\u8f6c\u6362\u200b Scala \u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>class ScalaCastingModule(gen: () =&gt; Bundle) extends Module {\n  val io = IO(Output(gen().asInstanceOf[MyBundle]))\n  io.foo := 0.U\n}\n</code></pre> <p>\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u786e\u5b9e\u200b\u62e5\u6709\u200b\u6bd4\u200b\u7f16\u8bd1\u5668\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u4fe1\u606f\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u662f\u200b\u6709\u6548\u200b\u7684\u200b\uff1a</p> <pre><code>elaborate(new ScalaCastingModule( () =&gt; new MyBundle(3)))\n</code></pre> <p>\u200b\u4f46\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u9519\u200b\u4e86\u200b\uff0c\u200b\u4f1a\u200b\u5f97\u5230\u200b Scala \u200b\u7684\u200b\u8fd0\u884c\u200b\u65f6\u200b\u5f02\u5e38\u200b\uff1a</p> <pre><code>class NotMyBundle extends Bundle {val baz = Bool()}\nelaborate(new ScalaCastingModule(() =&gt; new NotMyBundle()))\n// java.lang.ClassCastException: class repl.MdocSession$MdocApp$$anonfun$79$NotMyBundle$1 cannot be cast to class repl.MdocSession$MdocApp$MyBundle (repl.MdocSession$MdocApp$$anonfun$79$NotMyBundle$1 and repl.MdocSession$MdocApp$MyBundle are in unnamed module of loader scala.reflect.internal.util.AbstractFileClassLoader @5aa4e5fa)\n//  at ... ()\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76$$anonfun$apply$71$$anonfun$apply$72$$anonfun$apply$73.apply(chisel-type-vs-scala-type.md:293)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76$$anonfun$apply$71$$anonfun$apply$72$$anonfun$apply$73.apply(chisel-type-vs-scala-type.md:293)\n//  at chisel3.SpecifiedDirection$.specifiedDirection(Data.scala:63)\n//  at chisel3.Output$.apply(Data.scala:266)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76$$anonfun$apply$71$$anonfun$apply$72.apply(chisel-type-vs-scala-type.md:293)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76$$anonfun$apply$71$$anonfun$apply$72.apply(chisel-type-vs-scala-type.md:293)\n//  at chisel3.IO$.apply(IO.scala:27)\n//  at chisel3.experimental.BaseModule.IO(Module.scala:620)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76$$anonfun$apply$71.apply(chisel-type-vs-scala-type.md:293)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76$$anonfun$apply$71.apply(chisel-type-vs-scala-type.md:293)\n//  at chisel3.experimental.prefix$.apply(prefix.scala:50)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76.apply(chisel-type-vs-scala-type.md:293)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule$$anonfun$76.apply(chisel-type-vs-scala-type.md)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp$ScalaCastingModule.&lt;init&gt;(chisel-type-vs-scala-type.md:293)\n//  at repl.MdocSession$MdocApp$$anonfun$79$$anonfun$apply$75.apply(chisel-type-vs-scala-type.md:309)\n//  at repl.MdocSession$MdocApp$$anonfun$79$$anonfun$apply$75.apply(chisel-type-vs-scala-type.md:309)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p><code>.asTypeOf</code> \u200b\u662f\u4ece\u200b\u4e00\u4e2a\u200b <code>Data</code> \u200b\u5b50\u7c7b\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b50\u7c7b\u200b\u7684\u200b\u8f6c\u6362\u200b\u3002\u200b\u5b83\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5c06\u200b\u6570\u636e\u200b\u5206\u914d\u200b\u7ed9\u200b\u5168\u96f6\u200b\uff0c\u200b\u5982\u200b\u8fd9\u200b\u4e00\u8282\u200b cookbook \u200b\u4e2d\u200b\u6240\u8ff0\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5c06\u200b\u4e00\u79cd\u200b Chisel \u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e3a\u200b\u53e6\u200b\u4e00\u79cd\u200b\uff1a</p> <pre><code>class SimilarToMyBundle(w: Int) extends Bundle{\n  val foobar = UInt((2*w).W)\n}\n\nChiselStage.emitSystemVerilog(new Module {\n  val in = IO(Input(new MyBundle(3)))\n  val out = IO(Output(new SimilarToMyBundle(3)))\n\n  out := in.asTypeOf(out)\n})\n// res12: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module _82_Anon( // &lt;stdin&gt;:3:10\n//   input        clock,    // &lt;stdin&gt;:4:11\n//                reset,    // &lt;stdin&gt;:5:11\n//   input  [2:0] in_foo,   // chisel-type-vs-scala-type.md:324:14\n//                in_bar,   // chisel-type-vs-scala-type.md:324:14\n//   output [5:0] out_foobar    // chisel-type-vs-scala-type.md:325:15\n// );\n// \n//   assign out_foobar = {in_foo, in_bar};  // &lt;stdin&gt;:3:10, chisel-type-vs-scala-type.md:327:21\n// endmodule\n// \n// \"\"\"\n</code></pre> <p>\u200b\u4e0e\u200b <code>asInstanceOf</code> \u200b\u548c\u200b <code>asTypeOf</code> \u200b\u4e0d\u540c\u200b\uff0c<code>chiselTypeOf</code> \u200b\u4e0d\u662f\u200b\u5f3a\u5236\u200b\u8f6c\u6362\u200b\u64cd\u4f5c\u200b\u3002\u200b\u5b83\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b Scala \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5982\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u6240\u793a\u200b\uff0c\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u53ef\u4ee5\u200b\u7528\u6765\u200b\u521b\u5efa\u200b\u66f4\u200b\u591a\u200b\u7684\u200b Chisel \u200b\u7c7b\u578b\u200b\u548c\u200b\u4e0e\u200b\u73b0\u6709\u200b\u786c\u4ef6\u200b\u5177\u6709\u200b\u76f8\u540c\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u786c\u4ef6\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#connectable-operators","title":"\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08Connectable Operators\uff09","text":""},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_25","title":"\u672f\u8bed","text":"<ul> <li>\u201cChisel type\u201d - \u200b\u4e00\u79cd\u200b\u6ca1\u6709\u200b\u7ed1\u5b9a\u200b\u5728\u200b\u786c\u4ef6\u200b\u4e0a\u200b</li> </ul> <pre><code>Data\n</code></pre> <p>\uff0c\u200b\u5373\u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u7ec4\u4ef6\u200b\u3002</p> <ul> <li> <p>\u200b\u4f8b\u5982\u200b\uff0c<code>UInt(3.W)</code>, <code>new Bundle(...)</code>, <code>Vec(3, SInt(2.W))</code> \u200b\u90fd\u200b\u662f\u200b Chisel type</p> </li> <li> <p><code>Aggregate</code> - \u200b\u4e00\u79cd\u200b\u5305\u542b\u200b\u5176\u5b83\u200b Chisel type \u200b\u6216\u8005\u200b\u7ec4\u4ef6\u200b\u7684\u200b Chisel type \u200b\u6216\u8005\u200b\u7ec4\u4ef6\u200b\u3002\uff08\u200b\u5373\u200b <code>Vec</code>, <code>Record</code>, \u200b\u6216\u8005\u200b <code>Bundle</code>\uff09</p> </li> <li> <p><code>Element</code> - \u200b\u4e00\u79cd\u200b\u4e0d\u200b\u5305\u542b\u200b\u5176\u5b83\u200b Chisel type \u200b\u6216\u8005\u200b compnoent \u200b\u7684\u200b Chisel type \u200b\u6216\u8005\u200b\u7ec4\u4ef6\u200b\u3002\uff08\u200b\u5373\u200b <code>UInt</code>, <code>SInt</code>, <code>Clock</code>, <code>Bool</code> \u200b\u7b49\u200b\uff09</p> </li> <li> <p>\u201c\u200b\u7ec4\u4ef6\u200b\u201d - \u200b\u4e00\u79cd\u200b\u7ed1\u5b9a\u200b\u5728\u200b\u786c\u4ef6\u200b\u4e0a\u200b\u7684\u200b<code>Data\uff08IO,Reg,Wire</code>\u200b\u7b49\u200b\uff09</p> </li> <li> <p>\u200b\u4f8b\u5982\u200b\uff0c<code>Wire(UInt(3.W))</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b Chisel type \u200b\u662f\u200b UInt(3.W)</p> </li> <li> <p>\u201c\u200b\u6210\u5458\u200b\u201d - \u200b\u4e00\u79cd\u200b Chisel type \u200b\u6216\u8005\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u6216\u8005\u200b\u4ed6\u4eec\u200b\u7684\u200b\u4efb\u4f55\u200b\u5b50\u96c6\u200b\uff08\u200b\u53ef\u4ee5\u200b\u662f\u200b</p> </li> </ul> <pre><code>Aggregate\n</code></pre> <p>\u200b\u6216\u200b</p> <pre><code>Element\n</code></pre> <p>\uff09</p> <ul> <li>\u200b\u4f8b\u5982\u200b <code>Vec(3, UInt(2.W))(0)</code> \u200b\u662f\u200b\u7236\u9879\u200b Chisel type \u200b\u7684\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b</li> <li>\u200b\u4f8b\u5982\u200b <code>Wire(Vec(3, UInt(2.W)))(0)</code> \u200b\u662f\u200b\u7236\u9879\u200b <code>Wire</code> \u200b\u7ec4\u4ef6\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b</li> <li> <p>\u200b\u4f8b\u5982\u200b <code>IO(Decoupled(Bool)).ready</code> \u200b\u662f\u200b\u7236\u9879\u200b <code>IO</code> \u200b\u7ec4\u4ef6\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b</p> </li> <li> <p>\u201crelative alignment\u201d - \u200b\u540c\u4e00\u4e2a\u200b\u7ec4\u4ef6\u200b\u6216\u8005\u200b Chisel type \u200b\u7684\u200b\u4e24\u4e2a\u200b\u6210\u5458\u200b\u662f\u5426\u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b</p> </li> <li> <p>\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b\u7ae0\u8282\u200b\u4e2d\u200b\u8be6\u7ec6\u200b\u5b9a\u4e49\u200b</p> </li> <li> <p>\u201cstructural type check\u201d - \u200b\u5982\u679c\u200b</p> </li> </ul> <pre><code>A\n</code></pre> <p>\u200b\u548c\u200b</p> <pre><code>B\n</code></pre> <p>\u200b\u6709\u200b\u5339\u914d\u200b\u7684\u200b\u7ed1\u5b9a\u200b\u540d\u79f0\u200b\u548c\u200b\u7c7b\u578b\u200b\uff08</p> <pre><code>Record\n</code></pre> <p>\u200b\u548c\u200b</p> <pre><code>Vector\n</code></pre> <p>\u200b\u548c\u200b</p> <pre><code>Element\n</code></pre> <p>\uff09\uff0c\u200b\u5411\u91cf\u200b\u5927\u5c0f\u200b\uff0c</p> <pre><code>Element\n</code></pre> <p>\u200b\u7c7b\u578b\u200b\uff08UInt/SInt/Bool/Clock \u200b\u7b49\u200b\uff09\u3002Chisel type</p> <pre><code>A\n</code></pre> <p>\u200b\u548c\u200b Chisel type</p> <pre><code>B\n</code></pre> <p>\u200b\u5728\u7ed3\u6784\u4e0a\u200b\u7b49\u4ef7\u200b\u3002</p> <ul> <li> <p>\u200b\u5ffd\u7565\u200b relative alignment</p> </li> <li> <p>\u201calignment type check\u201d - \u200b\u5982\u679c\u200b <code>A</code> \u200b\u4e0e\u200b <code>A</code> \u200b\u7684\u200b relative alignment \u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u90fd\u200b\u4e0e\u200b <code>B</code> \u200b\u7684\u200b relative alignment \u200b\u7684\u200b\u7ed3\u6784\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6210\u5458\u200b\u76f8\u540c\u200b\uff0c\u200b\u5219\u200b Chisel type <code>A</code> \u200b\u548c\u200b\u53e6\u200b\u4e00\u4e2a\u200b Chisel type <code>B</code> \u200b\u5339\u914d\u200b\u5bf9\u9f50\u200b\u3002</p> </li> </ul>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_26","title":"\u6982\u8ff0","text":"<p>\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u662f\u200b\u8fde\u63a5\u200b Chisel \u200b\u786c\u4ef6\u200b\u7ec4\u4ef6\u200b\u5230\u200b\u53e6\u200b\u4e00\u4e2a\u200b Chisel \u200b\u786c\u4ef6\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u6807\u51c6\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u6240\u6709\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u90fd\u200b\u9700\u8981\u200b\u4e24\u4e2a\u200b\u786c\u4ef6\u200b\u7ec4\u4ef6\u200b\uff08\u200b\u751f\u4ea7\u8005\u200b\u548c\u200b\u6d88\u8d39\u8005\u200b\uff09\u200b\u7ed3\u6784\u200b\u7c7b\u578b\u200b\u7b49\u4ef7\u200b\u3002</p> <p>\u200b\u7ed3\u6784\u200b\u7c7b\u578b\u200b\u7b49\u6548\u200b\u89c4\u5219\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4f8b\u5916\u200b\u662f\u200b\u4f7f\u7528\u200b <code>connectable</code> \u200b\u673a\u5236\u200b\uff0c\u200b\u5728\u200b\u672c\u200b\u6587\u6863\u200b\u672b\u5c3e\u200b\u7684\u200b\u672c\u8282\u200b\u4e2d\u200b\u5bf9\u6b64\u200b\u8fdb\u884c\u200b\u4e86\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\u3002</p> <p><code>Aggregate</code>\uff08<code>Record</code>, <code>Vec</code>, <code>Bundle</code>\uff09Chisel \u200b\u7c7b\u578b\u200b\u53ef\u4ee5\u200b\u5305\u62ec\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u5f7c\u6b64\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5728\u200b\u4e24\u4e2a\u200b Chisel \u200b\u7ec4\u4ef6\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u8bb8\u591a\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u8fde\u63a5\u200b\u884c\u4e3a\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b Chisel \u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff1a</p> <ul> <li><code>c := p</code> (\u200b\u5355\u5411\u200b): \u200b\u5c06\u200b p \u200b\u7684\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u5230\u200b c; \u200b\u9700\u8981\u200b c \u200b\u548c\u200b p \u200b\u90fd\u200b\u6ca1\u6709\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b</li> <li><code>c :#= p</code> (\u200b\u5f3a\u5236\u200b \u200b\u5355\u5411\u200b): \u200b\u5c06\u200b p \u200b\u7684\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u5230\u200b c; \u200b\u5ffd\u7565\u200b\u5bf9\u9f50\u200b</li> <li><code>c :&lt;= p</code> (\u200b\u5bf9\u9f50\u200b): \u200b\u5c06\u200b p \u200b\u7684\u200b\u6240\u6709\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\uff08\u200b\u975e\u200b\u7ffb\u8f6c\u200b\u7684\u200b\uff09\u200b\u8fde\u63a5\u200b\u5230\u200b c</li> <li><code>c :&gt;= p</code> (\u200b\u7ffb\u8f6c\u200b\u65b9\u5411\u200b): \u200b\u5c06\u200b p \u200b\u7684\u200b\u6240\u6709\u200b\u975e\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u5230\u200b c</li> <li><code>c :&lt;&gt;= p</code> (\u200b\u53cc\u5411\u200b\u64cd\u4f5c\u200b): \u200b\u4ece\u200b p \u200b\u8fde\u63a5\u200b c \u200b\u7684\u200b\u6240\u6709\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b; \u200b\u4ece\u200b c \u200b\u8fde\u63a5\u200b\u6240\u6709\u200b p \u200b\u7684\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u80fd\u200b\u770b\u8d77\u6765\u200b\u662f\u200b\u7b26\u53f7\u200b\u7684\u200b\u968f\u673a\u200b\u96c6\u5408\u200b\uff1b\u200b\u7136\u800c\u200b\uff0c\u200b\u64cd\u4f5c\u7b26\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5b57\u7b26\u200b\u662f\u200b\u4e00\u81f4\u200b\u7684\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u8bed\u4e49\u200b\u63cf\u8ff0\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li> <p><code>:</code> \u200b\u8868\u793a\u200b\u6d88\u8d39\u8005\u200b\uff0c\u200b\u6216\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u5de6\u4fa7\u200b\u3002</p> </li> <li> <p><code>=</code></p> </li> </ul> <p>\u200b\u8868\u793a\u200b\u751f\u4ea7\u8005\u200b\uff0c\u200b\u6216\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u53f3\u4fa7\u200b\u3002</p> <ul> <li> <p>\u200b\u56e0\u6b64\u200b, <code>c := p</code> \u200b\u8fde\u63a5\u200b\u6d88\u8d39\u8005\u200b\uff08c\uff09\u200b\u548c\u200b\u751f\u4ea7\u8005\u200b\uff08p\uff09</p> </li> <li> <p><code>&lt;</code></p> </li> </ul> <p>\u200b\u8868\u793a\u200b\u67d0\u4e9b\u200b\u6210\u5458\u200b\u5c06\u200b\u9a71\u52a8\u200b\u751f\u4ea7\u8005\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\uff0c\u200b\u5373\u200b\u4ece\u53f3\u5230\u5de6\u200b\u3002</p> <ul> <li> <p>\u200b\u56e0\u6b64\u200b, <code>c :&lt;= p</code> \u200b\u9a71\u52a8\u200b\u751f\u4ea7\u8005\u200b\uff08p\uff09\u200b\u7684\u200b\u6210\u5458\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\uff08c\uff09\u200b\u7684\u200b\u6210\u5458\u200b\u3002</p> </li> <li> <p>```</p> <p>```</p> </li> </ul> <p>\u200b\u8868\u793a\u200b\u4e00\u4e9b\u200b\u4fe1\u53f7\u200b\u5c06\u200b\u9a71\u52a8\u200b\u6d88\u8d39\u8005\u200b\u5230\u200b\u751f\u4ea7\u8005\u200b\uff0c\u200b\u5373\u200b\u4ece\u5de6\u5230\u53f3\u200b\u3002</p> <ul> <li>\u200b\u56e0\u6b64\u200b, <code>c :&gt;= p</code> \u200b\u9a71\u52a8\u200b\u6d88\u8d39\u8005\u200b\uff08c\uff09\u200b\u7684\u200b\u6210\u5458\u200b\u5230\u200b\u751f\u4ea7\u8005\u200b\uff08p\uff09\u200b\u7684\u200b\u6210\u5458\u200b\u3002</li> <li> <p>\u200b\u56e0\u6b64\u200b, <code>c :&lt;&gt;= p</code> p \u200b\u5230\u200b c \u200b\u7684\u200b\u6210\u5458\u200b\u548c\u200b c \u200b\u5230\u200b p \u200b\u7684\u200b\u6210\u5458\u200b\u90fd\u200b\u9a71\u52a8\u200b</p> </li> <li> <p><code>#</code></p> </li> </ul> <p>\u200b\u8868\u793a\u200b\u5ffd\u7565\u200b\u6210\u5458\u200b\u5bf9\u9f50\u200b\u5e76\u200b\u9a71\u52a8\u200b\u751f\u4ea7\u8005\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\u3002</p> <ul> <li>\u200b\u56e0\u6b64\u200b, <code>c :#= p</code> \u200b\u5c06\u200b\u6210\u5458\u200b\u4ece\u200b p \u200b\u9a71\u52a8\u200b\u5230\u200b c\uff0c\u200b\u5ffd\u7565\u200b\u65b9\u5411\u200b</li> </ul> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u6b64\u5916\u200b\uff0c\u200b\u4ee5\u200b = \u200b\u7ed3\u5c3e\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u5177\u6709\u200b\u8d4b\u503c\u200b\u4f18\u5148\u7ea7\u200b\uff0c\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b x :&lt;&gt;= y + z \u200b\u5c06\u200b\u8f6c\u6362\u200b\u4e3a\u200b x :&lt;&gt;= (y + z)\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b (x :&lt;&gt;= y ) + z\u3002 &lt;&gt; \u200b\u64cd\u4f5c\u7b26\u200b\u5e76\u975e\u5982\u6b64\u200b\uff0c\u200b\u8fd9\u200b\u5bf9\u200b\u7528\u6237\u200b\u6765\u8bf4\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u75db\u70b9\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_27","title":"\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u7ffb\u8f6c\u200b\u4e0e\u200b\u5bf9\u9f50","text":"<p>\u200b\u6210\u5458\u200b\u7684\u200b\u5bf9\u9f50\u200b\u662f\u200b\u4e00\u4e2a\u200b\u76f8\u5bf9\u200b\u5c5e\u6027\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u540c\u4e00\u200b\u7ec4\u4ef6\u200b\u6216\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b\u3002 \u200b\u56e0\u6b64\u200b\uff0c\u200b\u5fc5\u987b\u200b\u59cb\u7ec8\u200b\u8bf4\u660e\u200b\u67d0\u4e2a\u200b\u6210\u5458\u200b\u662f\u5426\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u8be5\u200b\u7c7b\u578b\u200b\u7684\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\uff08\u200b\u7236\u7ea7\u200b\u3001\u200b\u5144\u5f1f\u200b\u7ea7\u200b\u3001\u200b\u5b50\u7ea7\u200b\u7b49\u200b\uff09\u200b\u7ffb\u8f6c\u200b/\u200b\u5bf9\u9f50\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u975e\u200b\u5d4c\u5957\u200b bundle <code>Parent</code> \u200b\u7684\u200b\u793a\u4f8b\u200b\u6765\u200b\u8bf4\u660e\u200b <code>p</code> \u200b\u6210\u5458\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6240\u6709\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u3002</p> <pre><code>import chisel3._\nclass Parent extends Bundle {\n  val alignedChild = UInt(32.W)\n  val flippedChild = Flipped(UInt(32.W))\n}\nclass MyModule0 extends Module {\n  val p = Wire(new Parent)\n}\n</code></pre> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u662f\u200b\u4e0e\u200b\u4e0e\u200b\u4ed6\u4eec\u200b\u81ea\u5df1\u200b\u5bf9\u9f50\u200b\u7684\u200b\uff1a</p> <ul> <li><code>p</code> \u200b\u548c\u200b w.r.t <code>p</code> \u200b\u5bf9\u9f50\u200b</li> <li><code>p.alignedChild</code> is aligned w.r.t <code>p.alignedChild</code></li> <li><code>p.flippedChild</code> is aligned w.r.t <code>p.flippedChild</code></li> </ul> <p>\u200b\u63a5\u4e0b\u6765\u200b\uff0c\u200b\u6211\u4eec\u200b\u5217\u51fa\u200b\u6240\u6709\u200b\u7684\u200b\u7236\u200b/\u200b\u5b50\u200b\u5173\u7cfb\u200b\u3002\u200b\u56e0\u4e3a\u200b <code>flippedChild</code> \u200b\u662f\u200b\u7ffb\u8f6c\u200b\u7684\u200b\uff0c\u200b\u5b83\u200b\u6539\u53d8\u200b\u4e86\u200b\u5b83\u200b\u76f8\u5bf9\u200b\u4e8e\u200b <code>Parent</code> \u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u3002</p> <ul> <li><code>p</code> is aligned w.r.t <code>p.alignedChild</code></li> <li><code>p</code> is flipped w.r.t <code>p.flippedChild</code></li> </ul> <p>\u200b\u6700\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5217\u51fa\u200b\u6240\u6709\u200b\u7684\u200b\u540c\u7ea7\u200b\u5173\u7cfb\u200b\uff1a</p> <ul> <li><code>p.alignedChild</code> is flipped w.r.t <code>p.flippedChild</code></li> </ul> <p>\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u4f8b\u5b50\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5d4c\u5957\u200b\u7684\u200b <code>GrandParent</code> bundle\uff0c\u200b\u5b83\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5bf9\u9f50\u200b\u7684\u200b <code>Parent</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b\u7ffb\u8f6c\u200b\u7684\u200b <code>Parent</code>\u3002</p> <pre><code>import chisel3._\nclass GrandParent extends Bundle {\n  val alignedParent = new Parent\n  val flippedParent = Flipped(new Parent)\n}\nclass MyModule1 extends Module {\n  val g = Wire(new GrandParent)\n}\n</code></pre> <p>\u200b\u8003\u8651\u200b\u4e0b\u9762\u200b\u7684\u200b\u7956\u7236\u200b\u4e0e\u200b\u5b59\u8f88\u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u3002\u200b\u5947\u200b\u6570\u6b21\u200b\u7ffb\u8f6c\u200b\u8868\u793a\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u5173\u7cfb\u200b\uff1b\u200b\u5076\u6570\u200b\u6b21\u200b\u7ffb\u8f6c\u200b\u8868\u793a\u200b\u5bf9\u9f50\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002</p> <ul> <li><code>g</code> \u200b\u4e0e\u200b w.r.t <code>g.flippedParent.flippedChild</code> \u200b\u5bf9\u9f50\u200b</li> <li><code>g</code> \u200b\u4e0e\u200b w.r.t <code>g.alignedParent.alignedChild</code> \u200b\u5bf9\u9f50\u200b</li> <li><code>g</code> \u200b\u4e0e\u200b w.r.t <code>g.flippedParent.alignedChild</code> \u200b\u7ffb\u8f6c\u200b</li> <li><code>g</code> \u200b\u4e0e\u200b w.r.t <code>g.alignedParent.flippedChild</code> \u200b\u7ffb\u8f6c\u200b</li> </ul> <p>\u200b\u8003\u8651\u200b\u4e0b\u9762\u200b\u4ece\u200b <code>g.alignedParent</code> \u200b\u548c\u200b <code>g.flippedParent</code> \u200b\u5f00\u59cb\u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u3002\u200b\u6ce8\u610f\u200b\u65e0\u8bba\u200b <code>g.alignedParent</code> \u200b\u76f8\u5bf9\u200b\u4e8e\u200b <code>g</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b\u7684\u200b\uff0c\u200b\u5bf9\u4e8e\u200b <code>g.alignedParent</code> \u200b\u548c\u200b <code>g.alignedParent.alignedChild</code> \u200b\u4e4b\u95f4\u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u6ca1\u6709\u200b\u5f71\u54cd\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u4e2d\u200b\u5bf9\u9f50\u200b\u662f\u200b\u53ea\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u4e24\u4e2a\u200b\u6210\u5458\u200b\u7684\u200b\uff01\uff1a</p> <ul> <li><code>g.alignedParent</code> is aligned w.r.t. <code>g.alignedParent.alignedChild</code></li> <li><code>g.flippedParent</code> is aligned w.r.t. <code>g.flippedParent.alignedChild</code></li> <li><code>g.alignedParent</code> is flipped w.r.t. <code>g.alignedParent.flippedChild</code></li> <li><code>g.flippedParent</code> is flipped w.r.t. <code>g.flippedParent.flippedChild</code></li> </ul> <p>\u200b\u603b\u4e4b\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u6784\u4ef6\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u786c\u4ef6\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6784\u4ef6\u200b\u5bf9\u9f50\u200b\u6216\u200b\u7ffb\u8f6c\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u6d88\u8d39\u8005\u200b/\u200b\u751f\u4ea7\u8005\u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b\u786e\u5b9a\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u884c\u4e3a\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u552f\u4e00\u200b\u4fe1\u606f\u200b\u3002\u200b\u6d88\u8d39\u8005\u200b/\u200b\u751f\u4ea7\u8005\u200b\u662f\u5426\u662f\u200b\u4e00\u4e2a\u200b\u66f4\u5927\u200b\u7684\u200b bundle \u200b\u7684\u200b\u6210\u5458\u200b\u662f\u200b\u65e0\u5173\u7d27\u8981\u200b\u7684\u200b\uff1b\u200b\u4f60\u200b\u53ea\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\u6d88\u8d39\u8005\u200b/\u200b\u751f\u4ea7\u8005\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_28","title":"\u8f93\u5165\u200b/\u200b\u8f93\u51fa","text":"<p><code>Input(gen)/Output(gen)</code> \u200b\u662f\u200b\u5f3a\u5236\u200b\u64cd\u4f5c\u7b26\u200b\u3002\u200b\u4ed6\u4eec\u200b\u6267\u884c\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\uff1a\uff081\uff09\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4ece\u200b\u6240\u6709\u200b\u5b50\u200b\u7c7b\u578b\u200b\u9012\u5f52\u200b\u5220\u9664\u200b\u6240\u6709\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u65b0\u200b\u7684\u200b Chisel type\uff08\u200b\u4ecd\u7136\u200b\u7ed3\u6784\u200b\u7b49\u4ef7\u200b\u4f46\u200b\u5bf9\u9f50\u200b\u7c7b\u578b\u200b\u4e0d\u518d\u200b\u7b49\u4ef7\u200b\uff09\u3002\uff082\uff09\u200b\u5982\u679c\u200b\u662f\u200b <code>Input</code> \u200b\u5c31\u200b\u4f7f\u7528\u200b <code>Flipped</code>\uff0c \u200b\u5982\u679c\u200b <code>Output</code>\uff0c\u200b\u5219\u200b\u4fdd\u6301\u200b\u5bf9\u9f50\u200b\uff08\u200b\u4e0d\u200b\u6267\u884c\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u200b\uff09\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5982\u679c\u200b\u6211\u4eec\u200b\u60f3\u8c61\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b <code>cloneHiselTypeButStripAllFlips</code> \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u90a3\u4e48\u200b <code>Input(gen)</code>\u200b\u5728\u7ed3\u6784\u4e0a\u200b\u548c\u200b\u5bf9\u9f50\u200b\u7c7b\u578b\u200b\u7b49\u6548\u4e8e\u200b <code>Flipped(cloneHisel TypeButStrip AllFlips(gen))</code>\u3002</p> <p>\u200b\u6ce8\u610f\u200b\u5982\u679c\u200b <code>gen</code> \u200b\u662f\u200b non-aggregate \u200b\u7684\u200b\uff0c\u200b\u5219\u200b <code>Input(nonAggregateGen)</code> \u200b\u548c\u200b <code>Flipped(nonAggregateGen)</code>\u200b\u662f\u200b\u7b49\u6548\u200b\u7684\u200b\u3002</p> <p>Future work will refactor how these primitives are exposed to the user to make Chisel\u2019s type system more intuitive. See [https://github.com/chipsalliance/chisel3/issues/2643].</p> <p>\u200b\u4e86\u89e3\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u5185\u5bb9\u200b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u548c\u200b\u6210\u5458\u200b\u7684\u200b\u8be6\u7ec6\u200b\u76f8\u5bf9\u200b\u5bf9\u9f50\u200b\uff1a</p> <p>\u200b\u9996\u5148\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u548c\u200b <code>Parent</code> \u200b\u76f8\u4f3c\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4f46\u662f\u200b\u7528\u200b <code>Input/Output</code> \u200b\u4ee3\u66ff\u200b <code>Flipped</code>\u3002\u200b\u56e0\u4e3a\u200b <code>alignedChild</code> \u200b\u548c\u200b <code>flippedChild</code> \u200b\u662f\u200b non-aggregates \u200b\u7684\u200b\uff0c<code>Input</code> \u200b\u57fa\u672c\u4e0a\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b <code>Flipped</code>\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u9f50\u200b\u548c\u200b\u4e4b\u524d\u200b\u7684\u200b <code>Parent</code> \u200b\u793a\u4f8b\u200b\u76f8\u6bd4\u200b\u6ca1\u6709\u200b\u53d8\u5316\u200b\u3002</p> <pre><code>import chisel3._\nclass ParentWithOutputInput extends Bundle {\n  val alignedCoerced = Output(UInt(32.W)) // Equivalent to just UInt(32.W)\n  val flippedCoerced = Input(UInt(32.W))  // Equivalent to Flipped(UInt(32.W))\n}\nclass MyModule2 extends Module {\n  val p = Wire(new ParentWithOutputInput)\n}\n</code></pre> <p>\u200b\u5b83\u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u548c\u200b\u4e4b\u524d\u200b\u7684\u200b <code>Parent</code> \u200b\u793a\u4f8b\u200b\u76f8\u540c\u200b\uff1a</p> <ul> <li><code>p</code> \u200b\u548c\u200b w.r.t <code>p</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b</li> <li><code>p.alignedCoerced</code> \u200b\u548c\u200b w.r.t <code>p.alignedCoerced</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b</li> <li><code>p.flippedCoerced</code> \u200b\u548c\u200b w.r.t <code>p.flippedCoerced</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b</li> <li><code>p</code> \u200b\u548c\u200b w.r.t <code>p.alignedCoerced</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b</li> <li><code>p</code> \u200b\u548c\u200b w.r.t <code>p.flippedCoerced</code> \u200b\u662f\u200b\u7ffb\u8f6c\u200b\u7684\u200b</li> <li><code>p.alignedCoerced</code> \u200b\u548c\u200b w.r.t <code>p.flippedCoerced</code> \u200b\u662f\u200b\u7ffb\u8f6c\u200b\u7684\u200b</li> </ul> <p>\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u793a\u4f8b\u200b\u6709\u200b\u5d4c\u5957\u200b\u7684\u200b GrandParent bundle\uff0c\u200b\u5b83\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u4e86\u200b\u4e00\u4e2a\u200b <code>Output</code> <code>ParentWithOutputInput</code> \u200b\u548c\u200b\u4e00\u4e2a\u200b <code>Input</code> <code>ParentWithOutputInput</code>\u3002</p> <pre><code>import chisel3._\nclass GrandParentWithOutputInput extends Bundle {\n  val alignedCoerced = Output(new ParentWithOutputInput)\n  val flippedCoerced = Input(new ParentWithOutputInput)\n}\nclass MyModule3 extends Module {\n  val g = Wire(new GrandParentWithOutputInput)\n}\n</code></pre> <p>\u200b\u8bb0\u4f4f\u200b <code>Output(gen)/Input(gen)</code> \u200b\u9012\u5f52\u200b\u7684\u200b\u5220\u9664\u200b\u4e86\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5b50\u9879\u200b\u7684\u200b <code>Flipped</code>\u3002\u200b\u8fd9\u200b\u4f7f\u5f97\u200b <code>gen</code> \u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u6210\u5458\u200b\u548c\u200b\u5176\u4ed6\u200b\u6210\u5458\u200b\u4fdd\u6301\u4e00\u81f4\u200b\u3002</p> <p>\u200b\u8003\u8651\u200b\u4ee5\u4e0b\u200b\u7956\u7236\u200b\u548c\u200b\u5b59\u8f88\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5173\u7cfb\u200b\u3002\u200b\u56e0\u4e3a\u200b <code>alignedCoerced</code> \u200b\u548c\u200b <code>flippedCorced</code> \u200b\u4e0e\u200b\u5b83\u4eec\u200b\u7684\u200b\u6240\u6709\u200b\u9012\u5f52\u200b\u6210\u5458\u200b\u5bf9\u9f50\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b83\u4eec\u200b\u662f\u200b\u5b8c\u5168\u200b\u5bf9\u9f50\u200b\u7684\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u53ea\u6709\u200b\u5b83\u4eec\u200b\u4e0e\u200b <code>g</code> \u200b\u7684\u200b\u5bf9\u9f50\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u5b59\u8f88\u200b\u7684\u200b\u5bf9\u9f50\u200b\uff1a</p> <p><code>g</code> \u200b\u548c\u200b <code>g.alignedCoerced.alignedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b <code>g</code> \u200b\u548c\u200b w.r.t <code>g.alignedCoerced.flippedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b <code>g</code> \u200b\u548c\u200b w.r.t <code>g.flippedCoerced.alignedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b <code>g</code> \u200b\u548c\u200b w.r.t <code>g.flippedCoerced.flippedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b</p> <p>\u200b\u8003\u8651\u200b\u4e0b\u9762\u200b\u4ece\u200b <code>g.alignedCoerced</code> \u200b\u548c\u200b <code>g.flippedCoerced</code> \u200b\u5f00\u59cb\u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u3002\u200b\u6ce8\u610f\u200b\u65e0\u8bba\u200b <code>g.alignedCoerced</code> \u200b\u76f8\u5bf9\u200b\u4e8e\u200b <code>g</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b\u7684\u200b\uff0c\u200b\u5bf9\u4e8e\u200b <code>g.alignedCoerced</code> \u200b\u548c\u200b <code>g.alignedCoerced.alignedChild</code> \u200b\u6216\u200b <code>g.alignedCoerced.flippedChild</code> \u200b\u4e4b\u95f4\u200b\u7684\u200b\u5bf9\u9f50\u200b\u5173\u7cfb\u200b\u6ca1\u6709\u200b\u5f71\u54cd\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u4e2d\u200b\u5bf9\u9f50\u200b\u662f\u200b\u53ea\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u4e24\u4e2a\u200b\u6210\u5458\u200b\u7684\u200b\uff01\u200b\u7136\u800c\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5bf9\u9f50\u200b\u662f\u200b\u5f3a\u5236\u200b\u7684\u200b\uff0c<code>g.alignedCoerced/g.flippedAligned</code> \u200b\u548c\u200b\u4ed6\u4eec\u200b\u7684\u200b\u5b50\u9879\u200b\u7684\u200b\u4e00\u5207\u90fd\u662f\u200b\u5bf9\u200b\u5176\u200b\u7684\u200b\uff1a</p> <p><code>g.alignedCoerced</code> \u200b\u548c\u200b w.r.t. <code>g.alignedCoerced.alignedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b\u3002 <code>g.alignedCoerced</code> \u200b\u548c\u200b w.r.t. <code>g.alignedCoerced.flippedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b\u3002 <code>g.flippedCoerced</code> \u200b\u548c\u200b w.r.t. <code>g.flippedCoerced.alignedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b\u3002 <code>g.flippedCoerced</code> \u200b\u548c\u200b w.r.t. <code>g.flippedCoerced.flippedChild</code> \u200b\u662f\u200b\u5bf9\u9f50\u200b\u7684\u200b\u3002</p> <p>\u200b\u603b\u7684\u6765\u8bf4\u200b\uff0c<code>Input(gen)</code> \u200b\u548c\u200b <code>Output(gen)</code> \u200b\u9012\u5f52\u200b\u7684\u200b\u5f3a\u5236\u200b\u5b50\u7c7b\u200b\u5bf9\u9f50\u200b, \u200b\u5e76\u200b\u89c4\u5b9a\u200b <code>gen</code> \u200b\u4e0e\u200b\u5176\u7236\u200b\u9879\u200b\u7684\u200b bundle \u200b\u5bf9\u9f50\u200b\uff08\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u7684\u8bdd\u200b\uff09\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_29","title":"\u4f7f\u7528\u200b\u5b8c\u5168\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u7ec4\u4ef6","text":""},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_30","title":"\u5355\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:=\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u90fd\u200b\u5bf9\u9f50\u200b\u7684\u200b\u7b80\u5355\u200b\u94fe\u63a5\u200b\uff0c\u200b\u7528\u200b <code>:=</code>\uff1a</p> <pre><code>import chisel3._\nclass FullyAlignedBundle extends Bundle {\n  val a = Bool()\n  val b = Bool()\n}\nclass Example0 extends RawModule {\n  val incoming = IO(Flipped(new FullyAlignedBundle))\n  val outgoing = IO(new FullyAlignedBundle)\n  outgoing := incoming\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200b Verilog\uff0c\u200b\u5176\u4e2d\u200b <code>incoming</code> \u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6210\u5458\u200b\u90fd\u200b\u4f1a\u200b\u9a71\u52a8\u200b <code>outgoing</code> \u200b\u7684\u200b\u6bcf\u4e2a\u200b\u6210\u5458\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example0(    // &lt;stdin&gt;:3:10\n  input  incoming_a,    // connectable.md:86:20\n         incoming_b,    // connectable.md:86:20\n  output outgoing_a,    // connectable.md:87:20\n         outgoing_b // connectable.md:87:20\n);\n\n  assign outgoing_a = incoming_a;   // &lt;stdin&gt;:3:10\n  assign outgoing_b = incoming_b;   // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_31","title":"\u4f7f\u7528\u200b\u6df7\u5408\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u7ec4\u4ef6","text":"<p>\u200b\u805a\u5408\u200b Chisel type \u200b\u53ef\u4ee5\u200b\u5305\u62ec\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u5f7c\u6b64\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6570\u636e\u200b\u6210\u5458\u200b\uff1b\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c<code>alignedChild</code> \u200b\u548c\u200b <code>flippedChild</code> \u200b\u76f8\u5bf9\u200b\u4e8e\u200b <code>MixedAssignmentBundle</code> \u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b\u3002</p> <pre><code>import chisel3._\nclass MixedAlignmentBundle extends Bundle {\n  val alignedChild = Bool()\n  val flippedChild = Flipped(Bool())\n}\n</code></pre> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5728\u200b\u4e24\u4e2a\u200b Chisel \u200b\u7ec4\u4ef6\u200b\u4e4b\u95f4\u200b\u5b58\u5728\u200b\u8bb8\u591a\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u8fde\u63a5\u200b\u884c\u4e3a\u200b\u3002\u200b\u9996\u5148\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u4ecb\u7ecd\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b Chisel \u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b <code>:&lt;&gt;=</code>\uff0c\u200b\u7528\u4e8e\u200b\u8fde\u63a5\u200b\u5177\u6709\u200b\u6df7\u5408\u200b\u6392\u5217\u200b\u6210\u5458\u200b\u7684\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u7136\u540e\u200b\u82b1\u200b\u70b9\u200b\u65f6\u95f4\u200b\u7814\u7a76\u200b\u7aef\u53e3\u200b\u65b9\u5411\u200b\u548c\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u4e4b\u95f4\u200b\u6df7\u6dc6\u200b\u7684\u200b\u5e38\u89c1\u200b\u6765\u6e90\u200b\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u63a2\u8ba8\u200b\u5176\u4f59\u200b\u7684\u200b Chisel \u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_32","title":"\u53cc\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:&lt;&gt;=\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u9700\u8981\u200b\u201c\u200b\u6279\u91cf\u200b\u8fde\u63a5\u200b\u5f0f\u200b\u8bed\u4e49\u200b\u201d\u200b\u7684\u200b\u8fde\u63a5\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u7531\u200b\u751f\u4ea7\u8005\u200b\u9a71\u52a8\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\uff0c\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u7531\u200b\u6d88\u8d39\u8005\u200b\u9a71\u52a8\u200b\u5230\u200b\u751f\u4ea7\u8005\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>:&lt;&gt;=</code>\u3002</p> <pre><code>class Examplee1 extends RawModule {\n  val incoming = IO(Flipped(new MixedAlignmentBundle))\n  val outcoming = IO(new MixedAlignmentBundle)\n  outgoing :&lt;&gt;= incoming\n}\n</code></pre> <p>\u200b\u4ed6\u4f1a\u200b\u751f\u6210\u200b\u5982\u4e0b\u200b\u7684\u200b Verilog\uff0c\u200b\u5bf9\u200b\u5176\u200b\u7684\u200b\u6210\u5458\u200b\u5c06\u200b <code>incoming</code> \u200b\u9a71\u52a8\u200b\u5230\u200b <code>outcoming</code>\uff0c\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u5c06\u200b <code>outcoming</code> \u200b\u9a71\u52a8\u200b\u5230\u200b <code>incoming</code>\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example1(    // &lt;stdin&gt;:3:10\n  input  incoming_alignedChild, // connectable.md:114:20\n         outgoing_flippedChild, // connectable.md:115:20\n  output incoming_flippedChild, // connectable.md:114:20\n         outgoing_alignedChild  // connectable.md:115:20\n);\n\n  assign incoming_flippedChild = outgoing_flippedChild; // &lt;stdin&gt;:3:10\n  assign outgoing_alignedChild = incoming_alignedChild; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_33","title":"\u7aef\u53e3\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\u4e0e\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u8ba1\u7b97","text":"<p>\u200b\u4e00\u4e2a\u200b\u5e38\u89c1\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u200b\uff0c\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u6df7\u5408\u200b\u5bf9\u9f50\u200b\u8fde\u63a5\u200b\uff08\u200b\u4f8b\u5982\u200b<code>:&lt;&gt;=</code>\uff09\u200b\u8fde\u63a5\u200b\u7236\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u5b50\u200b\u6210\u5458\u200b\uff0c\u200b\u5219\u200b\u5b50\u200b\u6210\u5458\u200b\u4e0e\u200b\u5176\u7236\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u5bf9\u9f50\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u4ec0\u4e48\u200b\u5417\u200b\uff1f\u200b\u7b54\u6848\u200b\u662f\u200b\u5426\u5b9a\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5bf9\u9f50\u200b\u603b\u662f\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u8fde\u63a5\u200b\u5230\u200b\u7684\u200b\u5185\u5bb9\u200b\u6765\u200b\u8ba1\u7b97\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6210\u5458\u200b\u603b\u662f\u200b\u4e0e\u200b\u81ea\u5df1\u200b\u5bf9\u9f50\u200b\u3002</p> <p>\u200b\u5728\u200b\u4ee5\u4e0b\u200b\u4ece\u200b <code>incoming.alignedChild</code> \u200b\u8fde\u63a5\u200b\u5230\u200b <code>outgoing.aligndChild</code> \u200b\u7684\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c<code>incoming.lignedChild</code> \u200b\u662f\u5426\u200b\u4e0e\u200b<code>incoming</code> \u200b\u5bf9\u9f50\u200b\u662f\u200b\u65e0\u5173\u7d27\u8981\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b<code>:&lt;&gt;=</code> \u200b\u4ec5\u200b\u8ba1\u7b97\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u8fde\u63a5\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5bf9\u9f50\u200b\uff0c\u200b\u800c\u200b <code>incoming.AlignedCild</code> \u200b\u4e0e\u200b <code>incomingaligndCild</code> \u200b\u5bf9\u9f50\u200b\u3002</p> <pre><code>class Example1a extends RawModule {\n  val incoming = IO(Flipped(new MixedAlignmentBundle))\n  val outgoing = IO(new MixedAlignmentBundle)\n  outgoing.alignedChild :&lt;&gt;= incoming.alignedChild // whether incoming.alignedChild is aligned/flipped to incoming is IRRELEVANT to what gets connected with :&lt;&gt;=\n}\n</code></pre> <p>\u200b\u867d\u7136\u200b <code>incoming.flicpedChild</code> \u200b\u4e0e\u200b <code>incoming</code> \u200b\u7684\u200b\u5bf9\u9f50\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u6211\u4eec\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u4f46\u200b\u5b83\u200b\u786e\u5b9e\u200b\u4f1a\u200b\u5f71\u54cd\u200b <code>incoming.Flicpedchild</code> \u200b\u662f\u200b\u6211\u200b\u7684\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u51fa\u200b\u7aef\u53e3\u200b\u8fd8\u662f\u200b\u8f93\u5165\u200b\u7aef\u53e3\u200b\u3002\u200b\u6df7\u6dc6\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5e38\u89c1\u200b\u6765\u6e90\u200b\u662f\u200b\u5c06\u200b\u786e\u5b9a\u200b <code>incoming.flicpedChild</code> \u200b\u662f\u5426\u200b\u5c06\u200b\u89e3\u6790\u200b\u4e3a\u200b verilog \u200b\u8f93\u51fa\u200b/\u200b\u8f93\u5165\u200b\uff08\u200b\u7aef\u53e3\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\uff09\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u4e0e\u200b\u786e\u5b9a\u200b\u5982\u4f55\u200b <code>:&lt;&gt;=</code> \u200b\u7528\u200b\u4ec0\u4e48\u200b\u9a71\u52a8\u200b\u4ec0\u4e48\u200b\uff08\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\uff09\u3002\u200b\u867d\u7136\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u8fc7\u7a0b\u200b\u90fd\u200b\u8003\u8651\u200b\u4e86\u200b\u76f8\u5bf9\u200b\u4e00\u81f4\u6027\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u3002</p> <p>\u200b\u7aef\u53e3\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\u59cb\u7ec8\u200b\u8ba1\u7b97\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u6807\u6709\u200bIO\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u5bf9\u9f50\u200b\u3002<code>IO(Flipped(gen))</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f20\u5165\u200b\u7aef\u53e3\u200b\uff0c\u200b\u4e0e\u200b <code>gen</code> \u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b\u7684\u200b <code>gen</code> \u200b\u7684\u200b\u4efb\u4f55\u200b\u6210\u5458\u200b\u90fd\u200b\u662f\u200b\u4f20\u5165\u200b/\u200b\u4f20\u51fa\u200b\u7aef\u53e3\u200b\u3002<code>IO(gen)</code>\u200b\u662f\u200b\u4f20\u51fa\u200b\u7aef\u53e3\u200b\uff0c\u200b\u4e0e\u200b <code>gen</code> \u200b\u5bf9\u9f50\u200b/\u200b\u7ffb\u8f6c\u200b\u540e\u200b\u7684\u200b <code>gen</code> \u200b\u7684\u200b\u4efb\u4f55\u200b\u6210\u5458\u200b\u90fd\u200b\u662f\u200b\u4f20\u51fa\u200b/\u200b\u4f20\u5165\u200b\u7aef\u53e3\u200b\u3002</p> <p>\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\u59cb\u7ec8\u200b\u57fa\u4e8e\u200b\u8fde\u63a5\u200b\u6240\u200b\u5f15\u7528\u200b\u7684\u200b\u660e\u786e\u200b\u6d88\u8d39\u8005\u200b/\u200b\u751f\u4ea7\u8005\u200b\u6765\u200b\u8ba1\u7b97\u200b\u5bf9\u9f50\u200b\u3002\u200b\u5982\u679c\u200b\u8fde\u63a5\u200b\u4f20\u5165\u200b <code>:&lt;&gt;=</code> \u200b\u4f20\u51fa\u200b\uff0c\u200b\u5219\u200b\u6839\u636e\u200b\u4f20\u5165\u200b\u548c\u200b\u4f20\u51fa\u200b\u8ba1\u7b97\u200b\u5bf9\u9f50\u200b\u3002\u200b\u5982\u679c\u200b\u8fde\u63a5\u200b <code>incoming.alignedChild:&lt;&gt;=outgoing.alignedChild</code>\uff0c\u200b\u5219\u200b\u6839\u636e\u200b <code>incoming.liginedChild\u200b\u548c\u200boutgoing.alignedChild</code> \u200b\u8ba1\u7b97\u200b\u5bf9\u9f50\u200b\uff08<code>incoming</code> \u200b\u4e0e\u200b <code>incoming-alignedChild</code> \u200b\u7684\u200b\u5bf9\u9f50\u200b\u65e0\u5173\u200b\uff09\u3002</p> <p>\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u8fde\u63a5\u200b\u5230\u200b\u5176\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u5165\u200b\u7aef\u53e3\u200b\uff01\u200b\u5982\u679c\u200b\u6211\u200b\u5199\u200b <code>x:&lt;&gt;=y</code>\uff0c\u200b\u5e76\u4e14\u200b <code>x</code> \u200b\u662f\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u5165\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd9\u200b\u5c31\u662f\u200b\u8fde\u63a5\u200b\u8bd5\u56fe\u200b\u505a\u200b\u7684\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u7531\u4e8e\u200b\u8f93\u5165\u200b\u7aef\u53e3\u200b\u65e0\u6cd5\u200b\u4ece\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u4e2d\u200b\u9a71\u52a8\u200b\uff0cChisel \u200b\u5c06\u200b\u629b\u51fa\u200b\u9519\u8bef\u200b\u3002\u200b\u8fd9\u200b\u4e0e\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b\u5355\u5411\u200b\u64cd\u4f5c\u7b26\u200b\u65f6\u4f1a\u200b\u9047\u5230\u200b\u7684\u200b\u9519\u8bef\u200b\u76f8\u540c\u200b\uff1a\u200b\u5982\u679c\u200b <code>x</code> \u200b\u662f\u200b\u5f53\u524d\u200b\u6a21\u5757\u200b\u7684\u200b\u8f93\u5165\u200b\uff0c\u200b\u5219\u200b <code>x:=y</code> \u200b\u5c06\u200b\u629b\u51fa\u200b\u76f8\u540c\u200b\u7684\u200b\u9519\u8bef\u200b\u3002\u200b\u7ec4\u4ef6\u200b\u662f\u5426\u200b\u53ef\u200b\u9a71\u52a8\u200b\u4e0e\u200b\u4efb\u4f55\u200b\u8bd5\u56fe\u200b\u9a71\u52a8\u200b\u5b83\u200b\u7684\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u8bed\u4e49\u200b\u65e0\u5173\u200b\u3002</p> <p>\u200b\u603b\u4e4b\u200b\uff0c\u200b\u7aef\u53e3\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\u662f\u200b\u76f8\u5bf9\u200b\u4e8e\u6839\u200b\u6807\u8bb0\u200b <code>IO</code> \u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u8fde\u63a5\u200b\u65b9\u5411\u200b\u8ba1\u7b97\u200b\u662f\u200b\u5173\u4e8e\u200b\u8fde\u63a5\u200b\u6b63\u5728\u200b\u8fdb\u884c\u200b\u7684\u200b\u6d88\u8d39\u8005\u200b/\u200b\u751f\u4ea7\u8005\u200b\u7684\u200b\u3002\u200b\u8fd9\u200b\u5177\u6709\u200b\u4e00\u4e2a\u200b\u79ef\u6781\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u5373\u200b\u8fde\u63a5\u200b\u8bed\u4e49\u200b\u4ec5\u200b\u57fa\u4e8e\u200b Chisel \u200b\u7ed3\u6784\u200b\u7c7b\u578b\u200b\u53ca\u5176\u200b\u6d88\u8d39\u8005\u200b/\u200b\u751f\u4ea7\u8005\u200b\u7684\u200b\u76f8\u5bf9\u200b\u5bf9\u9f50\u200b\uff08\u200b\u6ca1\u6709\u200b\u66f4\u200b\u591a\u200b\uff0c\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u66f4\u200b\u5c11\u200b\uff09\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_34","title":"\u5bf9\u9f50\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b (:&lt;=)","text":"<p>\u200b\u5bf9\u4e8e\u200b\u9700\u8981\u200b\u201c\u200b\u7c7b\u200b\u6279\u91cf\u200b\u8fde\u63a5\u200b\u8bed\u4e49\u200b\u201d\u200b\u7684\u200b\u5bf9\u9f50\u200b\u4e00\u534a\u200b\u7684\u200b\u8fde\u63a5\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u7531\u200b\u751f\u4ea7\u8005\u200b\u9a71\u52a8\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\uff0c\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b<code>:&lt;=</code>\uff08\u200b\u5bf9\u9f50\u200b\u7684\u200b\u8fde\u63a5\u200b\uff09\u3002</p> <pre><code>class Example2 extends RawModule {\n  val incoming = IO(Flipped(new MixedAlignmentBundle))\n  val outgoing = IO(new MixedAlignmentBundle)\n  incoming.flippedChild := DontCare // Otherwise FIRRTL throws an uninitialization error\n  outgoing :&lt;= incoming\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200bVerilog\uff0c\u200b\u5176\u4e2d\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u5c06\u200b\u9a71\u52a8\u200b <code>incoming</code> \u200b\u6210\u5458\u200b\u5230\u200b <code>outcoming</code> \u200b\u6210\u5458\u200b\uff0c\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example2(    // &lt;stdin&gt;:3:10\n  input  incoming_alignedChild, // connectable.md:140:20\n         outgoing_flippedChild, // connectable.md:141:20\n  output incoming_flippedChild, // connectable.md:140:20\n         outgoing_alignedChild  // connectable.md:141:20\n);\n\n  assign incoming_flippedChild = 1'h0;  // &lt;stdin&gt;:3:10, connectable.md:142:25\n  assign outgoing_alignedChild = incoming_alignedChild; // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_35","title":"\u7ffb\u8f6c\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:&gt;=\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u9700\u8981\u200b\u201c\u200b\u7c7b\u200b\u6279\u91cf\u200b\u8fde\u63a5\u200b\u8bed\u4e49\u200b\u201d\u200b\u7684\u200b\u7ffb\u8f6c\u200b\u4e00\u534a\u200b\u7684\u200b\u8fde\u63a5\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5bf9\u9f50\u200b\u7684\u200b\u6210\u5458\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff0c\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u88ab\u200b\u8fde\u63a5\u200b\u5230\u200b\u6d88\u8d39\u8005\u200b\u5230\u200b\u751f\u4ea7\u8005\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b <code>:&gt;=</code>\uff08\u201c\u200b\u7ffb\u8f6c\u200b\u8fde\u63a5\u200b\u201d\u200b\u6216\u200b\u201c\u200b\u80cc\u538b\u200b\u8fde\u63a5\u200b\u201d\uff09\u3002</p> <pre><code>class Example3 extends RawModule {\n  val incoming = IO(Flipped(new MixedAlignmentBundle))\n  val outgoing = IO(new MixedAlignmentBundle)\n  outgoing.alignedChild := DontCare // Otherwise FIRRTL throws an uninitialization error\n  outgoing :&gt;= incoming\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u4ea7\u751f\u200b\u4ee5\u4e0b\u200b verilog\uff0c\u200b\u5728\u200b\u8be5\u200b verilog \u200b\u4e2d\u200b\uff0c\u200b\u5bf9\u9f50\u200b\u6210\u5458\u200b\u88ab\u200b\u5ffd\u7565\u200b\uff0c\u200b\u800c\u200b\u7ffb\u8f6c\u200b\u7684\u200b\u6210\u5458\u200b\u88ab\u200b\u9a71\u52a8\u200b\u5230\u200b <code>incoming</code>\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example3(    // &lt;stdin&gt;:3:10\n  input  incoming_alignedChild, // connectable.md:157:20\n         outgoing_flippedChild, // connectable.md:158:20\n  output incoming_flippedChild, // connectable.md:157:20\n         outgoing_alignedChild  // connectable.md:158:20\n);\n\n  assign incoming_flippedChild = outgoing_flippedChild; // &lt;stdin&gt;:3:10\n  assign outgoing_alignedChild = 1'h0;  // &lt;stdin&gt;:3:10, connectable.md:159:25\nendmodule\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u7cbe\u660e\u200b\u7684\u200b\u89c2\u5bdf\u8005\u200b\u5c06\u200b\u610f\u8bc6\u200b\u5230\u200b\u8bed\u4e49\u4e0a\u200b\u7684\u200b <code>c :&lt;&gt;= p</code> \u200b\u5b8c\u5168\u200b\u7b49\u4e8e\u200b <code>c :&lt;= p</code>\uff0c\u200b\u7136\u540e\u200b\u662f\u200b <code>c :&gt;= p</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_36","title":"\u5f3a\u5236\u200b\u5355\u5411\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff08:#=\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u4f60\u200b\u60f3\u8981\u200b\u6bcf\u4e2a\u200b\u751f\u4ea7\u8005\u200b\u6210\u5458\u200b\u59cb\u7ec8\u200b\u9a71\u52a8\u200b\u6bcf\u4e2a\u200b\u6d88\u8d39\u8005\u200b\u6210\u5458\u200b\u7684\u200b\u8fde\u63a5\u200b\uff0c\u200b\u65e0\u8bba\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\u5982\u4f55\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b <code>:#=</code>\uff08\u201c\u200b\u5f3a\u5236\u200b\u8fde\u63a5\u200b\u201d\uff09\u3002\u200b\u8be5\u200b\u64cd\u4f5c\u5458\u200b\u53ef\u200b\u7528\u4e8e\u200b\u521d\u59cb\u5316\u200b\u5305\u542b\u200b\u6df7\u5408\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\u7684\u200b\u7c7b\u578b\u200b\u7684\u200b <code>wire</code>\u3002</p> <pre><code>import chisel3.experimental.BundleLiterals._\nclass Example4 extends RawModule {\n  val w = Wire(new MixedAlignmentBundle)\n  dontTouch(w) // So we see it in the output verilog\n  w :#= (new MixedAlignmentBundle).Lit(_.alignedChild -&gt; true.B, _.flippedChild -&gt; true.B)\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u4ea7\u751f\u200b\u4ee5\u4e0b\u200b verilog\uff0c\u200b\u5176\u4e2d\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u90fd\u200b\u4ece\u200b\u5b57\u9762\u4e0a\u200b\u9a71\u52a8\u200b\u5230\u200b <code>w</code>\uff0c\u200b\u800c\u200b\u4e0d\u7ba1\u200b\u6709\u200b\u4ec0\u4e48\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example4();  // &lt;stdin&gt;:8:10\n  wire w_alignedChild = 1'h1;   // connectable.md:177:15, :179:5\n  wire w_flippedChild = 1'h1;   // connectable.md:177:15, :179:5\nendmodule\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u7cbe\u660e\u200b\u7684\u200b\u89c2\u5bdf\u8005\u200b\u5c06\u200b\u610f\u8bc6\u200b\u5230\u200b\u8bed\u4e49\u4e0a\u200b\u7684\u200b <code>c :#= P</code> \u200b\u5b8c\u5168\u200b\u7b49\u4e8e\u200b <code>c :&lt;= p</code>\uff0c\u200b\u7136\u540e\u200b\u662f\u200b<code>p :&gt;= c</code>\uff08\u200b\u6ce8\u610f\u200b\u7b2c\u4e8c\u200b\u8fde\u63a5\u200b\u4e2d\u200b\u7684\u200b <code>p</code> \u200b\u548c\u200b <code>c</code> \u200b\u5207\u6362\u200b\u4f4d\u7f6e\u200b\uff09\u3002</p> <p>\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7528\u4f8b\u200b :#= \u200b\u662f\u200b\u5c06\u200b\u6df7\u5408\u200b\u65b9\u5411\u200b Bundle \u200b\u8fde\u63a5\u200b\u5230\u200b\u5b8c\u5168\u200b\u5bf9\u9f50\u200b\u7684\u200b monitor\u3002</p> <pre><code>import chisel3.experimental.BundleLiterals._\nclass Example4b extends RawModule {\n  val monitor = IO(Output(new MixedAlignmentBundle))\n  val w = Wire(new MixedAlignmentBundle)\n  dontTouch(w) // So we see it in the output verilog\n  w :#= DontCare\n  monitor :#= w\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u4ea7\u751f\u200b\u4ee5\u4e0b\u200b verilog\uff0c\u200b\u5176\u4e2d\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u90fd\u200b\u4ece\u200b\u5b57\u9762\u4e0a\u200b\u9a71\u52a8\u200b\u5230\u200b <code>w</code>\uff0c\u200b\u6e56\u5e93\u989d\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example4b(   // &lt;stdin&gt;:8:10\n  output monitor_alignedChild,  // connectable.md:196:19\n         monitor_flippedChild   // connectable.md:196:19\n);\n\n  wire w_alignedChild = 1'h0;   // connectable.md:197:15, :199:5\n  wire w_flippedChild = 1'h0;   // connectable.md:197:15, :199:5\n  assign monitor_alignedChild = w_alignedChild; // &lt;stdin&gt;:8:10, connectable.md:197:15\n  assign monitor_flippedChild = w_flippedChild; // &lt;stdin&gt;:8:10, connectable.md:197:15\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#connectable","title":"Connectable","text":"<p>\u200b\u7528\u6237\u200b\u8981\u200b\u8fde\u63a5\u200b\u4e0d\u200b\u7b49\u6548\u200b\u7c7b\u578b\u200b\u7684\u200b Chisel \u200b\u7ec4\u4ef6\u200b\u5e76\u200b\u4e0d\u5c11\u200b\u89c1\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u7528\u6237\u200b\u53ef\u80fd\u200b\u60f3\u200b\u8fde\u63a5\u200b\u53ef\u80fd\u200b\u4e0e\u200b\u5b57\u200b\u6bb5\u200b\u76f8\u4ea4\u200b\u7684\u200b\u533f\u540d\u200b <code>Record</code> \u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u8fde\u63a5\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u4eec\u200b\u5728\u7ed3\u6784\u4e0a\u200b\u4e0d\u662f\u200b\u7b49\u6548\u200b\u7684\u200b\u3002\u200b\u53e6\u5916\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4eba\u200b\u53ef\u80fd\u200b\u60f3\u8981\u200b\u8fde\u63a5\u200b\u4e24\u79cd\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b\u5bbd\u5ea6\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <p>\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>connectable</code> \u200b\u662f\u200b\u4e13\u4e1a\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u884c\u4e3a\u200b\u7684\u200b\u673a\u5236\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u672a\u200b\u5b58\u5728\u200b\u8fde\u63a5\u200b\u5230\u200b\u7684\u200b\u5176\u4ed6\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u6216\u200b\u4e0d\u200b\u5339\u914d\u200b\u5bbd\u5ea6\u200b\u7684\u200b\u5176\u4ed6\u200b\u6210\u5458\u200b\uff0c\u200b\u6216\u8005\u200b\u5bf9\u4e8e\u200b\u59cb\u7ec8\u200b\u5c06\u200b\u6210\u5458\u200b\u6392\u9664\u200b\u5728\u200b\u8fde\u63a5\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u53ef\u200b\u8fde\u63a5\u200b\u7684\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u660e\u786e\u200b\u8c03\u7528\u200b\u5b83\u4eec\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u89e6\u53d1\u200b\u9519\u8bef\u200b\u3002</p> <p>\u200b\u6b64\u5916\u200b\uff0c\u200b\u8fd8\u6709\u200b\u5176\u4ed6\u200b\u6280\u672f\u200b\u53ef\u200b\u7528\u4e8e\u200b\u89e3\u51b3\u200b\u7c7b\u4f3c\u200b\u7528\u4f8b\u200b\uff0c\u200b\u5305\u62ec\u200b <code>.viewassupertype</code>\uff0c\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u5230\u200b\u8d85\u7c7b\u200b\uff08\u200b\u4f8b\u5982\u200b <code>(x: T)</code>\uff09\u200b\u6216\u200b\u521b\u5efa\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u8303\u56f4\u200b\u3002\u200b\u6709\u5173\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6bcf\u79cd\u200b\u6280\u672f\u200b\u7684\u200b\u8ba8\u8bba\u200b\uff0c\u200b\u4f1a\u200b\u5728\u200b\u4e4b\u540e\u200b\u8ba8\u8bba\u200b\u3002</p> <p>\u200b\u672c\u200b\u8282\u200b\u6f14\u793a\u200b\u4e86\u200b\u5982\u4f55\u200b\u5728\u200b\u591a\u79cd\u200b\u65b9\u6848\u200b\u4e2d\u200b\u4e13\u95e8\u200b\u4f7f\u7528\u200b <code>connectable</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#records","title":"\u8fde\u63a5\u200b Records","text":"<p>\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u5e38\u89c1\u200b\u7684\u200b\u7528\u9014\u200b\u662f\u200b\u5c1d\u8bd5\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b Records\u3002\u200b\u5bf9\u4e8e\u200b\u5339\u914d\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u5e94\u8be5\u200b\u8fde\u63a5\u200b\u5b83\u4eec\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u65e0\u4e0e\u4f26\u6bd4\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u7531\u4e8e\u200b\u65e0\u4e0e\u4f26\u6bd4\u200b\u800c\u200b\u5f15\u8d77\u200b\u7684\u200b\u9519\u8bef\u200b\u5e94\u200b\u88ab\u200b\u5ffd\u7565\u200b\u3002\u200b\u8981\u200b\u5b9e\u73b0\u200b\u8fd9\u4e00\u200b\u76ee\u6807\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u64cd\u4f5c\u5458\u200b\u521d\u59cb\u5316\u200b\u6240\u6709\u200b\u8bb0\u5f55\u200b\u6210\u5458\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u5e26\u6709\u200b <code>waiveAll</code> \u200b\u7684\u200b <code>:&lt;&gt;=</code> \u200b\u4ec5\u200b\u8fde\u63a5\u200b\u5339\u914d\u200b\u6210\u5458\u200b\u3002</p> <p>\u200b\u6ce8\u610f\u200b\uff0c<code>.ViewAssuperType</code>\uff0c\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\u81ea\u200b\u5b9a\u4e49\u6570\u636e\u200b\u8303\u56f4\u200b\uff0c\u200b\u56e0\u4e3a\u200b Scala \u200b\u7c7b\u578b\u200b\u4ecd\u7136\u200b\u662f\u200b <code>Record</code>\u3002</p> <pre><code>import scala.collection.immutable.SeqMap\n\nclass Example9 extends RawModule {\n  val abType = new Record { val elements = SeqMap(\"a\" -&gt; Bool(), \"b\" -&gt; Flipped(Bool())) }\n  val bcType = new Record { val elements = SeqMap(\"b\" -&gt; Flipped(Bool()), \"c\" -&gt; Bool()) }\n\n  val p = IO(Flipped(abType))\n  val c = IO(bcType)\n\n  DontCare :&gt;= p\n  c :&lt;= DontCare\n\n  c.waive(_.elements(\"c\")):&lt;&gt;= p.waive(_.elements(\"a\"))\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u4ea7\u751f\u200b\u4ee5\u4e0b\u200b verilog\uff0c\u200b\u5176\u4e2d\u200b <code>p.b</code> \u200b\u662f\u200b <code>c.b</code> \u200b\u9a71\u52a8\u200b\u7684\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example9(    // &lt;stdin&gt;:3:10\n  input  p_a,   // connectable.md:220:13\n         c_b,   // connectable.md:221:13\n  output p_b,   // connectable.md:220:13\n         c_c    // connectable.md:221:13\n);\n\n  assign p_b = c_b; // &lt;stdin&gt;:3:10\n  assign c_c = 1'h0;    // &lt;stdin&gt;:3:10, connectable.md:224:5\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#waived","title":"waived \u200b\u8fde\u63a5\u200b\u7684\u200b\u9ed8\u8ba4","text":"<p>\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u5e38\u89c1\u200b\u7684\u200b\u7528\u9014\u200b\u662f\u200b\u5c1d\u8bd5\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b Records\u3002\u200b\u5bf9\u4e8e\u200b\u5339\u914d\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u5e94\u8be5\u200b\u8fde\u63a5\u200b\u5b83\u4eec\u200b\uff0c\u200b\u4f46\u662f\u200b\u5bf9\u4e8e\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u5e94\u200b\u5c06\u200b\u5b83\u4eec\u200b\u8fde\u63a5\u200b\u4e3a\u200b\u9ed8\u8ba4\u503c\u200b\u3002\u200b\u8981\u200b\u5b9e\u73b0\u200b\u8fd9\u4e00\u200b\u76ee\u6807\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u64cd\u4f5c\u7b26\u200b\u521d\u59cb\u5316\u200b\u6240\u6709\u200b Records \u200b\u6210\u5458\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u5e26\u200b <code>waiveAll</code> \u200b\u7684\u200b <code>:&lt;&gt;=</code> \u200b\u4ec5\u200b\u8fde\u63a5\u200b\u5339\u914d\u200b\u6210\u5458\u200b\u3002</p> <pre><code>import scala.collection.immutable.SeqMap\n\nclass Example10 extends RawModule {\n  val abType = new Record { val elements = SeqMap(\"a\" -&gt; Bool(), \"b\" -&gt; Flipped(Bool())) }\n  val bcType = new Record { val elements = SeqMap(\"b\" -&gt; Flipped(Bool()), \"c\" -&gt; Bool()) }\n\n  val p = Wire(abType)\n  val c = Wire(bcType)\n\n  dontTouch(p) // So it doesn't get constant-propped away for the example\n  dontTouch(c) // So it doesn't get constant-propped away for the example\n\n  p :#= abType.Lit(_.elements(\"a\") -&gt; true.B, _.elements(\"b\") -&gt; true.B)\n  c :#= bcType.Lit(_.elements(\"b\") -&gt; true.B, _.elements(\"c\") -&gt; true.B)\n\n  c.waive(_.elements(\"c\")) :&lt;&gt;= p.waive(_.elements(\"a\"))\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200b Verilog\uff0c\u200b\u5176\u4e2d\u200b <code>p.b</code> \u200b\u662f\u4ece\u200b <code>c.b</code> \u200b\u9a71\u52a8\u200b\u7684\u200b\uff0c\u200b\u5e76\u4e14\u200b <code>p.a</code>, <code>c.b</code> \u200b\u548c\u200b <code>c.c</code> \u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b\u9ed8\u8ba4\u503c\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example10(); // &lt;stdin&gt;:12:10\n  wire p_a = 1'h1;  // connectable.md:246:15, :252:5\n  wire c_c = 1'h1;  // connectable.md:247:15, :252:5\n  wire c_b = 1'h1;  // connectable.md:247:15, :252:5\n  wire p_b = c_b;   // connectable.md:246:15, :247:15\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_37","title":"\u4e0e\u200b\u53ef\u9009\u200b\u6210\u5458\u200b\u8fde\u63a5\u200b\u7c7b\u578b","text":"<p>\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>:&lt;&gt;=</code> \u200b\u548c\u200b <code>waive</code> \u200b\u6765\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b <code>MyDecoupledOpts</code>\uff0c\u200b\u5176\u4e2d\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u5177\u6709\u200b <code>bits</code> \u200b\u6210\u5458\u200b\u3002</p> <pre><code>class MyDecoupledOpt(hasBits: Boolean) extends Bundle {\n  val valid = Bool()\n  val ready = Flipped(Bool())\n  val bits = if (hasBits) Some(UInt(32.W)) else None\n}\nclass Example6 extends RawModule {\n  val in  = IO(Flipped(new MyDecoupledOpt(true)))\n  val out = IO(new MyDecoupledOpt(false))\n  out :&lt;&gt;= in.waive(_.bits.get) // We can know to call .get because we can inspect in.bits.isEmpty\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200b verilog\uff0c\u200b\u5373\u200b <code>ready</code> \u200b\u548c\u200b <code>valid</code> \u200b\u88ab\u200b\u8fde\u63a5\u8d77\u6765\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5ffd\u7565\u200b\u4e86\u200b <code>bits</code>\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example6(    // &lt;stdin&gt;:3:10\n  input         in_valid,   // connectable.md:276:15\n  input  [31:0] in_bits,    // connectable.md:276:15\n  input         out_ready,  // connectable.md:277:15\n  output        in_ready,   // connectable.md:276:15\n                out_valid   // connectable.md:277:15\n);\n\n  assign in_ready = out_ready;  // &lt;stdin&gt;:3:10\n  assign out_valid = in_valid;  // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_38","title":"\u603b\u662f\u200b\u5ffd\u7565\u200b\u7531\u200b\u989d\u5916\u200b\u6210\u5458\u200b\uff08\u200b\u90e8\u5206\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\uff09\u200b\u9020\u6210\u200b\u7684\u200b\u9519\u8bef","text":"<p>\u200b\u6700\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u8fde\u63a5\u200b\u662f\u200b\u4ec5\u200b\u8fde\u63a5\u200b\u6d88\u8d39\u8005\u200b\u548c\u200b\u751f\u4ea7\u8005\u200b\u4e2d\u200b\u5b58\u5728\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u5e76\u200b\u5ffd\u7565\u200b\u6240\u6709\u200b\u5176\u4ed6\u200b\u6210\u5458\u200b\u3002\u200b\u8fd9\u200b\u662f\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6b64\u200b\u8fde\u63a5\u200b\u6c38\u8fdc\u200b\u4e0d\u4f1a\u200b\u5728\u200b\u4efb\u4f55\u200b Chisel \u200b\u7c7b\u578b\u200b\u4e0a\u200b\u51fa\u9519\u200b\u3002</p> <p>\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>.waiveAll</code> \u200b\u548c\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u5230\u200b <code>Data</code>\uff1a</p> <pre><code>class OnlyA extends Bundle {\n  val a = UInt(32.W)\n}\nclass OnlyB extends Bundle {\n  val b = UInt(32.W)\n}\nclass Example11 extends RawModule {\n  val in  = IO(Flipped(new OnlyA))\n  val out = IO(new OnlyB)\n\n  out := DontCare\n\n  (out: Data).waiveAll :&lt;&gt;= (in: Data).waiveAll\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u5982\u4e0b\u200b verilog\uff0c\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u4e1c\u897f\u200b\u88ab\u200b\u8fde\u63a5\u8d77\u6765\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example11(   // &lt;stdin&gt;:3:10\n  input  [31:0] in_a,   // connectable.md:302:15\n  output [31:0] out_b   // connectable.md:303:15\n);\n\n  assign out_b = 32'h0; // &lt;stdin&gt;:3:10, connectable.md:305:7\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_39","title":"\u8fde\u63a5\u200b\u4e0d\u540c\u200b\u4f4d\u200b\u5bbd\u200b\u7684\u200b\u7ec4\u4ef6","text":"<p>\u200b\u5982\u679c\u200b\u5bbd\u5ea6\u200b\u8f83\u5927\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u8fde\u63a5\u200b\u5230\u200b\u5bbd\u5ea6\u200b\u8f83\u200b\u5c0f\u200b\u7684\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u5219\u200b\u4e0d\u53ef\u200b\u8fde\u63a5\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u4f1a\u200b\u9690\u5f0f\u200b\u622a\u65ad\u200b\u3002\u200b\u53ef\u200b\u8fde\u63a5\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u8fd9\u79cd\u200b\u9690\u5f0f\u200b\u622a\u65ad\u200b\u884c\u4e3a\u200b\uff0c\u200b\u5e76\u200b\u8981\u6c42\u200b\u88ab\u200b\u9a71\u52a8\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u4e0e\u6e90\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u5bbd\u5ea6\u200b\u76f8\u7b49\u200b\u6216\u200b\u66f4\u200b\u5927\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u5e0c\u671b\u200b\u9690\u5f0f\u200b\u622a\u65ad\u200b\u7684\u200b\u884c\u4e3a\u200b\u53d1\u751f\u200b\uff0c<code>connectable</code> \u200b\u64cd\u4f5c\u7b26\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b <code>squeeze</code> \u200b\u673a\u5236\u200b\uff0c\u200b\u8be5\u200b\u673a\u5236\u200b\u5c06\u200b\u4f7f\u200b\u8fde\u63a5\u200b\u80fd\u591f\u200b\u7ee7\u7eed\u200b\u5e76\u200b\u9690\u5f0f\u200b\u622a\u65ad\u200b\u3002</p> <pre><code>import scala.collection.immutable.SeqMap\n\nclass Example14 extends RawModule {\n  val p = IO(Flipped(UInt(4.W)))\n  val c = IO(UInt(3.W))\n\n  c :&lt;&gt;= p.squeeze\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200b verilog\uff0c\u200b\u5176\u4e2d\u200b <code>p</code> \u200b\u5728\u200b\u9a71\u52a8\u200b <code>c</code> \u200b\u4e4b\u524d\u200b\u88ab\u200b\u9690\u5f0f\u200b\u622a\u65ad\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example14(   // &lt;stdin&gt;:3:10\n  input  [3:0] p,   // connectable.md:324:13\n  output [2:0] c    // connectable.md:325:13\n);\n\n  assign c = p[2:0];    // &lt;stdin&gt;:3:10, connectable.md:327:5\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_40","title":"\u5728\u200b\u53ef\u200b\u8fde\u63a5\u200b\u7684\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u7b26\u200b\u4e2d\u200b\u6392\u9664\u200b\u4efb\u4f55\u200b\u6210\u5458","text":"<p>\u200b\u5982\u679c\u200b\u7528\u6237\u200b\u60f3\u200b\u59cb\u7ec8\u200b\u5c06\u200b\u5b57\u200b\u6bb5\u200b\u4ece\u200b\u8fde\u63a5\u200b\u4e2d\u200b\u6392\u9664\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b\u6c38\u8fdc\u200b\u4e0d\u4f1a\u200b\u8fde\u63a5\u200b\u5b57\u6bb5\u200b\u7684\u200b <code>exclude</code> \u200b\u673a\u5236\u200b\uff08\u200b\u597d\u50cf\u200b\u5b83\u200b\u4e0d\u200b\u5b58\u5728\u200b\u8fde\u63a5\u200b\uff09\u3002</p> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u5982\u679c\u200b\u4e00\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\u5339\u914d\u200b\u751f\u4ea7\u8005\u200b\u548c\u200b\u6d88\u8d39\u8005\u200b\uff0c\u200b\u4f46\u4ec5\u200b\u6392\u9664\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5219\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u975e\u200b\u6392\u9664\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u4ecd\u7136\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u9519\u8bef\u200b\u3002\u200b\u8981\u200b\u89e3\u51b3\u200b\u6b64\u200b\u95ee\u9898\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b <code>waive</code> \u200b\u6216\u200b <code>exclude</code>\u3002</p> <pre><code>import scala.collection.immutable.SeqMap\n\nclass BundleWithSpecialField extends Bundle {\n  val foo = UInt(3.W)\n  val special = Bool()\n}\nclass Example15 extends RawModule {\n  val p = IO(Flipped(new BundleWithSpecialField()))\n  val c = IO(new BundleWithSpecialField())\n\n  c.special := true.B // must initialize it\n\n  c.exclude(_.special) :&lt;&gt;= p.exclude(_.special)\n}\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u751f\u6210\u200b\u4ee5\u4e0b\u200bverilog\uff0c\u200b\u5176\u4e2d\u200b <code>special</code> \u200b\u5b57\u6bb5\u200b\u672a\u200b\u8fde\u63a5\u200b\uff1a</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example15(   // &lt;stdin&gt;:3:10\n  input  [2:0] p_foo,   // connectable.md:350:13\n  input        p_special,   // connectable.md:350:13\n  output [2:0] c_foo,   // connectable.md:351:13\n  output       c_special    // connectable.md:351:13\n);\n\n  assign c_foo = p_foo; // &lt;stdin&gt;:3:10\n  assign c_special = 1'h1;  // &lt;stdin&gt;:3:10, connectable.md:353:13\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#chisel","title":"\u8fde\u63a5\u7ed3\u6784\u200b\u4e0a\u200b\u4e0d\u200b\u76f8\u7b49\u200b\u7684\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u6280\u672f","text":"<p><code>Dataview</code> \u200b\u548c\u200b <code>ViewAssuperType</code> \u200b\u521b\u5efa\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u7684\u200b view\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u7528\u6237\u200b\u53ef\u4ee5\u200b\u9996\u5148\u200b\u521b\u5efa\u200b\u6d88\u8d39\u8005\u200b\u6216\u200b\u751f\u4ea7\u8005\u200b\uff08\u200b\u6216\u200b\u4e24\u8005\u200b\uff09\u200b\u7684\u200b <code>Dataview</code>\uff0c\u200b\u4ee5\u4fbf\u200b Chisel \u200b\u7c7b\u578b\u200b\u5728\u7ed3\u6784\u4e0a\u200b\u7b49\u6548\u200b\u3002\u200b\u5f53\u200b\u6d88\u8d39\u8005\u200b\u548c\u200b\u751f\u4ea7\u5546\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u4e0d\u662f\u200b\u8d85\u7ea7\u200b\u5d4c\u5957\u200b\u65f6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5982\u679c\u200b\u4ed6\u4eec\u200b\u5177\u6709\u200b\u7f16\u7801\u200b\u5176\u200b\u7ed3\u6784\u200b\u7684\u200b\u4e30\u5bcc\u200b\u7c7b\u578b\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u200b\u5f88\u200b\u6709\u7528\u200b\u3002\u200b\u901a\u5e38\u200b\uff0c<code>Dataview</code> \u200b\u662f\u200b\u4f7f\u7528\u200b\u7684\u200b\u9996\u9009\u200b\u673a\u5236\u200b\uff08\u200b\u5982\u679c\u200b\u53ef\u4ee5\u200b\u7684\u8bdd\u200b\uff09\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u5728\u200b Scala \u200b\u7c7b\u578b\u200b\u4e2d\u200b\u4fdd\u7559\u200b\u4e86\u200b\u6700\u200b\u591a\u200b\u7684\u200b Chisel \u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u8bb8\u591a\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5b83\u200b\u4e0d\u8d77\u4f5c\u7528\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5fc5\u987b\u200b\u9000\u56de\u200b <code>Connectable</code>\u3002</p> <p><code>Connectable</code> \u200b\u4e0d\u4f1a\u200b\u66f4\u6539\u200b Chisel \u200b\u7c7b\u578b\u200b\uff0c\u200b\u800c\u662f\u200b\u5c06\u200b\u60ac\u6302\u200b\u6216\u200b\u65e0\u200b\u8fde\u63a5\u200b\u7684\u200b\u6210\u5458\u200b\u7684\u200b\u64cd\u4f5c\u7b26\u200b\u8bed\u4e49\u200b\u66f4\u6539\u200b\u6765\u200b\u907f\u514d\u200b\u9519\u8bef\u200b\u3002\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u5f53\u200b\u6d88\u8d39\u8005\u200b\u548c\u200b\u751f\u4ea7\u8005\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u5f02\u200b\u4e0d\u200b\u663e\u793a\u200b\u5728\u200b Scala \u200b\u7c7b\u578b\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff08\u200b\u4f8b\u5982\u200b\u7c7b\u578b\u200b Option[Data] \u200b\u7684\u200b\u5f53\u524d\u200b/\u200b\u7f3a\u5931\u200b\u5b57\u6bb5\u200b\u6216\u200b\u533f\u540d\u200b <code>Record</code>\uff09\u200b\u6216\u200b\u6df1\u6df1\u5730\u200b\u5d4c\u5957\u200b\u5728\u200b\u4e00\u4e2a\u200b\u7279\u522b\u200b\u7e41\u91cd\u200b\u7684\u200b\u6346\u7ed1\u200b\u5305\u4e2d\u65f6\u200b\uff0c\u200b\u521b\u5efa\u200b <code>Dataview</code>\u3002</p> <p>\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\uff08\u200b\u4f8b\u5982\u200b<code>(x: T)</code>\uff09\u200b\u5141\u8bb8\u200b\u8fde\u63a5\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u4f46\u200b\u4f7f\u200b Chisel \u200b\u7c7b\u578b\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u3002\u200b\u5373\u4f7f\u200b Scala \u200b\u7c7b\u578b\u200b\u4e0d\u540c\u200b\uff0c\u200b\u4e5f\u200b\u8981\u200b\u4f7f\u7528\u200b\u5b83\u200b\u6765\u200b\u5f3a\u8feb\u200b\u8fde\u63a5\u200b\u53d1\u751f\u200b\u3002</p> <p>\u200b\u4eba\u4eec\u200b\u53ef\u80fd\u200b\u60f3\u200b\u77e5\u9053\u200b\uff0c\u200b\u5982\u679c\u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u88ab\u200b\u7ed5\u8fc7\u200b\uff0c\u200b\u4e3a\u4ec0\u4e48\u200b\u5b83\u4eec\u200b\u9996\u5148\u200b\u9700\u8981\u200b\u76f8\u540c\u200b\u7684\u200b Scala \u200b\u7c7b\u578b\u200b\u3002\u200b\u539f\u56e0\u200b\u662f\u200b\u9f13\u52b1\u200b\u7528\u6237\u200b\u4f7f\u7528\u200b Scala \u200b\u7c7b\u578b\u200b\u7cfb\u7edf\u200b\u6765\u200b\u7f16\u7801\u200bChisel \u200b\u4fe1\u606f\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u4ed6\u4eec\u200b\u7684\u200b\u4ee3\u7801\u200b\u66f4\u52a0\u200b\u5065\u58ee\u200b\uff1b\u200b\u7136\u800c\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0d\u60f3\u200b\u5bf9\u6b64\u200b\u91c7\u53d6\u200b\u4e25\u5389\u200b\u63aa\u65bd\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6709\u65f6\u200b\u6211\u4eec\u200b\u60f3\u200b\u8ba9\u200b\u7528\u6237\u200b\u201cjust connect the darn thing\u201d\u3002</p> <p>\u200b\u5f53\u200b\u6240\u6709\u200b\u5176\u4ed6\u200b\u65b9\u6cd5\u200b\u90fd\u200b\u5931\u8d25\u200b\u65f6\u200b\uff0c\u200b\u4eba\u4eec\u200b\u603b\u662f\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u6269\u5c55\u200b\u8fde\u63a5\u200b\u4ee5\u200b\u9010\u4e2a\u200b\u6210\u5458\u200b\u6267\u884c\u200b\u4ed6\u4eec\u200b\u60f3\u8981\u200b\u53d1\u751f\u200b\u7684\u200b\u4e8b\u60c5\u200b\u3002\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u7684\u200b\u7f3a\u70b9\u200b\u662f\u200b\u5176\u200b\u5197\u957f\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5411\u200b\u7ec4\u4ef6\u200b\u6dfb\u52a0\u200b\u65b0\u200b\u6210\u5458\u200b\u5c06\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b\u624b\u52a8\u200b\u8fde\u63a5\u200b\u3002</p> <p>\u200b\u5173\u4e8e\u200b <code>Connectable</code> \u200b\u4e0e\u200b <code>viewAsSupertype/DataView</code> \u200b\u4e0e\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\uff08\u200b\u4f8b\u5982\u200b <code>(x: T)</code>\uff09\u200b\u9700\u8981\u200b\u8bb0\u4f4f\u200b\u7684\u200b\u4e8b\u9879\u200b\uff1a</p> <ul> <li><code>DataView</code> \u200b\u548c\u200b <code>viewAsSupertype</code> \u200b\u5c06\u200b\u62a2\u5148\u200b\u5220\u9664\u200b\u5177\u6709\u200b\u4e0d\u540c\u200b Chisel \u200b\u7c7b\u578b\u200b\u7684\u200b\u65b0\u200b\u89c6\u56fe\u200b\u4e2d\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u56e0\u6b64\u200b <code>DataView</code> \u200b\u786e\u5b9e\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u8fde\u63a5\u200b\u7684\u200b\u5185\u5bb9\u200b</li> <li><code>Connectable</code> \u200b\u53ef\u200b\u7528\u4e8e\u200b\u514d\u9664\u200b\u6700\u7ec8\u200b\u60ac\u7a7a\u200b\u6216\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u6210\u5458\u200b\u7684\u200b\u9519\u8bef\u200b\u3002 \u200b\u91cd\u8981\u200b\u7684\u200b\u662f\u200b\uff0c<code>Connectable</code> waives \u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u5df2\u200b\u8fde\u63a5\u200b\u7684\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u4e0d\u4f1a\u200b\u5220\u9664\u200b\u989d\u5916\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u4e0d\u4f1a\u200b\u5f71\u54cd\u200b\u8fde\u63a5\u200b\u7684\u200b\u5185\u5bb9\u200b</li> </ul>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_41","title":"\u4f7f\u7528\u200b\u51b2\u7a81\u200b\u7684\u200b\u540d\u79f0\u200b\u8fde\u63a5\u200b\u540c\u4e00\u200b\u8d85\u7c7b\u200b\u7684\u200b\u4e0d\u540c\u200b\u5b50\u7c7b","text":"<p>\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b <code>MyDecoupled</code> \u200b\u4e0e\u200b <code>MyDecoupledOtherBits</code> \u200b\u8fde\u63a5\u200b\u3002\u200b\u4e24\u8005\u200b\u90fd\u200b\u662f\u200b <code>MyReadyValid</code> \u200b\u7684\u200b\u5b50\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u90fd\u200b\u6709\u200b <code>UInt(32.W)</code> \u200b\u7684\u200b\u4f4d\u5b57\u6bb5\u200b\u3002</p> <p>\u200b\u7b2c\u4e00\u4e2a\u200b\u793a\u4f8b\u200b\u5c06\u200b\u4f7f\u7528\u200b <code>.viewAsSupertype</code> \u200b\u5c06\u200b\u5b83\u4eec\u200b\u8fde\u63a5\u200b\u4e3a\u200b <code>MyReadyValid</code>\u3002 \u200b\u7531\u4e8e\u200b\u5b83\u200b\u66f4\u6539\u200b\u4e86\u200b <code>Chisel</code> \u200b\u7c7b\u578b\u200b\u4ee5\u200b\u7701\u7565\u200b\u4e24\u4e2a\u200b <code>bits</code> \u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u56e0\u6b64\u200b <code>bits</code> \u200b\u5b57\u6bb5\u200b\u672a\u200b\u8fde\u63a5\u200b\u3002</p> <pre><code>import experimental.dataview._\nclass MyDecoupledOtherBits extends MyReadyValid {\n  val bits = UInt(32.W)\n}\nclass Example12 extends RawModule {\n  val in  = IO(Flipped(new MyDecoupled))\n  val out = IO(new MyDecoupledOtherBits)\n\n  out := DontCare\n\n  out.viewAsSupertype(new MyReadyValid) :&lt;&gt;= in.viewAsSupertype(new MyReadyValid)\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b <code>bits</code> \u200b\u5b57\u6bb5\u200b\u662f\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u3002</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example12(   // &lt;stdin&gt;:3:10\n  input         in_valid,   // connectable.md:377:15\n  input  [31:0] in_bits,    // connectable.md:377:15\n  input         out_ready,  // connectable.md:378:15\n  output        in_ready,   // connectable.md:377:15\n                out_valid,  // connectable.md:378:15\n  output [31:0] out_bits    // connectable.md:378:15\n);\n\n  assign in_ready = out_ready;  // &lt;stdin&gt;:3:10\n  assign out_valid = in_valid;  // &lt;stdin&gt;:3:10\n  assign out_bits = 32'h0;  // &lt;stdin&gt;:3:10, connectable.md:380:7\nendmodule\n</code></pre> <p>\u200b\u7b2c\u4e8c\u4e2a\u200b\u793a\u4f8b\u200b\u5c06\u200b\u4f7f\u7528\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u548c\u200b <code>.waive(_.bits)</code> \u200b\u5c06\u200b\u5b83\u4eec\u200b\u8fde\u63a5\u200b\u4e3a\u200b <code>MyReadyValid</code>\u3002 \u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u7531\u4e8e\u200b\u9759\u6001\u200b\u8f6c\u6362\u200b\u4e0d\u4f1a\u200b\u66f4\u6539\u200b Chisel \u200b\u7c7b\u578b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8fde\u63a5\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u6d88\u8d39\u8005\u200b\u548c\u200b\u751f\u4ea7\u8005\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>bits</code> \u200b\u5b57\u200b\u6bb5\u200b\u3002 \u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5b83\u4eec\u200b\u5728\u7ed3\u6784\u4e0a\u200b\u662f\u200b\u7b49\u6548\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5b83\u4eec\u200b\u5339\u914d\u200b\u5e76\u200b\u8fde\u63a5\u200b\u3002 <code>waive(_.bits)</code> \u200b\u4e0d\u200b\u6267\u884c\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u4e9b\u200b\u4f4d\u200b\u4e0d\u662f\u200b\u60ac\u7a7a\u200b\u7684\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u662f\u200b\u672a\u200b\u8fde\u63a5\u200b\u7684\u200b\u3002</p> <pre><code>import experimental.dataview._\nclass Example13 extends RawModule {\n  val in  = IO(Flipped(new MyDecoupled))\n  val out = IO(new MyDecoupledOtherBits)\n\n  out := DontCare\n\n  out.waiveAs[MyReadyValid](_.bits) :&lt;&gt;= in.waiveAs[MyReadyValid](_.bits)\n}\n</code></pre> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c<code>bits</code> \u200b\u5b57\u6bb5\u200b\u662f\u200b\u8fde\u63a5\u200b\u7684\u200b\uff0c\u200b\u5373\u4f7f\u200b\u5b83\u4eec\u200b\u88ab\u200b\u653e\u5f03\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u653e\u5f03\u200b\u53ea\u662f\u200b\u6539\u53d8\u200b\u5982\u679c\u200b\u5b83\u4eec\u200b\u4e22\u5931\u200b\u5219\u200b\u662f\u5426\u200b\u5e94\u8be5\u200b\u629b\u51fa\u200b\u9519\u8bef\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5982\u679c\u200b\u5b83\u4eec\u200b\u5728\u7ed3\u6784\u4e0a\u200b\u7b49\u6548\u200b\u5219\u200b\u4e0d\u200b\u8fde\u63a5\u200b\u5b83\u4eec\u200b\u3002 \u200b\u8981\u200b\u59cb\u7ec8\u200b\u5ffd\u7565\u200b\u8fde\u63a5\u200b\uff0c\u200b\u8bf7\u200b\u5728\u200b\u4e00\u4fa7\u200b\u4f7f\u7528\u200b <code>exclude</code>\uff0c\u200b\u5e76\u200b\u5728\u200b\u53e6\u4e00\u4fa7\u200b\u4f7f\u7528\u200b <code>exclude</code> \u200b\u6216\u200b <code>waive</code>\u3002</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example13(   // &lt;stdin&gt;:3:10\n  input         in_valid,   // connectable.md:399:15\n  input  [31:0] in_bits,    // connectable.md:399:15\n  input         out_ready,  // connectable.md:400:15\n  output        in_ready,   // connectable.md:399:15\n                out_valid,  // connectable.md:400:15\n  output [31:0] out_bits    // connectable.md:400:15\n);\n\n  assign in_ready = out_ready;  // &lt;stdin&gt;:3:10\n  assign out_valid = in_valid;  // &lt;stdin&gt;:3:10\n  assign out_bits = in_bits;    // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_42","title":"\u901a\u8fc7\u200b\u5ffd\u7565\u200b\u591a\u4f59\u200b\u7684\u200b\u6210\u5458\u200b\u5c06\u200b\u5b50\u7c7b\u200b\u4e0e\u200b\u8d85\u7c7b\u200b\u8fde\u63a5","text":"<p>\u200b\u6ce8\u610f\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>.viewAsSupertype</code> \u200b\u4f1a\u200b\u66f4\u597d\u200b\u3002</p> <p>\u200b\u5728\u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>:&lt;&gt;=</code> \u200b\u901a\u8fc7\u200b\u653e\u5f03\u200b <code>bits</code> \u200b\u6210\u5458\u200b\u628a\u200b <code>MyReadyValid</code> \u200b\u8fde\u63a5\u200b\u5230\u200b <code>MyDecoupled</code>\u3002</p> <pre><code>class MyReadyValid extends Bundle {\n  val valid = Bool()\n  val ready = Flipped(Bool())\n}\nclass MyDecoupled extends MyReadyValid {\n  val bits = UInt(32.W)\n}\nclass Example5 extends RawModule {\n  val in  = IO(Flipped(new MyDecoupled))\n  val out = IO(new MyReadyValid)\n  out :&lt;&gt;= in.waiveAs[MyReadyValid](_.bits)\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u751f\u6210\u200b\u4e86\u200b\u4e0b\u9762\u200b\u7684\u200b verilog, <code>ready</code> \u200b\u548c\u200b <code>valid</code> \u200b\u662f\u200b\u8fde\u63a5\u200b\u7684\u200b, \u200b\u7136\u540e\u200b <code>bits</code> \u200b\u88ab\u5ffd\u7565\u4e86\u200b:</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example5(    // &lt;stdin&gt;:3:10\n  input         in_valid,   // connectable.md:429:15\n  input  [31:0] in_bits,    // connectable.md:429:15\n  input         out_ready,  // connectable.md:430:15\n  output        in_ready,   // connectable.md:429:15\n                out_valid   // connectable.md:430:15\n);\n\n  assign in_ready = out_ready;  // &lt;stdin&gt;:3:10\n  assign out_valid = in_valid;  // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_43","title":"\u8fde\u63a5\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u7c7b","text":"<p>\u200b\u6ce8\u610f\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>.viewAsSupertype</code> \u200b\u4f1a\u200b\u66f4\u597d\u200b\u3002</p> <p>\u200b\u8bf7\u200b\u6ce8\u610f\u200b\uff0c\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26\u200b\u8981\u6c42\u200b\u6d88\u8d39\u8005\u200b\u548c\u200b\u751f\u4ea7\u5546\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b Scala \u200b\u7c7b\u578b\u200b\uff0c\u200b\u4ee5\u200b\u9f13\u52b1\u200b\u9759\u6001\u200b\u6355\u83b7\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u8fde\u63a5\u200b\u4e4b\u524d\u200b\uff0c\u200b\u5b83\u4eec\u200b\u59cb\u7ec8\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u8f6c\u6362\u200b\u5230\u200b <code>Data</code> \u200b\u6216\u200b\u5176\u4ed6\u200b\u5e38\u89c1\u200b\u7684\u200b\u8d85\u7c7b\u200b\u3002</p> <p>\u200b\u5728\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>:&lt;&gt;=</code> \u200b\u548c\u200b <code>waiveAs</code> \u200b\u6765\u200b\u8fde\u63a5\u200b <code>MyReadyValid</code> \u200b\u7684\u200b\u4e24\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u5b50\u7c7b\u200b\u3002</p> <pre><code>class HasBits extends MyReadyValid {\n  val bits = UInt(32.W)\n}\nclass HasEcho extends MyReadyValid {\n  val echo = Flipped(UInt(32.W))\n}\nclass Example7 extends RawModule {\n  val in  = IO(Flipped(new HasBits))\n  val out = IO(new HasEcho)\n  out.waiveAs[MyReadyValid](_.echo) :&lt;&gt;= in.waiveAs[MyReadyValid](_.bits)\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u751f\u6210\u200b\u4e86\u200b\u4e0b\u9762\u200b\u7684\u200b verilog, <code>ready</code> \u200b\u548c\u200b <code>valid</code> \u200b\u662f\u200b\u8fde\u63a5\u200b\u7684\u200b, \u200b\u7136\u540e\u200b <code>bits</code> \u200b\u548c\u200b <code>echo</code> \u200b\u88ab\u5ffd\u7565\u4e86\u200b:</p> <pre><code>// Generated by CIRCT firtool-1.44.0\nmodule Example7(    // &lt;stdin&gt;:3:10\n  input         in_valid,   // connectable.md:455:15\n  input  [31:0] in_bits,    // connectable.md:455:15\n  input         out_ready,  // connectable.md:456:15\n  input  [31:0] out_echo,   // connectable.md:456:15\n  output        in_ready,   // connectable.md:455:15\n                out_valid   // connectable.md:456:15\n);\n\n  assign in_ready = out_ready;  // &lt;stdin&gt;:3:10\n  assign out_valid = in_valid;  // &lt;stdin&gt;:3:10\nendmodule\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#faq","title":"FAQ","text":"<p>\u200b\u6211\u200b\u5982\u4f55\u200b\u5c3d\u53ef\u80fd\u200b\u7075\u6d3b\u200b\u5730\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b\u9879\u76ee\u200b\uff08\u200b\u5c3d\u200b\u4f60\u200b\u6240\u80fd\u200b\uff0c\u200b\u4f46\u200b\u6c38\u8fdc\u200b\u4e0d\u8981\u200b\u51fa\u9519\u200b\uff09</p> <p>\u200b\u7528\u200b <code>.unsafe</code>\u3002</p> <pre><code>class ExampleUnsafe extends RawModule {\n  val in  = IO(Flipped(new Bundle { val foo = Bool(); val bar = Bool() }))\n  val out = IO(new Bundle { val baz = Bool(); val bar = Bool() })\n  out.unsafe :&lt;&gt;= in.unsafe // bar is connected, and nothing errors\n}\n</code></pre> <p>\u200b\u5982\u4f55\u200b\u8fde\u63a5\u200b\u4e24\u4e2a\u200b\u9879\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5173\u5fc3\u200b scala \u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u7b49\u6548\u200b\uff1f</p> <p>\u200b\u7528\u200b <code>.as</code>\u3002</p> <pre><code>class ExampleAs extends RawModule {\n  val in  = IO(Flipped(new Bundle { val foo = Bool(); val bar = Bool() }))\n  val out = IO(new Bundle { val foo = Bool(); val bar = Bool() })\n  // foo and bar are connected, although Scala types aren't the same\n  out.as[Data] :&lt;&gt;= in.as[Data]\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#decoders","title":"\u8bd1\u7801\u5668\u200b\uff08Decoders\uff09","text":"<p>\u200b\u5728\u200b\u590d\u6742\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u4f1a\u200b\u4ece\u200b\u6765\u81ea\u200b\u6570\u636e\u603b\u7ebf\u200b\u7684\u200b\u5927\u200b <code>UInt</code> \u200b\u4e2d\u200b\u8bc6\u522b\u200b\u67d0\u4e9b\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u8fd9\u79cd\u200b\u89c2\u5bdf\u200b\u5c06\u200b\u64cd\u4f5c\u200b\u5206\u6d3e\u200b\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u7ba1\u9053\u200b\u9636\u6bb5\u200b\u3002 \u200b\u6267\u884c\u200b\u6b64\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7535\u8def\u200b\u53ef\u200b\u79f0\u4e3a\u200b\u201c\u200b\u8bd1\u7801\u5668\u200b\u201d\uff0c\u200b\u4f8b\u5982\u200b\u603b\u7ebf\u200b\u4ea4\u53c9\u5f00\u5173\u200b\u4e2d\u200b\u7684\u200b\u5730\u5740\u200b\u89e3\u7801\u5668\u200b\u6216\u200b CPU \u200b\u524d\u7aef\u200b\u4e2d\u200b\u7684\u200b\u6307\u4ee4\u200b\u89e3\u7801\u5668\u200b\u3002 Chisel \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5b9e\u7528\u7a0b\u5e8f\u200b\u7c7b\u6765\u200b\u5728\u200b <code>util.exprimental.decode</code> \u200b\u5305\u4e2d\u200b\u751f\u6210\u200b\u5b83\u4eec\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_44","title":"\u57fa\u672c\u200b\u8bd1\u7801\u5668","text":"<p><code>decoder</code> \u200b\u63d0\u4f9b\u200b\u7684\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b API \u200b\u672c\u8d28\u200b\u4e0a\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u7f16\u7801\u200b\u4e86\u200b\u4f60\u200b\u671f\u671b\u200b\u7684\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u7684\u200b\u771f\u503c\u8868\u200b\u3002</p> <pre><code>import chisel3._\nimport chisel3.util.BitPat\nimport chisel3.util.experimental.decode._\n\nclass SimpleDecoder extends Module {\n  val table = TruthTable(\n    Map(\n      BitPat(\"b001\") -&gt; BitPat(\"b?\"),\n      BitPat(\"b010\") -&gt; BitPat(\"b?\"),\n      BitPat(\"b100\") -&gt; BitPat(\"b1\"),\n      BitPat(\"b101\") -&gt; BitPat(\"b1\"),\n      BitPat(\"b111\") -&gt; BitPat(\"b1\")\n    ),\n    BitPat(\"b0\"))\n  val input = IO(Input(UInt(3.W)))\n  val output = IO(Output(UInt(1.W)))\n  output := decoder(input, table)\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#decodertable","title":"DecoderTable","text":"<p>\u200b\u5f53\u200b\u8bd1\u7801\u200b\u7ed3\u679c\u200b\u5305\u542b\u200b\u591a\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5b57\u6bb5\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b\u542b\u4e49\u200b\u65f6\u200b\uff0c\u200b\u771f\u503c\u8868\u200b\u5f88\u5feb\u200b\u5c31\u200b\u53d8\u5f97\u200b\u96be\u4ee5\u200b\u7ef4\u62a4\u200b\u8d77\u6765\u200b\u3002<code>DecoderTable1</code> API \u200b\u88ab\u200b\u8bbe\u8ba1\u200b\u51fa\u6765\u200b\u7528\u200b\u7ed3\u6784\u5316\u200b\u7684\u200b\u5b9a\u4e49\u200b\u6765\u200b\u751f\u6210\u200b\u8bd1\u7801\u200b\u8868\u200b\u3002</p> <p><code>DecodePattern</code> trait \u200b\u662f\u200b\u7ed3\u6784\u5316\u200b\u4fe1\u606f\u200b\u548c\u200b\u5b83\u200b\u7684\u200b\u7f16\u7801\u200b\u4e4b\u95f4\u200b\u7684\u200b\u6865\u6881\u200b\u3002\u200b\u6210\u5458\u200b <code>bitPat</code> \u200b\u5b9a\u4e49\u200b\u4e86\u200b\u8bd1\u7801\u200b\u771f\u503c\u8868\u200b\u7684\u200b\u8f93\u5165\u200b <code>BitPat</code>\uff0c\u200b\u5176\u4ed6\u200b\u7684\u200b\u6210\u5458\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5b9a\u4e49\u200b\u6765\u200b\u5305\u542b\u200b\u4e00\u4e9b\u200b\u7ed3\u6784\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u4e3a\u4e86\u200b\u751f\u6210\u200b\u8f93\u51fa\u200b\u4e00\u4fa7\u200b\u7684\u200b\u8bd1\u7801\u200b\u771f\u503c\u8868\u200b\uff0c\u200b\u8981\u200b\u4f7f\u7528\u200b <code>DecodeField</code> trait\u3002\u200b\u7ed9\u5b9a\u200b\u4e00\u4e2a\u200b <code>DecodePattern</code> \u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c<code>genTable</code> \u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u9700\u8981\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</p> <pre><code>import chisel3.util.BitPat\nimport chisel3.util.experimental.decode._\n\ncase class Pattern(val name: String, val code: BigInt) extends DecodePattern {\n  def bitPat: BitPat = BitPat(\"b\" + code.toString(2))\n}\n\nobject NameContainsAdd extends BoolDecodeField[Pattern] {\n  def name = \"name contains 'add'\"\n  def genTable(i: Pattern) = if (i.name.contains(\"add\")) y else n\n}\n</code></pre> <p>\u200b\u7136\u540e\u200b\uff0c\u200b\u6240\u6709\u200b\u7684\u200b <code>DecodePattern</code> \u200b\u6848\u4f8b\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u6216\u200b\u4ece\u200b\u5916\u90e8\u200b\u6e90\u200b\u8bfb\u53d6\u200b\u3002\u200b\u4f7f\u7528\u200b\u6240\u6709\u200b\u7684\u200b <code>DecodeField</code> \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5f88\u200b\u5bb9\u6613\u200b\u5730\u200b\u751f\u6210\u200b\u89e3\u7801\u5668\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u76f8\u5e94\u200b\u7684\u200b <code>DecodeFields</code> \u200b\u8bfb\u53d6\u200b\u8f93\u51fa\u200b\u3002</p> <pre><code>import chisel3._\nimport chisel3.util.experimental.decode._\n\nclass SimpleDecodeTable extends Module {\n  val allPossibleInputs = Seq(Pattern(\"addi\", BigInt(\"0x2\")) /* can be generated */)\n  val decodeTable = new DecodeTable(allPossibleInputs, Seq(NameContainsAdd))\n\n  val input = IO(Input(UInt(4.W)))\n  val isAddType = IO(Output(Bool()))\n  val decodeResult = decodeTable.decode(input)\n  isAddType := decodeResult(NameContainsAdd)\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#intrinsics","title":"Intrinsics","text":"<p>Chisel Intrinsics \u200b\u7528\u4e8e\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u5b9e\u73b0\u200b\u5b9a\u4e49\u200b\u529f\u80fd\u200b\u3002Intrinsics \u200b\u4e3a\u200b\u7279\u5b9a\u200b\u7f16\u8bd1\u5668\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u4ee5\u5e93\u200b\u4ee3\u7801\u200b\u65e0\u6cd5\u200b\u5b9e\u73b0\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6269\u5c55\u200b\u8bed\u8a00\u200b\u529f\u80fd\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u5b9a\u4e49\u200b\u4e3a\u200b <code>IntrinicModule</code> \u200b\u7684\u200b\u6a21\u5757\u200b\u5c06\u200b\u88ab\u200b\u5b9e\u4f8b\u200b\u5316\u4e3a\u200b\u6b63\u5e38\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f46\u662f\u200b Intrinsics \u200b\u5b57\u6bb5\u200b\u5c06\u200b\u901a\u4fe1\u200b\u4e0e\u200b\u7f16\u8bd1\u5668\u200b\u901a\u4fe1\u200b\u7528\u4e8e\u200b\u5b9e\u73b0\u200b\u6a21\u5757\u200b\u7684\u200b\u54ea\u79cd\u200b\u529f\u80fd\u200b\u3002\u200b\u5b9e\u73b0\u200b\u53ef\u80fd\u200b\u4e0d\u662f\u200b\u5b9e\u9645\u200b\u6a21\u5757\u200b\uff0c\u200b\u5185\u5728\u200b\u7684\u200b\u6a21\u5757\u200b\u6027\u8d28\u200b\u4ec5\u200b\u7528\u4e8e\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u76ee\u7684\u200b\u3002</p> <p>Intrinsics \u200b\u7684\u200b\u5b9e\u73b0\u200b\u5c06\u200b\u88ab\u200b\u6253\u5b57\u200b\u68c0\u67e5\u200b\u3002\u200b\u5b9e\u73b0\u200b\u8bb0\u5f55\u200b\u4e86\u200b Intrinsics \u200b\u4ec0\u4e48\u200b\u53ef\u7528\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_45","title":"\u53c2\u6570\u200b\u5316","text":"<p>\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u4f20\u9012\u200b\u7ed9\u200b <code>IntModule</code> \u200b\u6784\u9020\u51fd\u6570\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#example","title":"Example","text":"<p>\u200b\u4ee5\u4e0b\u200b\u4e3a\u200b\u201cOther Intrinsic\u201d\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b Intrinsic \u200b\u6a21\u5757\u200b\u3002\u200b\u5b83\u200b\u91c7\u7528\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b\u201cSTRING\u201d\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u5177\u6709\u200b\u591a\u4e2a\u200b\u7aef\u53e3\u200b\u3002</p> <pre><code>import chisel3.experimental.IntrinsicModule\n\nclass ExampleIntrinsicModule(str: String) extends IntrinsicModule(\n  \"OtherIntrinsic\",\n  Map(\"STRING\" -&gt; str)) {\n  val foo = IO(new Bundle() {\n    val in = Input(UInt())\n    val out = Output(UInt(32.W))\n  })\n}\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#annotations","title":"Annotations","text":"<p><code>Annotation</code> \u200b\u662f\u200b\u4e0e\u200b FIRRTL \u200b\u7535\u8def\u200b\u4e2d\u200b\u96f6\u4e2a\u200b\u6216\u200b\u591a\u4e2a\u200b\u201c\u200b\u4e8b\u7269\u200b\u201d\u200b\u76f8\u5173\u8054\u200b\u7684\u200b\u5143\u200b\u6570\u636e\u200b\u5bb9\u5668\u200b\u3002 \u200b\u901a\u5e38\u200b\uff0c<code>Annotation</code> \u200b\u7528\u4e8e\u200b\u5c06\u200b\u4fe1\u606f\u200b\u4ece\u200b Chisel \u200b\u4f20\u9012\u200b\u5230\u200b\u7279\u5b9a\u200b\u7684\u200b\u5df2\u77e5\u200b FIRRTL <code>transform</code>\u3002 \u200b\u901a\u8fc7\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u6ce8\u91ca\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u89c6\u4e3a\u200b\u7279\u5b9a\u200b <code>Transform</code> \u200b\u6d88\u8017\u200b\u7684\u200b\u201c\u200b\u53c2\u6570\u200b\u201d\u3002</p> <p><code>Annotation</code> \u200b\u65e8\u5728\u200b\u6210\u4e3a\u200b Chisel \u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u7531\u200b\u7528\u6237\u200b\u624b\u52a8\u200b\u6784\u5efa\u200b\u6216\u200b\u76f4\u63a5\u200b\u4ea4\u4e92\u200b\u3002 \u200b\u76f8\u53cd\u200b\uff0c\u200b\u5b83\u4eec\u200b\u65e8\u5728\u200b\u901a\u8fc7\u200b\u73b0\u6709\u200b\u6216\u200b\u65b0\u200b\u7684\u200b Chisel API \u200b\u6765\u200b\u4f7f\u7528\u200b\u3002 \u200b\u4f8b\u5982\u200b\uff0c<code>dontTouch</code> API \u200b\u4e3a\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u6307\u793a\u200b\u4e0d\u200b\u5e94\u200b\u4f18\u5316\u200b\u7ebf\u8def\u200b\u6216\u200b\u7aef\u53e3\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002 \u200b\u8be5\u200b API \u200b\u7531\u200b <code>DontTouchAnnotation</code> \u200b\u652f\u6301\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u200b\u5bf9\u200b Chisel \u200b\u7528\u6237\u200b\u662f\u200b\u9690\u85cf\u200b\u7684\u200b\u3002</p> <p>\u200b\u6240\u6709\u200b\u652f\u6301\u200b\u7684\u200b <code>Annotation</code> \u200b\u7684\u200b\u5217\u8868\u200b\u4f5c\u4e3a\u200b circt.llvm.org \u200b\u4e0a\u200b FIRRTL \u200b\u6587\u6863\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u8fdb\u884c\u200b\u7ef4\u62a4\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#source-locators","title":"\u6e90\u200b\u5b9a\u4f4d\u5668\u200b\uff08Source Locators\uff09","text":"<p>\u200b\u8be6\u7ec6\u200b\u9610\u8ff0\u200b Chisel \u200b\u8bbe\u8ba1\u200b\u5e76\u200b\u53d1\u51fa\u200b FIRRTL \u200b\u6587\u4ef6\u200b\u6216\u200b Verilog \u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0cChisel \u200b\u5c06\u200b\u81ea\u52a8\u200b\u6dfb\u52a0\u200b\u6e90\u200b\u5b9a\u4f4d\u5668\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5b9a\u4f4d\u5668\u200b\u5c06\u200b\u5176\u200b\u5f15\u7528\u200b\u5230\u200b\u5305\u542b\u200b\u76f8\u5e94\u200b\u7684\u200b Chisel \u200b\u4ee3\u7801\u200b\u7684\u200b Scala \u200b\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u5728\u200b FIRRTL \u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u770b\u4e0a\u53bb\u200b\u50cf\u662f\u200b\uff1a</p> <pre><code>wire w : UInt&lt;3&gt; @[src/main/scala/MyProject/MyFile.scala 1210:21]\n</code></pre> <p>\u200b\u5728\u200b Verilog \u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u770b\u4e0a\u53bb\u200b\u50cf\u662f\u200b\uff1a</p> <pre><code>wire [2:0] w; // @[src/main/scala/MyProject/MyFile.scala 1210:21]\n</code></pre> <p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5305\u542b\u200b\u8c03\u7528\u200b JVM \u200b\u7684\u200b\u6587\u4ef6\u200b\u7684\u200b\u76f8\u5bf9\u8def\u5f84\u200b\u3002 \u200b\u8981\u200b\u66f4\u6539\u200b\u76f8\u5bf9\u8def\u5f84\u200b\u7684\u200b\u8ba1\u7b97\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u8bf7\u200b\u8bbe\u7f6e\u200b Java \u200b\u7cfb\u7edf\u200b\u5c5e\u6027\u200b <code>-Dchisel.project.root=/absolute/path/to/root</code>\u3002 \u200b\u8be5\u200b\u9009\u9879\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>sbt (sbt -Dchisel.project.root=/absolute/path/to/root)</code>\u3002 \u200b\u5728\u200b <code>build.sbt</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u503c\u200b\u5c06\u200b\u4e0d\u8d77\u4f5c\u7528\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u9700\u8981\u200b\u4f20\u9012\u200b\u7ed9\u200b\u8c03\u7528\u200b <code>sbt</code> \u200b\u7684\u200b JVM\uff08\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f8\u53cd\u200b\uff09\u3002 \u200b\u6211\u4eec\u200b\u9884\u8ba1\u200b\u8fd9\u4ec5\u200b\u4e0e\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u66f4\u200b\u591a\u200b\u5b9a\u5236\u200b\u7684\u200b\u53d1\u5e03\u200b\u7248\u672c\u200b\u76f8\u5173\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_46","title":"\u6df1\u5165\u200b\u4e86\u89e3\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u7b26","text":"<p>Chisel \u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u8fde\u63a5\u200b\u8fd0\u7b97\u7b26\u200b <code>:=</code> \u200b\u548c\u200b <code>&lt;&gt;</code>\u3002\u200b\u672c\u200b\u6587\u6863\u200b\u5bf9\u200b\u4e24\u8005\u200b\u7684\u200b\u5dee\u5f02\u200b\u4ee5\u53ca\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u6216\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u66f4\u200b\u6df1\u5165\u200b\u7684\u200b\u89e3\u91ca\u200b\u3002\u200b\u4f7f\u7528\u200b <code>DecoupledIO</code> \u200b\u7684\u200b Scastie \u200b\u5b9e\u4f8b\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u8bc1\u660e\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u5dee\u5f02\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_47","title":"\u5b9e\u9a8c\u200b\u8bbe\u7f6e","text":"<pre><code>// Imports used by the following examples\nimport chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n</code></pre> <p>\u200b\u5b9e\u9a8c\u200b\u7684\u200b\u56fe\u8868\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u67e5\u770b\u200b\u3002</p> <p></p> <pre><code>class Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(DecoupledIO(UInt(8.W)))\n  val out = DecoupledIO(UInt(8.W))\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  // connect Producer to IO\n  p.io.a &lt;&gt; io.in\n  // connect producer to consumer\n  c.io.a &lt;&gt; p.io.b\n  // connect consumer to IO\n  io.out &lt;&gt; c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.b &lt;&gt; io.a\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u7684\u200b Verilog \u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// res0: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module PipelineStage(    // &lt;stdin&gt;:3:10, :10:10\n//   input        io_a_valid,   // connection-operators.md:37:14\n//   input  [7:0] io_a_bits,    // connection-operators.md:37:14\n//   input        io_b_ready,   // connection-operators.md:37:14\n//   output       io_a_ready,   // connection-operators.md:37:14\n//                io_b_valid,   // connection-operators.md:37:14\n//   output [7:0] io_b_bits // connection-operators.md:37:14\n// );\n// \n//   assign io_a_ready = io_b_ready;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_valid = io_a_valid;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_bits = io_a_bits;  // &lt;stdin&gt;:3:10, :10:10\n// endmodule\n// \n// module Wrapper(  // &lt;stdin&gt;:17:10\n//   input        clock,    // &lt;stdin&gt;:18:11\n//                reset,    // &lt;stdin&gt;:19:11\n//                io_in_valid,  // connection-operators.md:21:14\n//   input  [7:0] io_in_bits,   // connection-operators.md:21:14\n//   input        io_out_ready, // connection-operators.md:21:14\n//   output       io_in_ready,  // connection-operators.md:21:14\n//                io_out_valid, // connection-operators.md:21:14\n//   output [7:0] io_out_bits   // connection-operators.md:21:14\n// );\n// \n//   wire       _c_io_a_ready;  // connection-operators.md:26:17\n//   wire       _p_io_b_valid;  // connection-operators.md:25:17\n//   wire [7:0] _p_io_b_bits;   // connection-operators.md:25:17\n//   PipelineStage p (  // connection-operators.md:25:17\n//     .io_a_valid (io_in_valid),\n//     .io_a_bits  (io_in_bits),\n//     .io_b_ready (_c_io_a_ready), // connection-operators.md:26:17\n//     .io_a_ready (io_in_ready),\n//     .io_b_valid (_p_io_b_valid),\n//     .io_b_bits  (_p_io_b_bits)\n//   );\n//   PipelineStage c (  // connection-operators.md:26:17\n//     .io_a_valid (_p_io_b_valid), // connection-operators.md:25:17\n//     .io_a_bits  (_p_io_b_bits),  // connection-operators.md:25:17\n//     .io_b_ready (io_out_ready),\n//     .io_a_ready (_c_io_a_ready),\n//     .io_b_valid (io_out_valid),\n//     .io_b_bits  (io_out_bits)\n//   );\n// endmodule\n// \n// \"\"\"\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#1","title":"\u6982\u5ff5\u200b 1\uff1a&lt;&gt; \u200b\u662f\u200b\u53ef\u200b\u4ea4\u6362\u200b\u7684","text":"<p>\u200b\u672c\u200b\u5b9e\u9a8c\u200b\u662f\u200b\u5229\u7528\u200b\u4e0a\u8ff0\u200b\u5b9e\u9a8c\u200b\u6765\u200b\u6d4b\u8bd5\u200b <code>&lt;&gt;</code> \u200b\u7684\u200b\u529f\u80fd\u200b\u3002</p> <p>\u200b\u5b9e\u73b0\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u9700\u8981\u200b\u7ffb\u8f6c\u200b <code>&lt;&gt;</code> \u200b\u8fd0\u7b97\u7b26\u200b\u7684\u200b RHS \u200b\u548c\u200b LHS\uff0c\u200b\u5e76\u200b\u67e5\u770b\u200b <code>&lt;&gt;</code> \u200b\u5c06\u200b\u5982\u4f55\u200b\u53cd\u5e94\u200b\u3002\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b Scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/Shorla/LVhlbkFQQnq7X3trHfgZZQ\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(DecoupledIO(UInt(8.W)))\n  val out = DecoupledIO(UInt(8.W))\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  // connect producer to I/O\n  io.in &lt;&gt; p.io.a\n  // connect producer  to consumer\n  p.io.b &lt;&gt; c.io.a\n  // connect consumer to I/O\n  c.io.b &lt;&gt; io.out\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.a &lt;&gt; io.b\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u7684\u200b Verilog \u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// res2: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module PipelineStage(    // &lt;stdin&gt;:3:10, :10:10\n//   input        io_a_valid,   // connection-operators.md:83:14\n//   input  [7:0] io_a_bits,    // connection-operators.md:83:14\n//   input        io_b_ready,   // connection-operators.md:83:14\n//   output       io_a_ready,   // connection-operators.md:83:14\n//                io_b_valid,   // connection-operators.md:83:14\n//   output [7:0] io_b_bits // connection-operators.md:83:14\n// );\n// \n//   assign io_a_ready = io_b_ready;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_valid = io_a_valid;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_bits = io_a_bits;  // &lt;stdin&gt;:3:10, :10:10\n// endmodule\n// \n// module Wrapper(  // &lt;stdin&gt;:17:10\n//   input        clock,    // &lt;stdin&gt;:18:11\n//                reset,    // &lt;stdin&gt;:19:11\n//                io_in_valid,  // connection-operators.md:67:14\n//   input  [7:0] io_in_bits,   // connection-operators.md:67:14\n//   input        io_out_ready, // connection-operators.md:67:14\n//   output       io_in_ready,  // connection-operators.md:67:14\n//                io_out_valid, // connection-operators.md:67:14\n//   output [7:0] io_out_bits   // connection-operators.md:67:14\n// );\n// \n//   wire       _c_io_a_ready;  // connection-operators.md:72:17\n//   wire       _p_io_b_valid;  // connection-operators.md:71:17\n//   wire [7:0] _p_io_b_bits;   // connection-operators.md:71:17\n//   PipelineStage p (  // connection-operators.md:71:17\n//     .io_a_valid (io_in_valid),\n//     .io_a_bits  (io_in_bits),\n//     .io_b_ready (_c_io_a_ready), // connection-operators.md:72:17\n//     .io_a_ready (io_in_ready),\n//     .io_b_valid (_p_io_b_valid),\n//     .io_b_bits  (_p_io_b_bits)\n//   );\n//   PipelineStage c (  // connection-operators.md:72:17\n//     .io_a_valid (_p_io_b_valid), // connection-operators.md:71:17\n//     .io_a_bits  (_p_io_b_bits),  // connection-operators.md:71:17\n//     .io_b_ready (io_out_ready),\n//     .io_a_ready (_c_io_a_ready),\n//     .io_b_valid (io_out_valid),\n//     .io_b_bits  (io_out_bits)\n//   );\n// endmodule\n// \n// \"\"\"\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_48","title":"\u7ed3\u8bba\u200b\uff1a","text":"<p>Verilog \u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u6ca1\u6709\u200b\u4ea7\u751f\u200b\u9519\u8bef\u200b\uff0c\u200b\u8868\u660e\u200b <code>&lt;&gt;</code> \u200b\u8fd0\u7b97\u7b26\u200b\u662f\u200b\u53ef\u200b\u4ea4\u6362\u200b\u7684\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#2-rhs-lhs-lhs","title":"\u6982\u5ff5\u200b 2\uff1a:= \u200b\u8868\u793a\u200b\u5206\u914d\u200b\u6765\u81ea\u200b RHS \u200b\u7684\u200b\u6240\u6709\u200b LHS \u200b\u4fe1\u53f7\u200b\uff0c\u200b\u65e0\u8bba\u200b LHS \u200b\u4e0a\u200b\u7684\u200b\u65b9\u5411\u200b\u5982\u4f55\u200b\u3002","text":"<p>\u200b\u4f7f\u7528\u200b\u4e0e\u200b\u4e0a\u9762\u200b\u76f8\u540c\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6211\u4eec\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b\u6d4b\u8bd5\u200b <code>:=</code> \u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b <code>&lt;&gt;</code> \u200b\u7684\u200b\u6240\u6709\u200b\u5b9e\u4f8b\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>:=</code>\u3002\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b Scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/Shorla/o1ShdaY3RWKf0IIFwwQ1UQ/1\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(DecoupledIO(UInt(8.W)))\n  val out = DecoupledIO(UInt(8.W))\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  // connect producer to I/O\n  p.io.a := io.in\n  // connect producer  to consumer\n  c.io.a := p.io.b\n  // connect consumer to I/O\n  io.out := c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.a := io.b\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u7684\u200b Verilog \u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// chisel3.package$ChiselException: Connection between sink (PipelineStage.io.a: IO[DecoupledIO]) and source (PipelineStage.io.b: IO[DecoupledIO]) failed @: .bitsio.a.bits in PipelineStage cannot be written from module PipelineStage.\n//  at ... ()\n//  at repl.MdocSession$MdocApp3$PipelineStage.&lt;init&gt;(connection-operators.md:133)\n//  at repl.MdocSession$MdocApp3$Wrapper$$anonfun$30$$anonfun$apply$20.apply(connection-operators.md:117)\n//  at repl.MdocSession$MdocApp3$Wrapper$$anonfun$30$$anonfun$apply$20.apply(connection-operators.md:117)\n//  at chisel3.Module$.do_apply(Module.scala:54)\n//  at repl.MdocSession$MdocApp3$Wrapper$$anonfun$30.apply(connection-operators.md:117)\n//  at repl.MdocSession$MdocApp3$Wrapper$$anonfun$30.apply(connection-operators.md:117)\n//  at chisel3.internal.plugin.package$.autoNameRecursively(package.scala:33)\n//  at repl.MdocSession$MdocApp3$Wrapper.&lt;init&gt;(connection-operators.md:117)\n//  at repl.MdocSession$MdocApp3$$anonfun$39$$anonfun$apply$25.apply(connection-operators.md:141)\n//  at repl.MdocSession$MdocApp3$$anonfun$39$$anonfun$apply$25.apply(connection-operators.md:141)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_49","title":"\u7ed3\u8bba\u200b\uff1a","text":"<p><code>:=</code> \u200b\u8fd0\u7b97\u7b26\u200b\u5728\u200b LHS \u200b\u4e0a\u200b\u9010\u4e2a\u200b\u5b57\u200b\u6bb5\u200b\uff0c\u200b\u5e76\u200b\u8bd5\u56fe\u200b\u5c06\u200b\u5176\u200b\u8fde\u63a5\u200b\u5230\u200b\u6765\u81ea\u200b RHS \u200b\u7684\u200b\u76f8\u540c\u200b\u547d\u540d\u200b\u4fe1\u53f7\u200b\u3002\u200b\u5982\u679c\u200b LHS \u200b\u4e0a\u200b\u7684\u200b\u67d0\u4e2a\u200b\u4fe1\u53f7\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u8f93\u5165\u200b\uff0c\u200b\u6216\u8005\u200b RHS \u200b\u4e0a\u200b\u7684\u200b\u76f8\u5e94\u200b\u4fe1\u53f7\u200b\u662f\u200b\u8f93\u51fa\u200b\uff0c\u200b\u5219\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u5982\u200b\u4e0a\u200b\u6240\u793a\u200b\u7684\u200b\u9519\u8bef\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#3-dontcare-wires","title":"\u6982\u5ff5\u200b 3\uff1a\u200b\u603b\u662f\u200b\u4f7f\u7528\u200b := \u200b\u6765\u200b\u628a\u200b DontCare \u200b\u8d4b\u503c\u200b\u7ed9\u200b Wires","text":"<p>\u200b\u5c06\u200b <code>DontCare</code> \u200b\u5206\u914d\u200b\u7ed9\u200b\u672a\u5b9a\u200b\u5411\u200b\u7684\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u662f\u5426\u200b\u5e94\u200b\u4f7f\u7528\u200b <code>:=</code> \u200b\u6216\u200b <code>&lt;&gt;</code> \uff1f\u200b\u6211\u4eec\u200b\u5c06\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u627e\u5230\u200b\u7b54\u6848\u200b\uff1a\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b Scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/Shorla/ZIGsWcylRqKJhZCkKWlSIA/1\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(DecoupledIO(UInt(8.W)))\n  val out = DecoupledIO(UInt(8.W))\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  //connect Producer to IO\n  io.in := DontCare\n  p.io.a &lt;&gt; DontCare\n  val tmp = Wire(Flipped(DecoupledIO(UInt(8.W))))\n  tmp := DontCare\n  p.io.a &lt;&gt; io.in\n  // connect producer to consumer\n  c.io.a &lt;&gt; p.io.b\n  //connect consumer to IO\n  io.out &lt;&gt; c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.b &lt;&gt; io.a\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u7684\u200b Verilog \u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// res5: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module PipelineStage(    // &lt;stdin&gt;:3:10, :10:10\n//   input        io_a_valid,   // connection-operators.md:183:14\n//   input  [7:0] io_a_bits,    // connection-operators.md:183:14\n//   input        io_b_ready,   // connection-operators.md:183:14\n//   output       io_a_ready,   // connection-operators.md:183:14\n//                io_b_valid,   // connection-operators.md:183:14\n//   output [7:0] io_b_bits // connection-operators.md:183:14\n// );\n// \n//   assign io_a_ready = io_b_ready;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_valid = io_a_valid;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_bits = io_a_bits;  // &lt;stdin&gt;:3:10, :10:10\n// endmodule\n// \n// module Wrapper(  // &lt;stdin&gt;:17:10\n//   input        clock,    // &lt;stdin&gt;:18:11\n//                reset,    // &lt;stdin&gt;:19:11\n//                io_in_valid,  // connection-operators.md:163:14\n//   input  [7:0] io_in_bits,   // connection-operators.md:163:14\n//   input        io_out_ready, // connection-operators.md:163:14\n//   output       io_in_ready,  // connection-operators.md:163:14\n//                io_out_valid, // connection-operators.md:163:14\n//   output [7:0] io_out_bits   // connection-operators.md:163:14\n// );\n// \n//   wire       _c_io_a_ready;  // connection-operators.md:168:17\n//   wire       _p_io_b_valid;  // connection-operators.md:167:17\n//   wire [7:0] _p_io_b_bits;   // connection-operators.md:167:17\n//   PipelineStage p (  // connection-operators.md:167:17\n//     .io_a_valid (io_in_valid),\n//     .io_a_bits  (io_in_bits),\n//     .io_b_ready (_c_io_a_ready), // connection-operators.md:168:17\n//     .io_a_ready (io_in_ready),\n//     .io_b_valid (_p_io_b_valid),\n//     .io_b_bits  (_p_io_b_bits)\n//   );\n//   PipelineStage c (  // connection-operators.md:168:17\n//     .io_a_valid (_p_io_b_valid), // connection-operators.md:167:17\n//     .io_a_bits  (_p_io_b_bits),  // connection-operators.md:167:17\n//     .io_b_ready (io_out_ready),\n//     .io_a_ready (_c_io_a_ready),\n//     .io_b_valid (io_out_valid),\n//     .io_b_bits  (io_out_bits)\n//   );\n// endmodule\n// \n// \"\"\"\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_50","title":"\u7ed3\u8bba\u200b\uff1a","text":"<p>\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b <code>&lt;&gt;</code> \u200b\u5c06\u200b\u672a\u200b\u5904\u7406\u200b\u7684\u200b\u8fde\u7ebf\u200b <code>tmp</code> \u200b\u5206\u914d\u200b\u7ed9\u200b DontCare\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5f97\u5230\u200b\u4e00\u4e2a\u200b\u9519\u8bef\u200b\u3002\u200b\u4f46\u662f\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4e86\u200b <code>:=</code>\uff0c\u200b\u5e76\u4e14\u200b\u6ca1\u6709\u200b\u51fa\u73b0\u200b\u9519\u8bef\u200b\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u5f53\u200b\u4f7f\u7528\u200b <code>:=</code> \u200b\u5c06\u200b\u5bfc\u7ebf\u200b\u5206\u914d\u200b\u7ed9\u200b DontCare \u200b\u65f6\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u53d1\u751f\u200b\u9519\u8bef\u200b\u3002</p> <p>\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5f53\u200b\u628a\u200b DontCare \u200b\u6307\u5b9a\u200b\u7ed9\u200b\u5bfc\u7ebf\u200b\u65f6\u200b\uff0c\u200b\u8bf7\u200b\u59cb\u7ec8\u200b\u4f7f\u7528\u200b <code>:=</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#4-dontcare-ios","title":"\u6982\u5ff5\u200b4\uff1a\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>&lt;&gt;</code> \u200b\u6216\u200b <code>:=</code> \u200b\u5c06\u200b <code>DontCare</code> \u200b\u5206\u914d\u200b\u7ed9\u200b\u6709\u200b\u5411\u200b\u7684\u200b\u4e8b\u7269\u200b\uff08IOs\uff09","text":"<p>\u200b\u5c06\u200b <code>DontCare</code> \u200b\u5206\u914d\u200b\u7ed9\u200b\u5b9a\u5411\u200b\u7684\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u5e94\u8be5\u200b\u4f7f\u7528\u200b <code>:=</code> \u200b\u8fd8\u662f\u200b <code>&lt;&gt;</code> \uff1f\u200b\u6211\u4eec\u200b\u5c06\u200b\u4f7f\u7528\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u627e\u5230\u200b\u7b54\u6848\u200b\uff1a\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b Scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/Shorla/ZIGsWcylRqKJhZCkKWlSIA/1\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(DecoupledIO(UInt(8.W)))\n  val out = DecoupledIO(UInt(8.W))\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  //connect Producer to IO\n  io.in := DontCare\n  p.io.a &lt;&gt; DontCare\n  val tmp = Wire(Flipped(DecoupledIO(UInt(8.W))))\n  tmp := DontCare\n  p.io.a &lt;&gt; io.in\n  // connect producer to consumer\n  c.io.a &lt;&gt; p.io.b\n  //connect consumer to IO\n  io.out &lt;&gt; c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.b &lt;&gt; io.a\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u200b\u793a\u4f8b\u200b\u4e2d\u200b\u770b\u5230\u200b\u751f\u6210\u200b\u7684\u200b Verilog\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// res7: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module PipelineStage(    // &lt;stdin&gt;:3:10, :10:10\n//   input        io_a_valid,   // connection-operators.md:233:14\n//   input  [7:0] io_a_bits,    // connection-operators.md:233:14\n//   input        io_b_ready,   // connection-operators.md:233:14\n//   output       io_a_ready,   // connection-operators.md:233:14\n//                io_b_valid,   // connection-operators.md:233:14\n//   output [7:0] io_b_bits // connection-operators.md:233:14\n// );\n// \n//   assign io_a_ready = io_b_ready;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_valid = io_a_valid;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_bits = io_a_bits;  // &lt;stdin&gt;:3:10, :10:10\n// endmodule\n// \n// module Wrapper(  // &lt;stdin&gt;:17:10\n//   input        clock,    // &lt;stdin&gt;:18:11\n//                reset,    // &lt;stdin&gt;:19:11\n//                io_in_valid,  // connection-operators.md:213:14\n//   input  [7:0] io_in_bits,   // connection-operators.md:213:14\n//   input        io_out_ready, // connection-operators.md:213:14\n//   output       io_in_ready,  // connection-operators.md:213:14\n//                io_out_valid, // connection-operators.md:213:14\n//   output [7:0] io_out_bits   // connection-operators.md:213:14\n// );\n// \n//   wire       _c_io_a_ready;  // connection-operators.md:218:17\n//   wire       _p_io_b_valid;  // connection-operators.md:217:17\n//   wire [7:0] _p_io_b_bits;   // connection-operators.md:217:17\n//   PipelineStage p (  // connection-operators.md:217:17\n//     .io_a_valid (io_in_valid),\n//     .io_a_bits  (io_in_bits),\n//     .io_b_ready (_c_io_a_ready), // connection-operators.md:218:17\n//     .io_a_ready (io_in_ready),\n//     .io_b_valid (_p_io_b_valid),\n//     .io_b_bits  (_p_io_b_bits)\n//   );\n//   PipelineStage c (  // connection-operators.md:218:17\n//     .io_a_valid (_p_io_b_valid), // connection-operators.md:217:17\n//     .io_a_bits  (_p_io_b_bits),  // connection-operators.md:217:17\n//     .io_b_ready (io_out_ready),\n//     .io_a_ready (_c_io_a_ready),\n//     .io_b_valid (io_out_valid),\n//     .io_b_bits  (io_out_bits)\n//   );\n// endmodule\n// \n// \"\"\"\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_51","title":"\u7ed3\u8bba\u200b\uff1a","text":"<p><code>&lt;&gt;</code> \u200b\u548c\u200b <code>:=</code> \u200b\u5747\u200b\u53ef\u200b\u7528\u4e8e\u200b\u5206\u522b\u200b\u4e3a\u200b <code>io.in</code> \u200b\u548c\u200b <code>p.io.a</code> \u200b\u4e2d\u200b\u6240\u793a\u200b\u7684\u200b\u6709\u200b\u5411\u200b\u7684\u200b\uff08IOs\uff09\u200b\u8d4b\u503c\u200b\u7ed9\u200b DontCare\u3002\u200b\u8fd9\u200b\u57fa\u672c\u4e0a\u200b\u662f\u200b\u7b49\u6548\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>&lt;&gt;</code> \u200b\u548c\u200b <code>:=</code> \u200b\u5c06\u200b\u786e\u5b9a\u200b LHS \u200b\u7684\u200b\u65b9\u5411\u200b\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#5-io-io","title":"\u6982\u5ff5\u200b5\uff1a<code>&lt;&gt;</code> \u200b\u5728\u200b\u81f3\u5c11\u200b\u4e00\u4e2a\u200b\u5df2\u77e5\u200b\u6d41\u5411\u200b\uff08IO \u200b\u6216\u5b50\u200b\u6a21\u5757\u200b\u7684\u200b IO\uff09\u200b\u7684\u200b\u4e8b\u7269\u200b\u4e4b\u95f4\u200b\u8d77\u200b\u4f5c\u7528\u200b\u3002","text":"<p>\u200b\u5982\u679c\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5df2\u77e5\u200b\u7684\u200b\u6d41\u5411\u200b\uff0c<code>&lt;&gt;</code> \u200b\u4f1a\u200b\u600e\u4e48\u200b\u505a\u200b\uff1f\u200b\u8fd9\u200b\u5c06\u200b\u4f7f\u7528\u200b\u4e0b\u9762\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u4ee3\u7801\u200b\u663e\u793a\u200b\uff1a\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b Scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/Shorla/gKx9ReLVTTqDTk9vmw5ozg\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(DecoupledIO(UInt(8.W)))\n  val out = DecoupledIO(UInt(8.W))\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  //connect Producer to IO\n    // For this experiment, we add a temporary wire and see if it works...\n  //p.io.a &lt;&gt; io.in\n  val tmp = Wire(DecoupledIO(UInt(8.W)))\n  // connect intermediate wire\n  tmp &lt;&gt; io.in\n  p.io.a &lt;&gt; tmp\n  // connect producer to consumer\n  c.io.a &lt;&gt; p.io.b\n  //connect consumer to IO\n  io.out &lt;&gt; c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.b &lt;&gt; io.a\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u200b\u793a\u4f8b\u200b\u4e2d\u200b\u770b\u5230\u200b\u751f\u6210\u200b\u7684\u200b Verilog\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// res9: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module PipelineStage(    // &lt;stdin&gt;:3:10, :10:10\n//   input        io_a_valid,   // connection-operators.md:284:14\n//   input  [7:0] io_a_bits,    // connection-operators.md:284:14\n//   input        io_b_ready,   // connection-operators.md:284:14\n//   output       io_a_ready,   // connection-operators.md:284:14\n//                io_b_valid,   // connection-operators.md:284:14\n//   output [7:0] io_b_bits // connection-operators.md:284:14\n// );\n// \n//   assign io_a_ready = io_b_ready;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_valid = io_a_valid;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_bits = io_a_bits;  // &lt;stdin&gt;:3:10, :10:10\n// endmodule\n// \n// module Wrapper(  // &lt;stdin&gt;:17:10\n//   input        clock,    // &lt;stdin&gt;:18:11\n//                reset,    // &lt;stdin&gt;:19:11\n//                io_in_valid,  // connection-operators.md:263:14\n//   input  [7:0] io_in_bits,   // connection-operators.md:263:14\n//   input        io_out_ready, // connection-operators.md:263:14\n//   output       io_in_ready,  // connection-operators.md:263:14\n//                io_out_valid, // connection-operators.md:263:14\n//   output [7:0] io_out_bits   // connection-operators.md:263:14\n// );\n// \n//   wire       _c_io_a_ready;  // connection-operators.md:268:17\n//   wire       _p_io_b_valid;  // connection-operators.md:267:17\n//   wire [7:0] _p_io_b_bits;   // connection-operators.md:267:17\n//   PipelineStage p (  // connection-operators.md:267:17\n//     .io_a_valid (io_in_valid),\n//     .io_a_bits  (io_in_bits),\n//     .io_b_ready (_c_io_a_ready), // connection-operators.md:268:17\n//     .io_a_ready (io_in_ready),\n//     .io_b_valid (_p_io_b_valid),\n//     .io_b_bits  (_p_io_b_bits)\n//   );\n//   PipelineStage c (  // connection-operators.md:268:17\n//     .io_a_valid (_p_io_b_valid), // connection-operators.md:267:17\n//     .io_a_bits  (_p_io_b_bits),  // connection-operators.md:267:17\n//     .io_b_ready (io_out_ready),\n//     .io_a_ready (_c_io_a_ready),\n//     .io_b_valid (io_out_valid),\n//     .io_b_bits  (io_out_bits)\n//   );\n// endmodule\n// \n// \"\"\"\n</code></pre>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_52","title":"\u7ed3\u8bba\u200b\uff1a","text":"<p>\u200b\u4e0a\u9762\u200b\u7684\u200b\u8fde\u63a5\u200b\u987a\u5229\u8fdb\u884c\u200b\uff0c\u200b\u6ca1\u6709\u200b\u9519\u8bef\u200b\uff0c\u200b\u53ea\u8981\u200b\u81f3\u5c11\u200b\u6709\u200b\u4e00\u4e2a\u200b\u65b9\u5411\u200b\u7684\u200b\u4e1c\u897f\u200b\uff08IO \u200b\u6216\u5b50\u200b\u6a21\u5757\u200b\u7684\u200b IO\uff09\u200b\u6765\u200b\u201c\u200b\u89e3\u51b3\u200b\u201d\u200b\u65b9\u5411\u200b\uff0c\u200b\u8fd9\u200b\u5c06\u200b\u663e\u793a\u200b <code>&lt;&gt;</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#6","title":"\u6982\u5ff5\u200b6\uff1a<code>&lt;&gt;</code> \u200b\u548c\u200b <code>:=</code> \u200b\u6309\u200b\u5b57\u6bb5\u540d\u200b\u79f0\u200b\u8fde\u63a5\u200b\u4fe1\u53f7\u200b\u3002","text":"<p>\u200b\u8be5\u200b\u5b9e\u9a8c\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b MockDecoupledIO\uff0c\u200b\u5176\u200b\u540d\u79f0\u200b\u4e0e\u200b DeCopledIO \u200b\u5177\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u3002Chisel \u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5176\u200b\u8fde\u63a5\u200b\u5e76\u200b\u4ea7\u751f\u200b\u76f8\u540c\u200b\u7684\u200b Verilog\uff0c\u200b\u5373\u4f7f\u200b MockDecoupledIO \u200b\u548c\u200b DeCopledIO \u200b\u662f\u200b\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b Scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/uf4tqquvqyigzaw705nfiq\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass MockDecoupledIO extends Bundle {\n  val valid = Output(Bool())\n  val ready = Input(Bool())\n  val bits = Output(UInt(8.W))\n}\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(new MockDecoupledIO())\n  val out = new MockDecoupledIO()\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  // connect producer to I/O\n  p.io.a &lt;&gt; io.in\n  // connect producer  to consumer\n  c.io.a &lt;&gt; p.io.b\n  // connect consumer to I/O\n  io.out &lt;&gt; c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.a &lt;&gt; io.b\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u200b\u793a\u4f8b\u200b\u4e2d\u200b\u770b\u5230\u200b\u751f\u6210\u200b\u7684\u200b Verilog\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// res11: String = \"\"\"// Generated by CIRCT firtool-1.44.0\n// module PipelineStage(    // &lt;stdin&gt;:3:10, :10:10\n//   input        io_a_valid,   // connection-operators.md:337:14\n//   input  [7:0] io_a_bits,    // connection-operators.md:337:14\n//   input        io_b_ready,   // connection-operators.md:337:14\n//   output       io_a_ready,   // connection-operators.md:337:14\n//                io_b_valid,   // connection-operators.md:337:14\n//   output [7:0] io_b_bits // connection-operators.md:337:14\n// );\n// \n//   assign io_a_ready = io_b_ready;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_valid = io_a_valid;    // &lt;stdin&gt;:3:10, :10:10\n//   assign io_b_bits = io_a_bits;  // &lt;stdin&gt;:3:10, :10:10\n// endmodule\n// \n// module Wrapper(  // &lt;stdin&gt;:17:10\n//   input        clock,    // &lt;stdin&gt;:18:11\n//                reset,    // &lt;stdin&gt;:19:11\n//                io_in_valid,  // connection-operators.md:321:14\n//   input  [7:0] io_in_bits,   // connection-operators.md:321:14\n//   input        io_out_ready, // connection-operators.md:321:14\n//   output       io_in_ready,  // connection-operators.md:321:14\n//                io_out_valid, // connection-operators.md:321:14\n//   output [7:0] io_out_bits   // connection-operators.md:321:14\n// );\n// \n//   wire       _c_io_a_ready;  // connection-operators.md:326:17\n//   wire       _p_io_b_valid;  // connection-operators.md:325:17\n//   wire [7:0] _p_io_b_bits;   // connection-operators.md:325:17\n//   PipelineStage p (  // connection-operators.md:325:17\n//     .io_a_valid (io_in_valid),\n//     .io_a_bits  (io_in_bits),\n//     .io_b_ready (_c_io_a_ready), // connection-operators.md:326:17\n//     .io_a_ready (io_in_ready),\n//     .io_b_valid (_p_io_b_valid),\n//     .io_b_bits  (_p_io_b_bits)\n//   );\n//   PipelineStage c (  // connection-operators.md:326:17\n//     .io_a_valid (_p_io_b_valid), // connection-operators.md:325:17\n//     .io_a_bits  (_p_io_b_bits),  // connection-operators.md:325:17\n//     .io_b_ready (io_out_ready),\n//     .io_a_ready (_c_io_a_ready),\n//     .io_b_valid (io_out_valid),\n//     .io_b_bits  (io_out_bits)\n//   );\n// endmodule\n// \n// \"\"\"\n</code></pre> <p>\u200b\u8fd9\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5b9e\u9a8c\u200b\uff0c\u200b\u5728\u200b\u5176\u4e2d\u200b\u6211\u4eec\u200b\u5220\u9664\u200b\u4e86\u200b\u4e00\u4e2a\u200b MockDecoupledIO\u200b\u7684\u200b\u9886\u57df\u200b\uff1a\uff08\u200b\u5b9e\u9a8c\u200b\u7684\u200b scastie \u200b\u94fe\u63a5\u200b\uff1ahttps://scastie.scala-lang.org/chtkhkcps9cvjkjjqpdeia\uff09</p> <pre><code>import chisel3._\nimport chisel3.util.DecoupledIO\nimport circt.stage.ChiselStage\n\nclass MockDecoupledIO extends Bundle {\n  val valid = Output(Bool())\n  val ready = Input(Bool())\n  //val bits = Output(UInt(8.W))\n}\nclass Wrapper extends Module{\n  val io = IO(new Bundle {\n  val in = Flipped(new MockDecoupledIO())\n  val out = new MockDecoupledIO()\n  })\n  val p = Module(new PipelineStage)\n  val c = Module(new PipelineStage)\n  // connect producer to I/O\n  p.io.a &lt;&gt; io.in\n  // connect producer  to consumer\n  c.io.a &lt;&gt; p.io.b\n  // connect consumer to I/O\n  io.out &lt;&gt; c.io.b\n}\nclass PipelineStage extends Module{\n  val io = IO(new Bundle{\n    val a = Flipped(DecoupledIO(UInt(8.W)))\n    val b = DecoupledIO(UInt(8.W))\n  })\n  io.a &lt;&gt; io.b\n}\n</code></pre> <p>\u200b\u4e0b\u9762\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u6b64\u200b\u793a\u4f8b\u200b\u4e2d\u200b\u770b\u5230\u200b\u751f\u6210\u200b\u7684\u200b Verilog\uff1a</p> <pre><code>ChiselStage.emitSystemVerilog(new Wrapper)\n// chisel3.package$ChiselException: Connection between left (PipelineStage.io.a: IO[DecoupledIO]) and source (Wrapper.io.in: IO[MockDecoupledIO]) failed @.bits: Right Record missing field (bits).\n//  at ... ()\n//  at repl.MdocSession$MdocApp12$Wrapper.&lt;init&gt;(connection-operators.md:381)\n//  at repl.MdocSession$MdocApp12$$anonfun$119$$anonfun$apply$79.apply(connection-operators.md:402)\n//  at repl.MdocSession$MdocApp12$$anonfun$119$$anonfun$apply$79.apply(connection-operators.md:402)\n//  at ... ()\n//  at ... (Stack trace trimmed to user code only. Rerun with --full-stacktrace to see the full stack trace)\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u5931\u8d25\u200b\u662f\u56e0\u4e3a\u200b\u7f3a\u5c11\u200b\u4e00\u4e2a\u200b\u5b57\u200b\u6bb5\u200b <code>bits</code>\u3002</p>"},{"location":"src/Chisel%20%E4%B8%AD%E6%96%87%E6%95%99%E7%A8%8B/#_53","title":"\u7ed3\u8bba\u200b\uff1a","text":"<p>\u200b\u5bf9\u4e8e\u200b <code>:=</code>, Scala \u200b\u7c7b\u578b\u200b\u4e0d\u200b\u9700\u8981\u200b\u5339\u914d\u200b\uff0c\u200b\u4f46\u662f\u200b LHS \u200b\u4e0a\u200b\u7684\u200b\u6240\u6709\u200b\u4fe1\u53f7\u200b\u90fd\u200b\u5fc5\u987b\u200b\u7531\u200b RHS \u200b\u63d0\u4f9b\u200b\uff0c\u200b\u5426\u5219\u200b\u60a8\u200b\u5c06\u200b\u83b7\u5f97\u200b Chisel \u200b\u9519\u8bef\u200b\u3002RHS \u200b\u4e0a\u200b\u53ef\u80fd\u200b\u8fd8\u6709\u200b\u5176\u4ed6\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u4fe1\u53f7\u200b\u5c06\u200b\u88ab\u200b\u5ffd\u7565\u200b. \u200b\u5bf9\u4e8e\u200b <code>&lt;&gt;</code>, Scala \u200b\u7c7b\u578b\u200b\u4e0d\u200b\u9700\u8981\u200b\u5339\u914d\u200b\uff0c\u200b\u4f46\u662f\u200b\u6240\u6709\u200b\u4fe1\u53f7\u200b\u5fc5\u987b\u200b\u5728\u200b LHS \u200b\u548c\u200b RHS \u200b\u4e4b\u95f4\u200b\u5b8c\u5168\u200b\u5339\u914d\u200b\u3002\u200b\u5728\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5b57\u6bb5\u200b\u7684\u200b\u987a\u5e8f\u200b\u90fd\u200b\u4e0d\u200b\u91cd\u8981\u200b\u3002</p>"},{"location":"src/Chisel%E7%9A%84scala%20maven%E6%BA%90/","title":"Chisel\u200b\u7684\u200bscala maven\u200b\u6e90","text":"<p>\u200b\u66f4\u6362\u200b\u4f4d\u7f6e\u200b</p> <p></p> <pre><code>https://maven.aliyun.com/repository/central\n</code></pre> <p>\u200b\u6709\u65f6\u5019\u200bmaven\u200b\u6e90\u200b\u4e0d\u4f1a\u200b\u53ca\u65f6\u200b\u66f4\u65b0\u200b\uff0c\u200b\u6362\u6210\u200b\u5b98\u65b9\u200b\u6e90\u200b</p>"},{"location":"src/ELF%E6%96%87%E4%BB%B6%E6%80%8E%E4%B9%88%E8%AF%BB/","title":"ELF\u200b\u6587\u4ef6\u200b\u600e\u4e48\u200b\u8bfb","text":"<p>\u200b\u4f7f\u7528\u200belf.h\u200b\u5e93\u51fd\u6570\u200b</p> <p>32\u200b\u4f4d\u200b\u4e0e\u200b64\u200b\u4f4d\u200b\u533a\u522b\u200b</p> <p>ELF header\u200b\u5b57\u8282\u200b\u5e03\u5c40\u200b</p> <p>64\u200b\u4f4d\u200b\u548c\u200b32\u200b\u4f4d\u200b\u53ea\u662f\u200b\u4e2a\u522b\u200b\u5b57\u200b\u6bb5\u957f\u5ea6\u200b\u4e0d\u540c\u200b\uff0c\u200b\u6bd4\u5982\u200b <code>Elf64_Addr</code> \u200b\u548c\u200b <code>Elf64_Off</code> \u200b\u90fd\u200b\u662f\u200b64\u200b\u4f4d\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u3002\u200b\u800c\u200b<code>Elf32_Addr</code> \u200b\u548c\u200b <code>Elf32_Off</code>\u200b\u662f\u200b32\u200b\u4f4d\u200b\u65e0\u200b\u7b26\u53f7\u200b\u6574\u6570\u200b\u3002\u200b\u8fd9\u200b\u5bfc\u81f4\u200bELF header\u200b\u7684\u200b\u6240\u200b\u5360\u200b\u7684\u200b\u5b57\u8282\u6570\u200b\u4e0d\u540c\u200b\u300232\u200b\u4f4d\u200b\u7684\u200bELF header\u200b\u5360\u200b52\u200b\u4e2a\u200b\u5b57\u8282\u200b\uff0c64\u200b\u4f4d\u200b\u7684\u200bELF header\u200b\u5360\u200b64\u200b\u4e2a\u200b\u5b57\u8282\u200b\u3002</p> <pre><code>typedef struct\n{\nunsigned char e_ident[EI_NIDENT]; /* Magic number\u200b\u548c\u200b\u5176\u5b83\u200b\u4fe1\u606f\u200b */\nElf32_Half    e_type;         /* Object file type */\nElf32_Half    e_machine;      /* Architecture */\nElf32_Word    e_version;      /* Object file version */\nElf32_Addr    e_entry;        /* Entry point virtual address */\nElf32_Off e_phoff;        /* Program header table file offset */\nElf32_Off e_shoff;        /* Section header table file offset */\nElf32_Word    e_flags;        /* Processor-specific flags */\nElf32_Half    e_ehsize;       /* ELF header size in bytes */\nElf32_Half    e_phentsize;        /* Program header table entry size */\nElf32_Half    e_phnum;        /* Program header table entry count */\nElf32_Half    e_shentsize;        /* Section header table entry size */\nElf32_Half    e_shnum;        /* Section header table entry count */\nElf32_Half    e_shstrndx;     /* Section header string table index */\n} Elf32_Ehdr;\n\ntypedef struct\n{\nunsigned char e_ident[EI_NIDENT]; /* Magic number and other info */\nElf64_Half    e_type;         /* Object file type */\nElf64_Half    e_machine;      /* Architecture */\nElf64_Word    e_version;      /* Object file version */\nElf64_Addr    e_entry;        /* Entry point virtual address */\nElf64_Off e_phoff;        /* Program header table file offset */\nElf64_Off e_shoff;        /* Section header table file offset */\nElf64_Word    e_flags;        /* Processor-specific flags */\nElf64_Half    e_ehsize;       /* ELF header size in bytes */\nElf64_Half    e_phentsize;        /* Program header table entry size */\nElf64_Half    e_phnum;        /* Program header table entry count */\nElf64_Half    e_shentsize;        /* Section header table entry size */\nElf64_Half    e_shnum;        /* Section header table entry count */\nElf64_Half    e_shstrndx;     /* Section header string table index */\n} Elf64_Ehdr;\n</code></pre> <p>\u200b\u4ee5\u200b32\u200b\u4f4d\u200b\u6587\u4ef6\u200b\u4e3a\u4f8b\u200b\uff0c\u200b\u6211\u4eec\u200b\u8981\u200b\u83b7\u53d6\u200bSection header\u200b\u53ea\u7528\u200b\u5173\u5fc3\u200b\u4e0b\u5217\u200b\u4fe1\u606f\u200b</p> <pre><code>typedef struct\n{\nElf32_Off     e_shoff;        /* \u200b\u8282\u5934\u8868\u200b\u76f8\u5f53\u4e8e\u200belf\u200b\u6587\u4ef6\u200b\u7684\u200b\u504f\u79fb\u200b */\nElf32_Half    e_shentsize;    /* \u200b\u8282\u5934\u8868\u200b\u6bcf\u4e2a\u200bentry\u200b\u7684\u200b\u5927\u5c0f\u200b */\nElf32_Half    e_shnum;        /* \u200b\u8282\u5934\u8868\u200bentry\u200b\u7684\u200b\u6570\u76ee\u200b */\nElf32_Half    e_shstrndx;     /* \u200b\u8282\u5934\u8868\u200b\u5b57\u7b26\u4e32\u200b\u6307\u9488\u200b */\n} Elf32_Ehdr;\n</code></pre> <p>\u200b\u5728\u200b\u8282\u5934\u8868\u200b\u7684\u200b\u4fe1\u606f\u200b</p> <pre><code>\u200b\u5728\u200b Section Header \u200b\u90e8\u5206\u200b\u7684\u200b\u4fe1\u606f\u200b\n\ntypedef struct\n{\nElf32_Word    sh_name;        /* Section name (string tbl index) */\nElf32_Word    sh_type;        /* Section type */\nElf32_Off     sh_offset;      /* Section file offset */\nElf32_Word    sh_size;        /* Section size in bytes */\nElf32_Word    sh_entsize;     /* Entry size if section holds table */\n} Elf32_Shdr;\n</code></pre> <ul> <li><code>sh_name</code>\u200b\u8be5\u8282\u200b\u7684\u200b\u540d\u79f0\u200b\u5728\u200b<code>.shstrtab</code>\u200b\u7684\u200b\u7d22\u5f15\u200b: <code>.strtab, symtab</code>\u200b\u8fd9\u4e9b\u200b\u540d\u79f0\u200b\u4fe1\u606f\u200b\u5c31\u200b\u901a\u8fc7\u200b<code>sh_name</code>\u200b\u5728\u200b<code>.shstrtab</code>\u200b\u627e\u5230\u200b\u3002</li> <li><code>sh_type</code>\uff0c\u200b\u5bf9\u4e8e\u200b\u627e\u5230\u200b<code>.symtab</code>(\u200b\u7c7b\u578b\u200b\u662f\u200b<code>SYMTAB</code>)\u200b\u548c\u200b<code>`.strtab</code>(\u200b\u7c7b\u578b\u200b\u662f\u200b`STRTAB```)\u200b\u81f3\u5173\u91cd\u8981\u200b</li> <li><code>sh_offset</code>\u200b\u548c\u200b<code>sh_size</code>\u200b\u5206\u522b\u200b\u4e3a\u200b\u8be5\u8282\u200b\u5728\u200bELF\u200b\u6587\u4ef6\u200b\u7684\u200b\u4f4d\u7f6e\u200b(\u200b\u504f\u79fb\u200b)\u200b\u7684\u200b\u5927\u5c0f\u200b</li> <li> <p><code>sh_entsize</code>\u200b\u8868\u4e2d\u200b\u7684\u200b\u6bcf\u4e2a\u200bentry\u200b\u7684\u200b\u5927\u5c0f\u200b\uff0c\u200b\u6bd4\u5982\u200b\u5728\u200b<code>.symtab</code>\u200b\u4e2d\u200b\u8fd8\u6709\u200b\u8bb8\u591a\u200b\u5b50\u200b<code>entry</code>\uff0c\u200b\u53ef\u4ee5\u200b\u7528\u200b<code>sh_size/sh_entsize</code>\u200b\u6c42\u200b\u51fa\u200b\u6761\u6587\u200b\u6570\u76ee\u200b</p> </li> <li> <p><code>st_name</code>\uff1a\u200b\u51fd\u6570\u200b\u540d\u79f0\u200b\u5728\u200b<code>.strtab</code>\u200b\u4e2d\u200b\u7684\u200b\u504f\u79fb\u200b</p> </li> <li><code>st_value</code>\uff1a\u200b\u865a\u62df\u5730\u5740\u200b(\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b\u4e2d\u200b\u8868\u793a\u200b\u865a\u62df\u5730\u5740\u200b\uff1b\u200b\u53ef\u200b\u6267\u884c\u200b\u76ee\u6807\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u8868\u793a\u200b\u6570\u636e\u200b\u6240\u5728\u200b\u8282\u200b\u7684\u200b\u504f\u79fb\u200b)</li> <li><code>st_size</code>\uff1a\u200b\u51fd\u6570\u200b\u5927\u5c0f\u200b</li> </ul> <p>sh_name\u200b\u548c\u200bsh_type:</p> <p>sh_name\u200b\u8868\u793a\u200bsection\u200b\u7684\u200b\u540d\u79f0\u200b\u3002\u200b\u7531\u4e8e\u200b\u6bcf\u4e2a\u200bsection\u200b\u540d\u79f0\u200b\u7684\u200b\u957f\u5ea6\u200b\u4e0d\u200b\u76f8\u540c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e3a\u4e86\u200b\u8282\u7ea6\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4e8e\u662f\u200b\u5c31\u200b\u5c06\u200b\u6240\u6709\u200bsection\u200b\u7684\u200b\u540d\u79f0\u200b\u90fd\u200b\u5b58\u653e\u200b\u5728\u200b\u4e00\u4e2a\u200b\u7279\u5b9a\u200b\u7684\u200b\u540d\u53eb\u200b.shstrtab\u200b\u7684\u200bsection\uff08\u200b\u6587\u4ef6\u200b\u5934\u200b\u4fe1\u606f\u200b\u4e2d\u200b\u7684\u200bElf32_Ehdr. e_shstrndx\u200b\u5c31\u662f\u200b\u7528\u6765\u200b\u5feb\u901f\u200b\u67e5\u627e\u200b\u5b83\u200b\uff09\u200b\u4e2d\u200b\uff0c\u200b\u6240\u4ee5\u200b\u8fd9\u91cc\u200b\u7684\u200bsh_name\u200b\u7684\u200b\u503c\u200b\u6307\u200b\u7684\u200b\u5c31\u662f\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u7279\u5b9a\u200bsection\u200b\u4e2d\u200b\u7684\u200b\u504f\u79fb\u91cf\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u83b7\u5f97\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u6240\u200b\u9700\u8981\u200b\u7684\u200bsection\u200b\u540d\u200b\u30020\u200b\u503c\u200b\u8868\u793a\u200b\u65e0\u200b\u540d\u79f0\u200b\uff0c\u200b\u4e00\u822c\u200b\u7528\u4e8e\u200b\u7c7b\u578b\u200b\u4e3a\u200bSHT_NULL\u200b\u7684\u200bsection\u200b\u4e2d\u200b\u3002</p> <p>sh_type\u200b\u8868\u793a\u200bsection\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b83\u200b\u53ef\u80fd\u200b\u7684\u200b\u53d6\u503c\u200b\u6709\u200b\u4ee5\u4e0b\u200b\u8fd9\u4e9b\u200b\uff1a</p> <pre><code>#define SHT_NULL      0     /* Section header table entry unused */\n#define SHT_PROGBITS      1     /* Program data */\n#define SHT_SYMTAB    2     /* Symbol table */\n#define SHT_STRTAB    3     /* String table */\n#define SHT_RELA      4     /* Relocation entries with addends */\n#define SHT_HASH      5     /* Symbol hash table */\n#define SHT_DYNAMIC   6     /* Dynamic linking information */\n#define SHT_NOTE      7     /* Notes */\n#define SHT_NOBITS    8     /* Program space with no data (bss) */\n#define SHT_REL       9     /* Relocation entries, no addends */\n#define SHT_SHLIB     10        /* Reserved */\n#define SHT_DYNSYM    11        /* Dynamic linker symbol table */\n#define SHT_INIT_ARRAY    14        /* Array of constructors */\n#define SHT_FINI_ARRAY    15        /* Array of destructors */\n#define SHT_PREINIT_ARRAY 16        /* Array of pre-constructors */\n#define SHT_GROUP     17        /* Section group */\n#define SHT_SYMTAB_SHNDX  18        /* Extended section indeces */\n#define SHT_NUM       19        /* Number of defined types.  */\n#define SHT_LOOS      0x60000000    /* Start OS-specific.  */\n#define SHT_GNU_ATTRIBUTES 0x6ffffff5   /* Object attributes.  */\n#define SHT_GNU_HASH      0x6ffffff6    /* GNU-style hash table.  */\n#define SHT_GNU_LIBLIST   0x6ffffff7    /* Prelink library list */\n#define SHT_CHECKSUM      0x6ffffff8    /* Checksum for DSO content.  */\n#define SHT_LOSUNW    0x6ffffffa    /* Sun-specific low bound.  */\n#define SHT_SUNW_move     0x6ffffffa\n#define SHT_SUNW_COMDAT   0x6ffffffb\n#define SHT_SUNW_syminfo  0x6ffffffc\n#define SHT_GNU_verdef    0x6ffffffd    /* Version definition section.  */\n#define SHT_GNU_verneed   0x6ffffffe    /* Version needs section.  */\n#define SHT_GNU_versym    0x6fffffff    /* Version symbol table.  */\n#define SHT_HISUNW    0x6fffffff    /* Sun-specific high bound.  */\n#define SHT_HIOS      0x6fffffff    /* End OS-specific type */\n#define SHT_LOPROC    0x70000000    /* Start of processor-specific */\n#define SHT_HIPROC    0x7fffffff    /* End of processor-specific */\n#define SHT_LOUSER    0x80000000    /* Start of application-specific */\n#define SHT_HIUSER    0x8fffffff    /* End of application-specific */\n</code></pre> <pre><code>ELF\u200b\u6587\u4ef6\u200b\u89e3\u6790\u200b\n\u251c\u2500 ELF\u200b\u6587\u4ef6\u200b\u5934\u200b (Elf64_Ehdr)\n\u2502    \u251c\u2500 \u200b\u6807\u8bc6\u200b\u4fe1\u606f\u200b\n\u2502    \u251c\u2500 ...\n\u2502    \u251c\u2500 \u200b\u8282\u5934\u8868\u200b\u504f\u79fb\u91cf\u200b (e_shoff)\n\u2502    \u251c\u2500 \u200b\u8282\u5934\u200b\u8868\u4e2d\u200b\u7684\u200b\u8282\u200b\u540d\u79f0\u200b\u5b57\u7b26\u4e32\u200b\u8868\u200b\u7d22\u5f15\u200b (e_shstrndx)\n\u2502    \u2514\u2500 \u200b\u8282\u5934\u200b\u8868\u4e2d\u200b\u7684\u200b\u8282\u5934\u8868\u200b\u6761\u76ee\u200b\u6570\u91cf\u200b (e_shnum)\n\u2502\n\u251c\u2500 \u200b\u8282\u5934\u8868\u200b (Elf64_Shdr)\n\u2502    \u251c\u2500 \u200b\u8282\u5934\u8868\u200b\u6761\u76ee\u200b1 (Elf64_Shdr)\n\u2502    \u2502    \u251c\u2500 \u200b\u8282\u200b\u540d\u79f0\u200b\u5b57\u7b26\u4e32\u200b\u8868\u200b\u7d22\u5f15\u200b (sh_name)\n\u2502    \u2502    \u251c\u2500 \u200b\u8282\u200b\u7c7b\u578b\u200b (sh_type)\n\u2502    \u2502    \u251c\u2500 \u200b\u8282\u200b\u504f\u79fb\u91cf\u200b (sh_offset)\n\u2502    \u2502    \u251c\u2500 \u200b\u8282\u200b\u5927\u5c0f\u200b (sh_size)\n\u2502    \u2502    \u2514\u2500 ...\n\u2502    \u251c\u2500 \u200b\u8282\u5934\u8868\u200b\u6761\u76ee\u200b2 (Elf64_Shdr)\n\u2502    \u2502    \u251c\u2500 ...\n\u2502    \u2502    \u2514\u2500 ...\n\u2502    \u251c\u2500 \u200b\u8282\u5934\u8868\u200b\u6761\u76ee\u200b3 (Elf64_Shdr)\n\u2502    \u2502    \u251c\u2500 ...\n\u2502    \u2502    \u2514\u2500 ...\n\u2502    \u251c\u2500 ...\n\u2502    \u2514\u2500 \u200b\u5b57\u7b26\u4e32\u200b\u8868\u8282\u200b\u5934\u8868\u200b\u6761\u76ee\u200b (Elf64_Shdr)\n\u2502         \u251c\u2500 \u200b\u8282\u200b\u540d\u79f0\u200b\u5b57\u7b26\u4e32\u200b\u8868\u200b\u7d22\u5f15\u200b (sh_name)\n\u2502         \u251c\u2500 \u200b\u8282\u200b\u7c7b\u578b\u200b (sh_type)\n\u2502         \u251c\u2500 \u200b\u8282\u200b\u504f\u79fb\u91cf\u200b (sh_offset)\n\u2502         \u251c\u2500 \u200b\u8282\u200b\u5927\u5c0f\u200b (sh_size)\n\u2502         \u2514\u2500 ...\n\u2502\n\u251c\u2500 \u200b\u5b57\u7b26\u4e32\u200b\u8868\u8282\u200b (.shstrtab)\n\u2502    \u251c\u2500 \u200b\u5b57\u7b26\u4e32\u200b1\n\u2502    \u251c\u2500 ...\n\u2502    \u251c\u2500 \u200b\u8282\u200b\u540d\u79f0\u200b1\n\u2502         \u2514\u2500\u200b\u8282\u200b\u504f\u79fb\u91cf\u200b (sh_offset)\n\u2502    \u2514\u2500 \u200b\u7b26\u53f7\u8868\u200b\u8282\u200b\u540d\u79f0\u200b\n\u2502\n\u251c\u2500 \u200b\u7b26\u53f7\u8868\u200b\u8282\u200b (Elf64_Sym)\n\u2502    \u251c\u2500 \u200b\u7b26\u53f7\u8868\u200b\u6761\u76ee\u200b1 (Elf64_Sym)\n\u2502    \u2502    \u251c\u2500 \u200b\u7b26\u53f7\u200b\u540d\u79f0\u200b\u7d22\u5f15\u200b (st_name)\n\u2502    \u2502    \u251c\u2500 \u200b\u7b26\u53f7\u200b\u5927\u5c0f\u200b (st_size)\n\u2502    \u2502    \u251c\u2500 \u200b\u7b26\u53f7\u200b\u503c\u200b (st_value)\n\u2502    \u2502    \u251c\u2500 ...\n\u2502    \u251c\u2500 \u200b\u7b26\u53f7\u8868\u200b\u6761\u76ee\u200b2 (Elf64_Sym)\n\u2502    \u2502    \u251c\u2500 ...\n\u2502    \u2502    \u2514\u2500 ...\n\u2502    \u251c\u2500 \u200b\u7b26\u53f7\u8868\u200b\u6761\u76ee\u200b3 (Elf64_Sym)\n\u2502    \u2502    \u251c\u2500 ...\n\u2502    \u2502    \u2514\u2500 ...\n\u2502    \u251c\u2500 ...\n\u2502    \u2514\u2500 \u200b\u5b57\u7b26\u4e32\u200b\u8868\u200b (strtab)\n\u2502         \u251c\u2500 ...\n\u2502         \u251c\u2500 \u200b\u7b26\u53f7\u200b\u540d\u79f0\u200b1\n\u2502         \u2502    \u251c\u2500 ...\n\u2502         \u2502    \u2514\u2500 ...\n\u2502         \u251c\u2500 ...\n\u2502         \u2514\u2500 func\n\u2502\n\u2514\u2500 ...\n</code></pre> <p>\u200b\u81f3\u6b64\u200b\u4e86\u89e3\u200b\u5b8c\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7f16\u5199\u200b\u4ee3\u7801\u200b\u4e86\u200b(\u200b\u83b7\u53d6\u200bfunc\u200b\u53c2\u6570\u200b)</p> <pre><code>void init_elf(const char *elf_file){\ninit_tail_rec_list(); //\u200b\u521d\u59cb\u5316\u200b\u5c3e\u200b\u8c03\u7528\u200b\u5904\u7406\u200b\u6570\u636e\u7ed3\u6784\u200b\nif(ftrace_flag==false){Log(\"Ftrace: OFF\");\nreturn ;\n}\nelse Log(\"Ftrace: ON\");\nif (elf_file == NULL)\nreturn;\n// \u200b\u6253\u5f00\u200bELF\u200b\u6587\u4ef6\u200b\nFILE *file = fopen(elf_file, \"rb\");\nif(!file){\nLog(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b!\\n\");\nassert(0);\n}\n// \u200b\u8bfb\u53d6\u200b ELF \u200b\u6587\u4ef6\u200b\u7684\u200b\u5934\u90e8\u200b\u4fe1\u606f\u200b\nElf_Ehdr elf_header;\nif (fread(&amp;elf_header, sizeof(Elf_Ehdr), 1, file) &lt;= 0) {\nfclose(file);\nassert(0);\n}\n\n// \u200b\u5b9a\u4f4d\u200b\u5230\u200b\u8282\u5934\u8868\u200b\nfseek(file, elf_header.e_shoff, SEEK_SET);\nElf_Shdr strtab_header;\n// \u200b\u8bfb\u53d6\u200b\u8282\u5934\u8868\u200b\u5e76\u200b\u5bfb\u627e\u200b\u5b57\u7b26\u4e32\u200b\u8868\u8282\u200b\nwhile (1) {\nif (fread(&amp;strtab_header, sizeof(Elf_Shdr), 1, file) &lt;= 0) {\nfclose(file);\nassert(0);\n}\n// \u200b\u627e\u5230\u200b\u5230\u200b\u5b57\u7b26\u4e32\u200b\u8868\u8282\u200b\nif (strtab_header.sh_type == SHT_STRTAB) break;\n}\n\n// \u200b\u8bfb\u53d6\u200b\u5b57\u7b26\u4e32\u200b\u8868\u200b\u5185\u5bb9\u200b\nchar string_table[strtab_header.sh_size];\nfseek(file, strtab_header.sh_offset, SEEK_SET);\nif (fread(string_table, strtab_header.sh_size, 1, file) &lt;= 0) {\nfclose(file);\nassert(0);\n}\n\n// \u200b\u8bfb\u53d6\u200b\u8282\u5934\u8868\u200b\u5e76\u200b\u5bfb\u627e\u200b\u7b26\u53f7\u8868\u200b\u8868\u8282\u200b\nElf_Shdr symtab_header;\nfseek(file, elf_header.e_shoff, SEEK_SET);\nwhile (1) {\nif (fread(&amp;symtab_header, sizeof(Elf_Shdr), 1, file) &lt;= 0) {\nfclose(file);\nassert(0);\n}\n//\u200b\u627e\u5230\u200b\u7b26\u53f7\u8868\u200b\u8868\u8282\u200b\nif (symtab_header.sh_type == SHT_SYMTAB) break;\n}\n\n// \u200b\u8ba1\u7b97\u200b\u7b26\u53f7\u8868\u200b\u4e2d\u200b\u7684\u200b\u7b26\u53f7\u200b\u6570\u91cf\u200b\nsize_t symbol_count = symtab_header.sh_size / symtab_header.sh_entsize;\n// \u200b\u5b9a\u4f4d\u200b\u5230\u200b\u7b26\u53f7\u8868\u200b\u8282\u200b\nfseek(file, symtab_header.sh_offset, SEEK_SET);\nElf_Sym symbols[symbol_count];\n// \u200b\u8bfb\u53d6\u200b\u7b26\u53f7\u8868\u200b\nif(fread(symbols, sizeof(Elf_Sym), symbol_count, file)&lt;=0){\nfclose(file);\nassert(0);\n}\n// \u200b\u904d\u5386\u200b\u7b26\u53f7\u8868\u200b\uff0c\u200b\u7b5b\u9009\u200b\u51fa\u200b\u7c7b\u578b\u200b\u4e3a\u200bFUNC\u200b\u7684\u200b\u7b26\u53f7\u200b\nfor (size_t i = 0; i &lt; symbol_count; ++i) {\nif (ELF32_ST_TYPE(symbols[i].st_info) == STT_FUNC) {\nif(symbols[i].st_size==0) continue; //\u200b\u4e0d\u200b\u7b26\u5408\u200b\u7684\u200b\u5927\u5c0f\u200b\u76f4\u63a5\u200b\u7565\u8fc7\u200b\n// \u200b\u83b7\u53d6\u200b\u7b26\u53f7\u200b\u7684\u200b\u540d\u79f0\u200b\nchar* symbol_name=string_table + symbols[i].st_name;\nstrcpy(elf_func[func_cnt].func_name,symbol_name);\n// \u200b\u83b7\u53d6\u200b\u7b26\u53f7\u200b\u7684\u200b\u5730\u5740\u200b\nelf_func[func_cnt].value=symbols[i].st_value;\nelf_func[func_cnt].size =symbols[i].st_size;\nprintf(\"Function: %s\\nAddress: 0x%lx %ld(Dec) %lx(Hec)\\n\",elf_func[func_cnt].func_name,elf_func[func_cnt].value,elf_func[func_cnt].size,elf_func[func_cnt].size);\nfunc_cnt++; //func_cnt\u200b\u7528\u4e8e\u200b\u53ea\u200b\u7b5b\u200b\u51fa\u6765\u200b\u7b26\u5408\u8981\u6c42\u200b\u7684\u200b\u51fd\u6570\u200b\n}\n}\nfclose(file);\n}\n</code></pre>"},{"location":"src/Linux%E4%BD%BF%E7%94%A8man%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/","title":"Linux \u200b\u4f7f\u7528\u200bman\u200b\u4e2d\u6587\u200b\u624b\u518c","text":"<p>\u200b\u90fd\u200b\u8bf4\u200bman\u200b\u662f\u200b\u795e\u200b\uff0c\u200b\u5982\u4f55\u200b\u8ba9\u200b\u6548\u7387\u200b\u4e0a\u5347\u200b\u66f4\u52a0\u200b\u795e\u4e2d\u795e\u200b\uff1f</p> <p>\u200b\u4e3a\u200bman\u200b\u6dfb\u52a0\u200b\u4e2d\u6587\u7248\u200b</p> <pre><code>sudo apt-get update \nsudo apt-get install man #\u200b\u5b89\u88c5\u200bman \nsudo apt-get install manpages-zh #\u200b\u5b89\u88c5\u200b\u4e2d\u6587\u200b\u8bed\u8a00\u5305\u200b\n</code></pre> <p>\u200b\u6d4b\u8bd5\u200b\u4e2d\u6587\u200b\u8bed\u8a00\u5305\u200b\u662f\u5426\u200b\u8fd0\u4f5c\u200b</p> <pre><code>man -M /usr/share/man/zh_CN man\n</code></pre> <p>\u200b\u6216\u8005\u200b</p> <pre><code>man -M /usr/local/zhman/share/man/zh_CN man\n</code></pre> <p>\u200b\u4e2d\u6587\u200b\u8bed\u8a00\u5305\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\u540e\u200b\uff0c\u200b\u4e3a\u200b\u4e2d\u6587\u200b\u6253\u5f00\u200bman\u200b\u7684\u200b\u547d\u4ee4\u200b\u8d77\u200b\u4e2a\u522b\u200b\u540d\u200b</p> <pre><code>sudo vim ~/.bashrc #\u200b\u7528\u200bvim\u200b\u4fee\u6539\u200b.bashrc\u200b\u6587\u4ef6\u200b\nalias cman='man -M /usr/share/man/zh_CN'             #\u200b\u5728\u200b\u6587\u7ae0\u200b\u4e2d\u4e8c\u9009\u200b\u4e00\u200b\u6dfb\u52a0\u200b\u4e00\u884c\u200b\nalias cman='man -M /usr/local/zhman/share/man/zh_CN' #\u200b\u5728\u200b\u6587\u7ae0\u200b\u4e2d\u4e8c\u9009\u200b\u4e00\u200b\u6dfb\u52a0\u200b\u4e00\u884c\u200b\nsource ~/.bashrc #\u200b\u4f7f\u200b\u5176\u200b\u751f\u6548\u200b\n</code></pre> <p>\u200b\u5f00\u5fc3\u200b\u7684\u200benjoy</p> <pre><code>cman man\n</code></pre>"},{"location":"src/Makefile%E5%AD%A6%E4%B9%A0/","title":"Makefile","text":"<p>\u200b\u5fae\u89c2\u200b\u7684\u200bc/c++\u200b\u7f16\u8bd1\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b</p> <p>C\u200b\u8bed\u8a00\u200b  .c   \u2014\u2014&gt;    .exe ?  \u200b\u5230\u5e95\u200b\u53d1\u751f\u200b\u4e86\u200b\u5565\u200b\uff1f</p> <p>\u200b\u5206\u4e3a\u200b\u51e0\u4e2a\u200b\u8fc7\u7a0b\u200b\uff1a</p> <p>-E  \u200b\u9884\u5904\u7406\u200b\uff1a \u200b\u628a\u200b .h    .c \u200b\u5c55\u5f00\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u200b\u3002\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u76f4\u63a5\u200b\u66ff\u6362\u200b \u200b\u5934\u6587\u4ef6\u200b    \u200b\u5e93\u200b\u6587\u4ef6\u200b .i</p> <p>gcc  -E  hello.c  -o  hello.i</p> <p>-S  \u200b\u6c47\u7f16\u200b\uff1a .i  \u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u6c47\u7f16\u200b\u4ee3\u7801\u200b\u6587\u4ef6\u200b     .s</p> <p>gcc  -S  hello.i  -o  hello.s</p> <p>-C \u200b\u7f16\u8bd1\u200b\uff1a  .S \u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b  .o     .obj </p> <p>gcc  -c  hello.s    -o hello.o </p> <p>-o \u200b\u94fe\u63a5\u200b\uff1a  .o \u200b\u94fe\u63a5\u200b   .exe   windows     .elf</p> <p>gcc hello.o  -o   hello</p> <p>-nB \u200b\u53ea\u200b\u6253\u5370\u200b\u4e0d\u200b\u8fd0\u884c\u200b</p> <p>$(info  xxxx) \u200b\u6267\u884c\u200b\u4e2d\u200b\u6253\u5370\u200b</p> <p>gcc   hello.c -o hello     //\u200b\u4e00\u884c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u751f\u6210\u200b hello Makefile\u200b\u7206\u200berror\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u8fd9\u4e2a\u200berror\u200b\u662f\u200b\u7531\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u9000\u51fa\u200b\u7801\u200bLinux \u200b\u4e2d\u200b\u9000\u51fa\u200b\u7801\u200b\u7684\u200b\u542b\u4e49\u200b\u51b3\u5b9a\u200b\u7684\u200b\u3002\u200b\u5f53\u200b\u7a0b\u5e8f\u200b\u9000\u51fa\u200b\u7801\u4e3a\u200b0\uff0c\u200b\u7a0b\u5e8f\u200b\u6b63\u5e38\u200b\u6267\u884c\u200b\uff0c\u200b\u4e0d\u200b\u4e3a\u200b0\uff0c\u200b\u7a0b\u5e8f\u200b\u53d1\u751f\u200b\u5f02\u5e38\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u641c\u7d22\u200b\u9000\u51fa\u200b\u7801\u6765\u200b\u83b7\u5f97\u200bmakefile\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u53d1\u751f\u200b\u4e86\u200b\u4ec0\u4e48\u200b\u3002</p> <p>make\u200b\u547d\u4ee4\u200b\u6267\u884c\u200b\u540e\u200b\u6709\u200b\u4e09\u4e2a\u200b\u9000\u51fa\u200b\u7801\u200b\uff1a 0 \u2014\u2014 \u200b\u8868\u793a\u200b\u6210\u529f\u200b\u6267\u884c\u200b\u3002 1 \u2014\u2014 \u200b\u5982\u679c\u200bmake\u200b\u8fd0\u884c\u200b\u65f6\u200b\u51fa\u73b0\u200b\u4efb\u4f55\u200b\u9519\u8bef\u200b\uff0c\u200b\u5176\u200b\u8fd4\u56de\u200b1\u3002 2 \u2014\u2014 \u200b\u5982\u679c\u200b\u4f60\u200b\u4f7f\u7528\u200b\u4e86\u200bmake\u200b\u7684\u200b\u201c-q\u201d\u200b\u9009\u9879\u200b\uff0c\u200b\u5e76\u4e14\u200bmake\u200b\u4f7f\u5f97\u200b\u4e00\u4e9b\u200b\u76ee\u6807\u200b\u4e0d\u200b\u9700\u8981\u200b\u66f4\u65b0\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8fd4\u56de\u200b2\u3002</p>"},{"location":"src/NJU%20PA1-%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%89%8B%E5%86%8C/","title":"NJU PA1-\u200b\u5982\u4f55\u200b\u9605\u8bfb\u200b\u624b\u518c","text":""},{"location":"src/NJU%20PA1-%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%89%8B%E5%86%8C/#1","title":"1.\u200b\u7a0b\u5e8f\u200b\u662f\u200b\u4e2a\u200b\u72b6\u6001\u673a","text":"<p>1+2+...+100</p> <pre><code>(0,x,x)-&gt;\n(1,0,x)-&gt;\n(2,0,0)-&gt;\n(3,0,1)-&gt;\n(4,2,1)-&gt;\n(5,2,3)-&gt;\n(6,3,3)-&gt;\n(7,3,6)-&gt;\n(8,4,6)-&gt;\n.........\n(198,99,4851)-&gt;\n(199,99,4950)-&gt;\n(200,100,5050)\n</code></pre>"},{"location":"src/NJU%20PA1-%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%89%8B%E5%86%8C/#2rtfm","title":"2.RTFM","text":"<p>1).RISC-V\u200b\u6709\u200b6\u200b\u79cd\u200b\u6307\u4ee4\u200b\u683c\u5f0f\u200b</p> <p></p> <p>2).LUI (load upper immediate) is used to build 32-bit constants and uses the U-type format. LUI places the U-immediate value in the top 20 bits of the destination register rd, filling in the lowest 12 bits with zeros.</p> <p>3).</p> <p></p>"},{"location":"src/NJU%20PA1-%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%89%8B%E5%86%8C/#3-shell","title":"3. shell\u200b\u547d\u4ee4","text":"<p>\u200b\u53ef\u4ee5\u200b\u7528\u200bcheckout\u200b\u56de\u5230\u200bpa0</p> <p>\u200b\u7edf\u8ba1\u200b\u5b57\u6570\u200b\u4e0e\u200b\u884c\u6570\u200b</p> <pre><code>cnt_l := $(shell find . -name \"*.h\" -or -name \"*.c\" | xargs grep -ve \"^$$\" | wc -l)\ncnt_c := $(shell find . -name \"*.h\" -or -name \"*.c\" | xargs grep -ve \"^.\" | wc -l)\ncount:\n    @echo $(cnt_l) lines in nemu\n    @echo $(cnt_c) chars in nemu\n</code></pre>"},{"location":"src/NJU%20PA1-%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E6%89%8B%E5%86%8C/#4-wall-werror-wall-werror","title":"4.<code>-Wall</code>\u200b\u548c\u200b<code>-Werror</code>\u200b\u6709\u200b\u4ec0\u4e48\u200b\u4f5c\u7528\u200b? \u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u4f7f\u7528\u200b<code>-Wall</code>\u200b\u548c\u200b<code>-Werror</code>?","text":"<p>-Wall\u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u6253\u5f00\u200bgcc\u200b\u7684\u200b\u6240\u6709\u200b\u8b66\u544a\u200b\uff0c-Werror\u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u628a\u200b\u6240\u4ee5\u200b\u8b66\u544a\u200b\u5f53\u200b\u9519\u8bef\u5904\u7406\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u524d\u200b\u6587\u200b\u63d0\u5230\u200b:</p> <ul> <li><code>``markdown   \u200b\u6211\u4eec\u200b\u6765\u200b\u7b80\u5355\u200b\u68b3\u7406\u200b\u4e00\u4e0b\u200b\u6bb5\u200b\u9519\u8bef\u200b\u53d1\u751f\u200b\u7684\u200b\u539f\u56e0\u200b. \u200b\u9996\u5148\u200b, \u200b\u673a\u5668\u200b\u6c38\u8fdc\u200b\u662f\u200b\u5bf9\u200b\u7684\u200b. \u200b\u5982\u679c\u200b\u7a0b\u5e8f\u200b\u51fa\u200b\u4e86\u200b\u9519\u200b, \u200b\u5148\u200b\u6000\u7591\u200b\u81ea\u5df1\u200b\u7684\u200b\u4ee3\u7801\u200b\u6709\u200bbug. \u200b\u6bd4\u5982\u200b\u7531\u4e8e\u200b\u4f60\u200b\u7684\u200b\u758f\u5ffd\u200b, \u200b\u4f60\u200b\u7f16\u5199\u200b\u4e86\u200b</code>if (p = NULL)<code>\u200b\u8fd9\u6837\u200b\u7684\u200b\u4ee3\u7801\u200b. \u200b\u4f46\u200b\u6267\u884c\u200b\u5230\u200b\u8fd9\u884c\u200b\u4ee3\u7801\u200b\u7684\u200b\u65f6\u5019\u200b, \u200b\u4e5f\u200b\u53ea\u662f\u200b</code>p<code>\u200b\u88ab\u200b\u8d4b\u503c\u200b\u6210\u200b</code>NULL<code>, \u200b\u7a0b\u5e8f\u200b\u8fd8\u4f1a\u200b\u5f80\u200b\u4e0b\u200b\u6267\u884c\u200b. \u200b\u7136\u800c\u200b\u7b49\u5230\u200b\u5c06\u6765\u200b\u5bf9\u200b</code>p`\u200b\u8fdb\u884c\u200b\u4e86\u89e3\u200b\u5f15\u7528\u200b\u7684\u200b\u65f6\u5019\u200b, \u200b\u624d\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u6bb5\u200b\u9519\u8bef\u200b, \u200b\u7a0b\u5e8f\u200b\u5f7b\u5e95\u200b\u5d29\u6e83\u200b.</li> </ul> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4ece\u200b\u4e0a\u9762\u200b\u7684\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\u62bd\u8c61\u200b\u51fa\u200b\u4e00\u4e9b\u200b\u8f6f\u4ef6\u5de5\u7a0b\u200b\u76f8\u5173\u200b\u7684\u200b\u6982\u5ff5\u200b:</p> <ul> <li>Fault: \u200b\u5b9e\u73b0\u200b\u9519\u8bef\u200b\u7684\u200b\u4ee3\u7801\u200b, \u200b\u4f8b\u5982\u200b<code>if (p = NULL)</code></li> <li>Error: \u200b\u7a0b\u5e8f\u6267\u884c\u200b\u65f6\u200b\u4e0d\u200b\u7b26\u5408\u200b\u9884\u671f\u200b\u7684\u200b\u72b6\u6001\u200b, \u200b\u4f8b\u5982\u200b<code>p</code>\u200b\u88ab\u200b\u9519\u8bef\u200b\u5730\u200b\u8d4b\u503c\u200b\u6210\u200b<code>NULL</code></li> <li>Failure: \u200b\u80fd\u200b\u76f4\u63a5\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200b\u9519\u8bef\u200b, \u200b\u4f8b\u5982\u200b\u7a0b\u5e8f\u200b\u89e6\u53d1\u200b\u4e86\u200b\u6bb5\u200b\u9519\u8bef\u200b</li> </ul> <p>\u200b\u8c03\u8bd5\u200b\u5176\u5b9e\u200b\u5c31\u200b\u662f\u4ece\u200b\u89c2\u6d4b\u200b\u5230\u200b\u7684\u200bfailure\u200b\u4e00\u6b65\u200b\u4e00\u6b65\u200b\u56de\u6eaf\u200b\u5bfb\u627e\u200bfault\u200b\u7684\u200b\u8fc7\u7a0b\u200b, \u200b\u627e\u5230\u200b\u4e86\u200bfault\u200b\u4e4b\u540e\u200b, \u200b\u6211\u4eec\u200b\u5c31\u200b\u5f88\u5feb\u200b\u77e5\u9053\u200b\u5e94\u8be5\u200b\u5982\u4f55\u200b\u4fee\u6539\u200b\u9519\u8bef\u200b\u7684\u200b\u4ee3\u7801\u200b\u4e86\u200b. \u200b\u4f46\u200b\u4ece\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u770b\u51fa\u200b, \u200b\u8c03\u8bd5\u200b\u4e4b\u6240\u4ee5\u200b\u4e0d\u200b\u5bb9\u6613\u200b, \u200b\u6070\u6070\u200b\u662f\u56e0\u4e3a\u200b:</p> <ul> <li>fault\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u9a6c\u4e0a\u200b\u89e6\u53d1\u200berror</li> <li>\u200b\u89e6\u53d1\u200b\u4e86\u200berror\u200b\u4e5f\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u9a6c\u4e0a\u8f6c\u200b\u53d8\u6210\u200b\u53ef\u200b\u89c2\u6d4b\u200b\u7684\u200bfailure</li> <li>error\u200b\u4f1a\u200b\u50cf\u200b\u6eda\u96ea\u7403\u200b\u4e00\u822c\u200b\u8d8a\u79ef\u8d8a\u200b\u591a\u200b, \u200b\u5f53\u200b\u6211\u4eec\u200b\u89c2\u6d4b\u200b\u5230\u200bfailure\u200b\u7684\u200b\u65f6\u5019\u200b, \u200b\u5176\u5b9e\u200b\u5df2\u7ecf\u200b\u8ddd\u79bb\u200bfault\u200b\u975e\u5e38\u200b\u9065\u8fdc\u200b\u4e86\u200b</li> </ul> <p>\u200b\u7406\u89e3\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u539f\u56e0\u200b\u4e4b\u540e\u200b, \u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5236\u5b9a\u200b\u76f8\u5e94\u200b\u7684\u200b\u7b56\u7565\u200b\u4e86\u200b:</p> <ul> <li>\u200b\u5c3d\u53ef\u80fd\u200b\u628a\u200bfault\u200b\u8f6c\u53d8\u6210\u200berror. \u200b\u8fd9\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u6d4b\u8bd5\u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b, \u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u5728\u200b\u4e0a\u200b\u4e00\u8282\u200b\u4e2d\u200b\u52a0\u5165\u200b\u4e86\u200b\u8868\u8fbe\u5f0f\u200b\u751f\u6210\u5668\u200b\u7684\u200b\u5185\u5bb9\u200b, \u200b\u6765\u200b\u5e2e\u52a9\u200b\u5927\u5bb6\u200b\u8fdb\u884c\u200b\u6d4b\u8bd5\u200b, \u200b\u540e\u9762\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u5185\u5bb9\u200b\u4e5f\u200b\u4f1a\u200b\u63d0\u4f9b\u200b\u4e30\u5bcc\u200b\u7684\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b. \u200b\u4f46\u200b\u5e76\u200b\u4e0d\u662f\u200b\u6709\u200b\u4e86\u200b\u6d4b\u8bd5\u7528\u4f8b\u200b\u5c31\u200b\u80fd\u200b\u628a\u200b\u6240\u6709\u200bfault\u200b\u90fd\u200b\u8f6c\u53d8\u6210\u200berror\u200b\u4e86\u200b, \u200b\u56e0\u4e3a\u200b\u8fd9\u200b\u53d6\u51b3\u4e8e\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u8986\u76d6\u5ea6\u200b. \u200b\u8981\u200b\u8bbe\u8ba1\u200b\u51fa\u200b\u4e00\u5957\u200b\u5168\u200b\u8986\u76d6\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u5e76\u200b\u4e0d\u662f\u200b\u4e00\u4ef6\u200b\u7b80\u5355\u200b\u7684\u200b\u4e8b\u60c5\u200b, \u200b\u8d8a\u662f\u200b\u590d\u6742\u200b\u7684\u200b\u7cfb\u7edf\u200b, \u200b\u5168\u200b\u8986\u76d6\u200b\u7684\u200b\u6d4b\u8bd5\u200b\u5c31\u200b\u8d8a\u200b\u96be\u200b\u8bbe\u8ba1\u200b. \u200b\u4f46\u662f\u200b, \u200b\u5982\u4f55\u200b\u63d0\u9ad8\u200b\u6d4b\u8bd5\u200b\u7684\u200b\u8986\u76d6\u5ea6\u200b, \u200b\u662f\u200b\u5b66\u672f\u754c\u200b\u4e00\u76f4\u200b\u4ee5\u6765\u200b\u90fd\u200b\u5728\u200b\u5173\u6ce8\u200b\u7684\u200b\u95ee\u9898\u200b.</li> </ul> <p>\u200b\u4f60\u200b\u4f1a\u200b\u5982\u4f55\u200b\u6d4b\u8bd5\u200b\u4f60\u200b\u7684\u200b\u76d1\u89c6\u200b\u70b9\u200b\u5b9e\u73b0\u200b?</p> <p>\u200b\u6211\u4eec\u200b\u6ca1\u6709\u200b\u63d0\u4f9b\u200b\u76d1\u89c6\u200b\u70b9\u200b\u76f8\u5173\u200b\u7684\u200b\u6d4b\u8bd5\u200b, \u200b\u601d\u8003\u200b\u4e00\u4e0b\u200b, \u200b\u4f60\u200b\u4f1a\u200b\u5982\u4f55\u200b\u6d4b\u8bd5\u200b?</p> <p>\u200b\u5f53\u7136\u200b, \u200b\u5bf9\u4e8e\u200b\u5b9e\u9a8c\u200b\u6765\u8bf4\u200b, \u200b\u5c06\u6765\u200b\u8fb9\u7528\u200b\u8fb9\u6d4b\u200b\u4e5f\u200b\u662f\u200b\u4e00\u79cd\u200b\u8bf4\u5f97\u8fc7\u53bb\u200b\u7684\u200b\u65b9\u6cd5\u200b, \u200b\u5c31\u200b\u770b\u200b\u4f60\u200b\u5bf9\u200b\u81ea\u5df1\u200b\u4ee3\u7801\u200b\u7684\u200b\u4fe1\u5fc3\u200b\u4e86\u200b.</p> <ul> <li>\u200b\u5c3d\u65e9\u200b\u89c2\u6d4b\u200b\u5230\u200berror\u200b\u7684\u200b\u5b58\u5728\u200b. \u200b\u89c2\u6d4b\u200b\u5230\u200berror\u200b\u7684\u200b\u65f6\u673a\u200b\u76f4\u63a5\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u8c03\u8bd5\u200b\u7684\u200b\u96be\u5ea6\u200b: \u200b\u5982\u679c\u200b\u7b49\u5230\u200b\u89e6\u53d1\u200bfailure\u200b\u7684\u200b\u65f6\u5019\u200b\u624d\u200b\u53d1\u73b0\u200berror\u200b\u7684\u200b\u5b58\u5728\u200b, \u200b\u8c03\u8bd5\u200b\u5c31\u200b\u4f1a\u200b\u6bd4\u8f83\u200b\u56f0\u96be\u200b; \u200b\u4f46\u200b\u5982\u679c\u200b\u80fd\u200b\u5728\u200berror\u200b\u521a\u521a\u200b\u89e6\u53d1\u200b\u7684\u200b\u65f6\u5019\u200b\u5c31\u200b\u89c2\u6d4b\u200b\u5230\u200b\u5b83\u200b, \u200b\u8c03\u8bd5\u200b\u96be\u5ea6\u200b\u4e5f\u200b\u5c31\u200b\u5927\u5927\u964d\u4f4e\u200b\u4e86\u200b. \u200b\u4e8b\u5b9e\u4e0a\u200b, \u200b\u4f60\u200b\u5df2\u7ecf\u200b\u89c1\u8bc6\u200b\u8fc7\u200b\u4e00\u4e9b\u200b\u6709\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\u4e86\u200b:<ul> <li><code>-Wall</code>, <code>-Werror</code>: \u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u523b\u200b\u628a\u200b\u6f5c\u5728\u200b\u7684\u200bfault\u200b\u76f4\u63a5\u200b\u8f6c\u53d8\u6210\u200bfailure. \u200b\u8fd9\u79cd\u200b\u5de5\u5177\u200b\u7684\u200b\u4f5c\u7528\u200b\u5f88\u200b\u6709\u9650\u200b, \u200b\u53ea\u80fd\u200b\u5bfb\u627e\u200b\u4e00\u4e9b\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u523b\u200b\u4e5f\u200b\u89c9\u5f97\u200b\u53ef\u7591\u200b\u7684\u200bfault, \u200b\u4f8b\u5982\u200b<code>if (p = NULL)</code>. \u200b\u4e0d\u8fc7\u200b\u968f\u7740\u200b\u7f16\u8bd1\u5668\u200b\u7248\u672c\u200b\u7684\u200b\u589e\u5f3a\u200b, \u200b\u7f16\u8bd1\u5668\u200b\u4e5f\u200b\u80fd\u200b\u53d1\u73b0\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e9b\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200bopen in new window. \u200b\u8fd9\u4e9b\u200b\u90fd\u200b\u662f\u200b\u514d\u8d39\u200b\u7684\u200b\u5348\u9910\u200b, \u200b\u4e0d\u5403\u200b\u5c31\u200b\u771f\u7684\u200b\u767d\u767d\u6d6a\u8d39\u200b\u4e86\u200b.</li> <li><code>assert()</code>: \u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u523b\u200b\u628a\u200berror\u200b\u76f4\u63a5\u200b\u8f6c\u53d8\u6210\u200bfailure. <code>assert()</code>\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u7b80\u5355\u200b\u5374\u200b\u53c8\u200b\u975e\u5e38\u200b\u5f3a\u5927\u200b\u7684\u200b\u5de5\u5177\u200b, \u200b\u53ea\u8981\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u597d\u200b\u7a0b\u5e8f\u200b\u5e94\u8be5\u200b\u6ee1\u8db3\u200b\u7684\u200b\u7279\u5f81\u200b, \u200b\u5c31\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u523b\u200b\u5c06\u200b\u4e0d\u200b\u6ee1\u8db3\u200b\u8fd9\u4e9b\u200b\u7279\u5f81\u200b\u7684\u200berror\u200b\u62e6\u622a\u200b\u4e0b\u6765\u200b. \u200b\u4f8b\u5982\u200b\u94fe\u8868\u200b\u7684\u200b\u5b9e\u73b0\u200b, \u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u63d2\u5165\u200b\u4e00\u4e9b\u200b\u5f88\u200b\u7b80\u5355\u200b\u7684\u200b<code>assert()</code>(\u200b\u4f8b\u5982\u200b\u6307\u9488\u200b\u89e3\u200b\u5f15\u7528\u200b\u65f6\u4e0d\u4e3a\u200b\u7a7a\u200b), \u200b\u5c31\u200b\u80fd\u591f\u200b\u51e0\u4e4e\u200b\u544a\u522b\u200b\u6bb5\u200b\u9519\u8bef\u200b. \u200b\u4f46\u662f\u200b, \u200b\u7f16\u5199\u200b\u8fd9\u4e9b\u200b<code>assert()</code>\u200b\u5176\u5b9e\u200b\u9700\u8981\u200b\u6211\u4eec\u200b\u5bf9\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u884c\u4e3a\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u4e86\u89e3\u200b, \u200b\u540c\u65f6\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u7279\u5f81\u200b\u4e0d\u6613\u200b\u8868\u8fbe\u200b\u7684\u200b\u65f6\u5019\u200b, <code>assert()</code>\u200b\u7684\u200b\u4f5c\u7528\u200b\u4e5f\u200b\u8f83\u4e3a\u200b\u6709\u9650\u200b.</li> <li><code>printf()</code>: \u200b\u901a\u8fc7\u200b\u8f93\u51fa\u200b\u7684\u200b\u65b9\u5f0f\u200b\u89c2\u5bdf\u200b\u6f5c\u5728\u200b\u7684\u200berror. \u200b\u8fd9\u662f\u200b\u7528\u4e8e\u200b\u56de\u6eaf\u200bfault\u200b\u65f6\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u5de5\u5177\u200b, \u200b\u7528\u4e8e\u200b\u89c2\u6d4b\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u7684\u200b\u53d8\u91cf\u200b\u662f\u5426\u200b\u8fdb\u5165\u200b\u4e86\u200b\u9519\u8bef\u200b\u7684\u200b\u72b6\u6001\u200b. \u200b\u5728\u200bNEMU\u200b\u4e2d\u200b\u6211\u4eec\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u8f93\u51fa\u200b\u66f4\u200b\u591a\u200b\u8c03\u8bd5\u4fe1\u606f\u200b\u7684\u200b\u5b8f\u200b<code>Log()</code>, \u200b\u5b83\u200b\u5b9e\u9645\u4e0a\u200b\u5c01\u88c5\u200b\u4e86\u200b<code>printf()</code>\u200b\u7684\u200b\u529f\u80fd\u200b. \u200b\u4f46\u200b\u7531\u4e8e\u200b<code>printf()</code>\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u8f93\u51fa\u200b\u7684\u200b\u7ed3\u679c\u200b\u4eba\u5de5\u200b\u5224\u65ad\u200b\u662f\u5426\u200b\u6b63\u786e\u200b, \u200b\u5728\u200b\u4fbf\u5229\u200b\u7a0b\u5ea6\u200b\u4e0a\u200b\u76f8\u5bf9\u200b\u4e8e\u200b<code>assert()</code>\u200b\u7684\u200b\u81ea\u52a8\u200b\u5224\u65ad\u200b\u5c31\u200b\u900a\u8272\u200b\u4e86\u200b\u4e0d\u5c11\u200b.   ```</li> </ul> </li> </ul> <p>\u200b\u56e0\u800c\u200b-Wall,-Werror\u200b\u53ef\u4ee5\u200b\u5927\u91cf\u200b\u51cf\u5c11\u200b\u56e0\u4e3a\u200bFault\u200b\u95ee\u9898\u200b\u800c\u200b\u4ea7\u751f\u200b\u7684\u200b\u9519\u8bef\u200b\uff0c\u200b\u63d0\u5347\u200b\u5f00\u53d1\u200b\u6548\u7387\u200b</p>"},{"location":"src/PA2.1%E4%B8%80%E6%9D%A1%E6%8C%87%E4%BB%A4%E5%9C%A8NEMU%E4%B8%AD%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/","title":"PA2.1\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u5728\u200bNEMU\u200b\u4e2d\u200b\u7684\u200b\u6267\u884c\u200b\u8fc7\u7a0b","text":"<pre><code>cpu_exec(uint64_t n)\n</code></pre> <p>\u200b\u9996\u5148\u200b\u8fdb\u5165\u200bcpu_exec(uint64_t n)\uff0cn\u200b\u4e3a\u200b\u6b65\u6570\u200b</p> <p>\u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u9ed8\u8ba4\u200b\u6267\u884c\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b</p> <pre><code>cpu_exec(uint64_t n) {\nexecute(1);//\u200b\u8c03\u7528\u200bexecute\uff0c\u200b\u6267\u884c\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\n}\n</code></pre> <p>\u200b\u8fdb\u5165\u200bexecute</p> <pre><code>typedef struct Decode {\nvaddr_t pc;\nvaddr_t snpc; // static next pc\nvaddr_t dnpc; // dynamic next pc\nISADecodeInfo isa;\nIFDEF(CONFIG_ITRACE, char logbuf[128]);\n} Decode;\n\n\n\nstatic void execute(uint64_t n) {\nDecode s;  //\u200b\u521b\u5efa\u200b\u7ed3\u6784\u200b\u4f53\u200bs,\nfor (;n &gt; 0; n --) { //\u200b\u6267\u884c\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\nexec_once(&amp;s, cpu.pc); //\u200b\u4f20\u9012\u200bs\u200b\u548c\u200b\u5f53\u524d\u200bpc\ng_nr_guest_inst ++; //\u200b\u5ba2\u6237\u7a0b\u5e8f\u200b\u663e\u793a\u200b\u6b65\u6570\u200b+1\ntrace_and_difftest(&amp;s, cpu.pc);\nif (nemu_state.state != NEMU_RUNNING) break;\nIFDEF(CONFIG_DEVICE, device_update());\n}\n}\n</code></pre> <p>\u200b\u5bf9\u200bexec_once(&amp;s, cpu.pc)\u200b\u8fdb\u884c\u200b\u5c55\u5f00\u200b</p> <pre><code>static void exec_once(Decode *s, vaddr_t pc) {\ns-&gt;pc = pc; s-&gt;snpc = pc; isa_exec_once(s); //\u200b\u8fdb\u5165\u200b\u5bf9\u5e94\u200b\u7684\u200bisa\u200b\u6267\u884c\u200b\u6307\u4ee4\u200b\ncpu.pc = s-&gt;dnpc; //\u200b\u6307\u4ee4\u200b\u7ed3\u675f\u200b\u540e\u200b\u66f4\u65b0\u200bpc\n}\n</code></pre> <p>\u200b\u5bf9\u200bisa_exec_once(s)\u200b\u8fdb\u884c\u200b\u5c55\u5f00\u200b</p> <pre><code>int isa_exec_once(Decode *s) {\ns-&gt;isa.inst.val = inst_fetch(&amp;s-&gt;snpc, 4);  //inst_fetch\u200b\u8fdb\u884c\u200b\u53d6\u6307\u200b\uff0c\u200b\u7136\u540e\u200b\u8d4b\u503c\u200b\u7ed9\u200binst.val\nreturn decode_exec(s); //\u200b\u8fdb\u5165\u200b\u8bd1\u7801\u200b\uff0c\u200b\u6267\u884c\u200b\u9636\u6bb5\u200b\n}\n</code></pre> <p>\u200b\u5c55\u5f00\u200binst_fetch</p> <pre><code>word_t vaddr_ifetch(vaddr_t addr, int len) {\nreturn paddr_read(addr, len);\n} //\u200b\u901a\u8fc7\u200b\u5730\u5740\u200b\u8bfb\u200b\u5185\u5b58\u200b len=4\u200b\u5c31\u662f\u200b4\u200b\u5b57\u8282\u200b\uff0c32\u200b\u4f4d\u200b\n\nstatic inline uint32_t inst_fetch(vaddr_t *pc, int len) {\nuint32_t inst = vaddr_ifetch(*pc, len);\n(*pc) += len; //pc+4\nreturn inst; //\u200b\u8fd4\u56de\u200binst\n}\n</code></pre> <p>decode_exec(s); //\u200b\u8fdb\u5165\u200b\u8bd1\u7801\u200b\uff0c\u200b\u6267\u884c\u200b\u9636\u6bb5\u200b</p> <pre><code>static int decode_exec(Decode *s) {\nint rd = 0; word_t src1 = 0, src2 = 0, imm = 0; //\u200b\u521d\u59cb\u5316\u200b\ns-&gt;dnpc = s-&gt;snpc; //snpc\u200b\u8d4b\u503c\u200b\u7ed9\u200bdnpc\n\n#define INSTPAT_INST(s) ((s)-&gt;isa.inst.val)\n#define INSTPAT_MATCH(s, name, type, ... /* execute body */ ) { \\\n  decode_operand(s, &amp;rd, &amp;src1, &amp;src2, &amp;imm, concat(TYPE_, type)); \\\n  __VA_ARGS__ ; \\\n}//\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\n\nINSTPAT_START(); //\u200b\u8bd1\u7801\u200b+\u200b\u6267\u884c\u200b\u5f00\u59cb\u200b\nINSTPAT(\"??????? ????? ????? ??? ????? 00101 11\", auipc  , U, R(rd) = s-&gt;pc + imm);\nINSTPAT(\"??????? ????? ????? 100 ????? 00000 11\", lbu    , I, R(rd) = Mr(src1 + imm, 1));\nINSTPAT(\"??????? ????? ????? 000 ????? 01000 11\", sb     , S, Mw(src1 + imm, 1, src2));\n\nINSTPAT(\"0000000 00001 00000 000 00000 11100 11\", ebreak , N, NEMUTRAP(s-&gt;pc, R(10))); // R(10) is $a0\nINSTPAT(\"??????? ????? ????? ??? ????? ????? ??\", inv    , N, INV(s-&gt;pc));\nINSTPAT_END(); //\u200b\u8bd1\u7801\u200b+\u200b\u6267\u884c\u200b\u7ed3\u675f\u200b\n\nR(0) = 0; // reset $zero to 0\n\nreturn 0;\n}\n</code></pre> <p>INSTPAT\u200b\u4e8e\u200b\u5b9a\u4e49\u200b\u4e00\u6761\u200b\u6a21\u5f0f\u5339\u914d\u200b\u89c4\u5219\u200b</p> <p><code>\u200b\u6a21\u5f0f\u200b\u5b57\u7b26\u4e32\u200b</code>\u200b\u4e2d\u200b\u53ea\u200b\u5141\u8bb8\u200b\u51fa\u73b0\u200b4\u200b\u79cd\u200b\u5b57\u7b26\u200b:</p> <ul> <li><code>0</code>\u200b\u8868\u793a\u200b\u76f8\u5e94\u200b\u7684\u200b\u4f4d\u200b\u53ea\u80fd\u200b\u5339\u914d\u200b<code>0</code></li> <li><code>1</code>\u200b\u8868\u793a\u200b\u76f8\u5e94\u200b\u7684\u200b\u4f4d\u200b\u53ea\u80fd\u200b\u5339\u914d\u200b<code>1</code></li> <li><code>?</code>\u200b\u8868\u793a\u200b\u76f8\u5e94\u200b\u7684\u200b\u4f4d\u200b\u53ef\u4ee5\u200b\u5339\u914d\u200b<code>0</code>\u200b\u6216\u200b<code>1</code></li> <li>\u200b\u7a7a\u683c\u200b\u662f\u200b\u5206\u9694\u7b26\u200b, \u200b\u53ea\u200b\u7528\u4e8e\u200b\u63d0\u5347\u200b\u6a21\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u53ef\u8bfb\u6027\u200b, \u200b\u4e0d\u200b\u53c2\u4e0e\u200b\u5339\u914d\u200b</li> </ul> <p>INSTPAT(\u200b\u5339\u914d\u200binst\u200b\u8868\u8fbe\u5f0f\u200b, \u200b\u6307\u4ee4\u200b\u540d\u79f0\u200b  ,\u200b\u6307\u4ee4\u200b\u7d2f\u200b\u7684\u200b, \u200b\u6267\u884c\u200b\u64cd\u4f5c\u200b;</p> <p>\u200b\u987a\u539f\u8def\u200b\u4e00\u8def\u200b\u8fd4\u56de\u200b\uff0c\u200b\u8d70\u200b\u5230\u200b\u8fd9\u91cc\u200b pc+1 \u200b\u8fc7\u7a0b\u200b\u7ed3\u675f\u200b</p> <pre><code>static void exec_once(Decode *s, vaddr_t pc) {\n  s-&gt;pc = pc; \n  s-&gt;snpc = pc; \n  isa_exec_once(s); //\u200b\u8fdb\u5165\u200b\u5bf9\u5e94\u200b\u7684\u200bisa\u200b\u6267\u884c\u200b\u6307\u4ee4\u200b\n  cpu.pc = s-&gt;dnpc; //\u200b\u6307\u4ee4\u200b\u7ed3\u675f\u200b\u540e\u200b\u66f4\u65b0\u200bpc\n}\n</code></pre>"},{"location":"src/TMUX%E4%B8%8EVIM/","title":"TMUX\u200b\u4e0e\u200bVIM","text":""},{"location":"src/TMUX%E4%B8%8EVIM/#tmux","title":"Tmux","text":"<p>\u200b\u4f5c\u7528\u200b 1.\u200b\u5206\u5c4f\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5f00\u53d1\u200b\u6846\u91cc\u200b\u5206\u5c4f\u200b 2.\u200b\u5141\u8bb8\u200bterminal\u200b\u5728\u200b\u8fde\u63a5\u200b\u65ad\u5f00\u200b\u4e4b\u540e\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u8fd0\u884c\u200b\uff0c\u200b\u8ba9\u200b\u8fdb\u7a0b\u200b\u4e0d\u4f1a\u200b\u56e0\u4e3a\u200b\u65ad\u5f00\u8fde\u63a5\u200b\u800c\u200b\u4e2d\u65ad\u200b</p> <p>\u200b\u7ed3\u6784\u200b</p> <ul> <li>\u200b\u4e00\u4e2a\u200btmux\u200b\u53ef\u4ee5\u200b\u6709\u200b\u4e00\u5806\u200bsession</li> <li>\u200b\u6bcf\u4e2a\u200bsesion\u200b\u53ef\u5f00\u200b\u5f88\u591a\u200b\u7684\u200bwindow</li> <li>\u200b\u6bcf\u4e2a\u200bwindow\u200b\u53ef\u4ee5\u200b\u5f00\u200b\u5f88\u591a\u200bpane</li> <li>\u200b\u6bcf\u4e2a\u200bpane\u200b\u53ef\u4ee5\u200b\u6253\u5f00\u200b\u4e00\u4e2a\u200bshell\u200b\u4ea4\u4e92\u200b</li> </ul> <p>\u200b\u5982\u56fe\u6240\u793a\u200b\uff1a</p> <p>\u200b\u5e38\u89c4\u200b\u64cd\u4f5c\u200b \u200b\u524d\u8a00\u200b:tmux\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200bsession\uff0csession\u200b\u4e2d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200bwindow</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#1","title":"1).\u200b\u5207\u5206\u200b\uff1a","text":"<p>\u200b\u7ad6\u76f4\u200b\u5207\u5206\u200b\uff1a\u200b\u5148\u200b\u6309\u200bctrl+a\u200b\u677e\u5f00\u200b\uff0c\u200b\u8f93\u5165\u200b%\uff0c\u200b\u4e5f\u200b\u5c31\u662f\u200b\u6309\u4e0b\u200bshift+5 \u200b\u5f53\u200b\u6309\u200b\u4e0b\u200bctrl+d\uff0c\u200b\u53ef\u4ee5\u200b\u5173\u95ed\u200btmux \u200b\u6c34\u5e73\u200b\u5207\u5206\u200b\uff1a\u200b\u5148\u200b\u6309\u200bctrl+a\uff0c\u200b\u518d\u200b\u6309\u200b\u201d,\u200b\u5373\u200b shift+' \u200b\u540c\u6837\u200b\u7684\u200b\u6309\u200b\u4e0b\u200bctrl+d\u200b\u53d6\u6d88\u200b \u200b\u5bf9\u4e8e\u200b\u5207\u5206\u200b\u6765\u8bf4\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u5757\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7ee7\u7eed\u200b\u5207\u5206\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#2","title":"2).\u200b\u9000\u51fa\u200b\uff1a","text":"<p>ctrl+d \u200b\u9000\u51fa\u200b \u200b\u5f53\u200bwindow\u200b\u6ca1\u6709\u200bpane\u200b\u65f6\u200b\uff0c\u200b\u81ea\u52a8\u200b\u9000\u51fa\u200b \u200b\u5f53\u200bsession\u200b\u6ca1\u6709\u200bwindow\u200b\u65f6\u200b\uff0c\u200b\u81ea\u52a8\u200b\u9000\u51fa\u200b \u200b\u6545\u200b\u4e00\u76f4\u200bctrl+d\u200b\u4e0b\u53bb\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u9000\u51fa\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#3pane","title":"3).\u200b\u9009\u62e9\u200bpane\uff1a","text":"<p>\u200b\u9f20\u6807\u200b\u70b9\u51fb\u200b\u5373\u53ef\u200b\u6216\u200b\u8f93\u5165\u200bctrl+a\uff0c\u200b\u7136\u540e\u200b\u6309\u200b\u65b9\u5411\u952e\u200b\u9009\u62e9\u200b\u76f8\u90bb\u200b\u7684\u200bpane</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#4","title":"4).\u200b\u8c03\u6574\u200b\u5206\u5272\u7ebf\u200b\uff1a","text":"<p>\u200b\u9009\u4e2d\u200b\u5e76\u200b\u62d6\u52a8\u200b\u5373\u53ef\u200b\u6216\u8005\u200bctrl+a\u200b\u540c\u65f6\u200b(\u200b\u540c\u65f6\u200b\u4e5f\u200b\u4e0d\u200b\u677e\u5f00\u200b)\u200b\u6309\u200b\u65b9\u5411\u952e\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#5","title":"5).\u200b\u5168\u5c4f\u200b\u4e0e\u200b\u53d6\u6d88\u200b\u5168\u5c4f\u200b\uff1a","text":"<p>\u200b\u67d0\u4e2a\u200b\u7a97\u53e3\u200b\u5168\u5c4f\u200b\uff1a\u200b\u9009\u4e2d\u200b\u5e76\u200b\u6309\u200b\u4e0b\u200bctrl+A\u200b\u518d\u200b\u6309\u200bz \u200b\u540c\u6837\u200b\u53d6\u6d88\u200b\u6309\u200bctrl+A\u200b\u518d\u200b\u6309\u200bz</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#6","title":"6).\u200b\u6302\u200b\u8d77\u200b\u7a97\u53e3\u200b\uff1a","text":"<p>ctrl+a\u200b\u7136\u540e\u200b\u6309\u200bd\uff0c\u200b\u6b64\u4e3a\u200b\u4ece\u200bsession\u200b\u4e2d\u200b\u9000\u51fa\u200b \u200b\u8f93\u5165\u200btmux a \u200b\u6216\u200btmux attach\uff0c\u200b\u518d\u200b\u5f00\u542f\u200bsession\u200b\u7a97\u53e3\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#7session","title":"7).\u200b\u9009\u62e9\u200b\u5176\u4ed6\u200b\u7684\u200bsession\uff1a","text":"<p>\u200b\u5148\u200b\u8fdb\u5165\u200btmux\uff0c\u200b\u7136\u540e\u200b\u5728\u200btmux\u200b\u91cc\u200b\u8f93\u5165\u200bctrl+a\u200b\u518d\u200b\u6309\u200bs \u200b\u518d\u200bsession\u200b\u91cc\u200b\u7684\u200b\u65b9\u5411\u952e\u200b\u64cd\u4f5c\u200b\uff1a \u2192\u200b\u5c55\u5f00\u200b\uff0c\u2192\u200b\u518d\u200b\u6309\u200b\u4e00\u6b21\u200b\u662f\u200b\u5c55\u5f00\u200b\u6240\u6709\u200bpane \u2190\u200b\u6309\u4e0b\u200b\u662f\u200b\u5408\u4e0a\u200b\u6240\u6709\u200bpane \u2190\u200b\u5408\u200b\u4e0a\u200b \u2191\u2193\u200b\u9009\u62e9\u200bsession \u200b\u5982\u4e0b\u200b\u6240\u793a\u200b\uff1a\u200b\u4e00\u5171\u200b9\u200b\u4e2a\u200bsession\uff0c\u200b\u70b9\u5f00\u200b\u5c55\u5f00\u200b\u662f\u200b\u4e00\u7cfb\u5217\u200bwindow\uff0c\u200b\u518d\u200b\u5c55\u5f00\u200bwindow\u200b\u662f\u200bpane</p> <p>8).session\u200b\u4e2d\u200b\u521b\u5efa\u200bwindow\u200b\u4e0e\u200b\u9009\u62e9\u200bwindow\uff1actrl+a\u200b\u518d\u200b\u6309\u200bc\uff1a\u200b\u521b\u5efa\u200bwindow ctrl+a\u200b\u518d\u200b\u6309\u200bw\uff1a\u200b\u9009\u62e9\u200b\u5176\u4ed6\u200bwindow\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5c55\u5f00\u200b\u5408\u200b\u4e0a\u200b\u6bcf\u4e2a\u200bwindow \u200b\u6ce8\u200b\uff1actrl+a+s\u200b\u4e0e\u200bctrl+a+w\u200b\u7684\u200b\u533a\u522b\u200b:\u200b\u524d\u8005\u200b\u6253\u5f00\u200b\u53ea\u200b\u5c55\u5f00\u200bsession\u200b\u4e00\u7ea7\u200b\uff0c\u200b\u5c55\u793a\u200bsession\u200b\u7ea7\u200b\u4e2d\u200b\u6240\u6709\u200b\u7684\u200bwindow\u200b\u5982\u56fe\u200b\u4e00\u200b\uff0c\u200b\u540e\u8005\u200b\u6253\u5f00\u200b\u9ed8\u8ba4\u200b\u662f\u200bw\u200b\u4e00\u7ea7\u200b\uff0c\u200b\u5c55\u5f00\u200bwindow\u200b\u7ea7\u200b\u4e2d\u200b\u6240\u6709\u200b\u7684\u200bpane\uff0c\u200b\u5982\u56fe\u200b\u4e8c\u200b</p> <p></p> <p></p>"},{"location":"src/TMUX%E4%B8%8EVIM/#9","title":"9).\u200b\u7ffb\u9605\u200b\u5185\u5bb9\u200b\uff1a","text":"<p>\u2191\u200b\u6eda\u8f6e\u200b\u5411\u4e0a\u200b \u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u9f20\u6807\u200b\uff1actrl+a\u200b\u518d\u200b\u6309\u200bPageup\u200b\u5411\u4e0a\u200b\u7ffb\u200b\uff0c\u200b\u6309\u200bPageUp\u200b\u5411\u4e0b\u200b\u7ffb\u200b \u200b\u6309\u200bPageUp\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u5524\u9192\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#10tmux","title":"10).\u200b\u4ece\u200btmux\u200b\u4e2d\u200b\u590d\u5236\u200b\u6587\u672c\u200b\uff1a","text":"<p>\u200b\u6309\u4f4f\u200bshift\u200b\u952e\u200b\u9009\u62e9\u200b\u6587\u672c\u200b ctrl+insert\u200b\u590d\u5236\u200b shift+insert\u200b\u7c98\u8d34\u200b mac\u200b\u7535\u8111\u200b\uff1acommand+c\u200b\u590d\u5236\u200b command+v\u200b\u7c98\u8d34\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#vim","title":"Vim","text":""},{"location":"src/TMUX%E4%B8%8EVIM/#1_1","title":"1).\u200b\u529f\u80fd","text":"<p>1.\u200b\u547d\u4ee4\u884c\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u7684\u200b\u6587\u672c\u7f16\u8f91\u200b\u5668\u200b 2.\u200b\u6839\u636e\u200b\u6269\u5c55\u540d\u200b\u5224\u522b\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4ee3\u7801\u200b\u7f29\u8fdb\u200b\u3001\u200b\u4ee3\u7801\u200b\u9ad8\u4eae\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#2_1","title":"2).\u200b\u4f7f\u7528","text":"<p>vim filename \u200b\u5982\u679c\u200b\u6709\u200b\u8be5\u200b\u6587\u4ef6\u200b\u5219\u200b\u6253\u5f00\u200b \u200b\u6ca1\u6709\u200b\u5219\u200b\u6253\u5f00\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u547d\u540d\u200b\u4e3a\u200bfilename</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#3","title":"3).\u200b\u6a21\u5f0f","text":"<p>1.\u200b\u4e00\u822c\u200b\u547d\u4ee4\u200b\u6a21\u5f0f\u200b/\u200b\u9ed8\u8ba4\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u65e0\u6cd5\u200b\u7f16\u5199\u200b\uff0c\u200b\u8f93\u5165\u200b\u547d\u4ee4\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u5b57\u6bcd\u200b\uff0c\u200b\u652f\u6301\u200b\u590d\u5236\u7c98\u8d34\u200b\u5220\u9664\u200b\u6587\u672c\u200b 2.\u200b\u7f16\u8f91\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u5728\u200b\u9ed8\u8ba4\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u6309\u200bi\uff0c\u200b\u8fdb\u5165\u200b\u7f16\u8f91\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u6309\u200besc\u200b\u9000\u51fa\u200b 3.\u200b\u547d\u4ee4\u884c\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u9ed8\u8ba4\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\u6309\u200b\uff1a/\uff1f\u200b\u4e09\u4e2a\u200b\u4e2d\u200b\u4efb\u610f\u200b\u4e00\u4e2a\u200b\u8fdb\u5165\u200b\u547d\u4ee4\u884c\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u547d\u4ee4\u884c\u200b\u5728\u200b\u6700\u200b\u4e0b\u9762\u200b\uff08\u200b\u4e2a\u4eba\u200b\u5efa\u8bae\u200b\u7528\u200b\uff1a\uff09\u200b\u652f\u6301\u200b\u67e5\u627e\u200b\u3001\u200b\u66ff\u6362\u200b\u3001\u200b\u4fdd\u5b58\u200b\u3001\u200b\u9000\u51fa\u200b\u3001\u200b\u914d\u7f6e\u200b\u7f16\u8f91\u5668\u200b\u7b49\u200b \u200b\u8f93\u5165\u200b:wq,\u200b\u4fdd\u5b58\u200b\u5e76\u200b\u9000\u51fa\u200b</p>"},{"location":"src/TMUX%E4%B8%8EVIM/#4_1","title":"4).\u200b\u64cd\u4f5c","text":"<p>1.i\uff1a\u200b\u8fdb\u5165\u200b\u7f16\u8f91\u200b\u6a21\u5f0f\u200b</p> <p>2.esc\uff1a\u200b\u8fdb\u5165\u200b\u4e00\u822c\u200b\u547d\u4ee4\u200b\u6a21\u5f0f\u200b</p> <p>3.\u200b\u5c0f\u952e\u76d8\u200b\u53ef\u4ee5\u200b\u64cd\u4f5c\u200b\u524d\u540e\u5de6\u53f3\u200b \u200b\u6ce8\u200b\uff1a\u200b\u5728\u200b\u547d\u4ee4\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff1avim\u200b\u4f1a\u5361\u200b\u5728\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\u524d\u9762\u200b\uff0c\u200b\u7f16\u8f91\u200b\u6a21\u5f0f\u200b\u4f1a\u5361\u200b\u5728\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b\uff0c\u200b\u4e0d\u50cf\u200bwin\uff0c\u200b\u79fb\u52a8\u200b\u5230\u200b\u6700\u540e\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u6362\u884c\u200b \u200b\u540c\u6837\u200b\u7684\u200b\uff0c\u200b\u65e0\u8bba\u662f\u200b\u4ec0\u4e48\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5f80\u200b\u5de6\u200b\u79fb\u52a8\u200b\u5230\u200b\u5f00\u5934\u200b\u5c31\u200b\u4f1a\u200b\u505c\u4e0b\u200b</p> <p>4.\u200b\u5149\u6807\u200b\u7684\u200b\u79fb\u52a8\u200b\u64cd\u4f5c\u200b\uff1an n\u200b\u662f\u200b\u6570\u5b57\u200b\uff0c\u200b\u5149\u6807\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u53f3\u79fb\u200bn\u200b\u4e2a\u5b57\u7b26\u200b \u200b\u4e00\u822c\u200b\u547d\u4ee4\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff1a0/home \u200b\u5c06\u200b\u5149\u6807\u200b\u79fb\u52a8\u200b\u5230\u200b\u672c\u884c\u200b\u5f00\u5934\u200b $/End \u200b\u5c06\u200b\u5149\u6807\u200b\u79fb\u52a8\u200b\u5230\u200b\u672c\u884c\u200b\u7ed3\u5c3e\u200b G:\u200b\u5149\u6807\u200b\u79fb\u52a8\u200b\u5230\u200b\u6700\u540e\u200b\u4e00\u884c\u200b <p>5.\u200b\u5177\u4f53\u200b\u5230\u200b\u54ea\u200b\u4e00\u884c\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff1a 1).n/nG:\u200b\u8868\u793a\u200b\u60f3\u200b\u53bb\u200b\u5177\u4f53\u200b\u5230\u200b\u54ea\u200b\u4e00\u884c\u200b\uff08n\u200b\u662f\u200b\u5230\u200b\u67d0\u200b\u4e00\u884c\u200b\u7684\u200b\u4e0b\u9762\u200b\uff0cnG\u200b\u662f\u200b\u76f4\u8fbe\u200b\uff09 2).gg:\u200b\u5230\u8fbe\u200b\u7b2c\u4e00\u884c\u200b 3).n \u200b\u5411\u4e0b\u200b\u8df3\u200bn\u200b\u884c\u200b <p>6.\u200b\u67e5\u627e\u200b\u4e0e\u200b\u4fee\u6539\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff1a 1)./word:\u200b\u5728\u200b\u547d\u4ee4\u884c\u200b\u6a21\u5f0f\u200b\u4e0b\u200b\uff0c\u200b\u5149\u6807\u200b\u4e4b\u4e0b\u200b\u5bfb\u627e\u200b\u7b2c\u4e00\u4e2a\u200b\u503c\u4e3a\u200bword\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b 2).?word:\u200b\u5728\u200b\u5149\u6807\u200b\u4e4b\u4e0a\u200b\u7b2c\u4e00\u4e2a\u200b\u503c\u4e3a\u200bword\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b 3).n:\u200b\u91cd\u590d\u200b\u524d\u200b\u4e00\u4e2a\u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b 4).N:\u200b\u53cd\u5411\u200b\u67e5\u627e\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u524d\u200b\u4e00\u4e2a\u200b\u547d\u4ee4\u200b\u5411\u524d\u200b\u627e\u200b\uff0c\u200b\u6b64\u200b\u547d\u4ee4\u200b\u4e0b\u200b\u5411\u200b\u540e\u200b\u627e\u200b 5).:n1,n2s/word1/word2/g:n1,n2\u200b\u4e3a\u200b\u6570\u5b57\u200b\uff0c\u200b\u5728\u200b\u7b2c\u200bn1\u200b\u4e0e\u200bn2\u200b\u4e4b\u95f4\u200b\u627e\u200bword1\uff0c\u200b\u5e76\u200b\u66ff\u6362\u200b\u4e3a\u200bword2 :1,s/word1/word2/g: \u200b\u5c06\u200b\u5168\u6587\u200b\u7684\u200bword1\u200b\u6362\u6210\u200bword2 :1,s/word1/word2/gc:\u200b\u5728\u200b\u6bcf\u200b\u4e00\u6b21\u200b\u66ff\u6362\u200b\u7684\u200b\u65f6\u5019\u200b\u90fd\u200b\u4f1a\u200b\u8ba9\u200b\u7528\u6237\u200b\u8fdb\u884c\u200b\u786e\u8ba4\u200b</p> <p>7.:noh \u200b\u5173\u95ed\u200b\u6240\u200b\u67e5\u627e\u200b\u7684\u200b\u5173\u952e\u8bcd\u200b\u7684\u200b\u9ad8\u4eae\u200b</p> <p>8.\u200b\u9009\u4e2d\u200b\u4e0e\u200b\u5220\u9664\u200b v:\u200b\u9009\u4e2d\u200b\u6587\u672c\u200b,\u200b\u6309\u200b\u4e24\u4e0b\u200besc\u200b\u53d6\u6d88\u200b d:\u200b\u5220\u9664\u200b\u9009\u4e2d\u200b\u6587\u672c\u200b(\u200b\u5176\u5b9e\u200b\u6709\u200b\u526a\u5207\u200b\u7684\u200b\u7279\u6027\u200b) dd:\u200b\u5220\u9664\u200b\u6574\u884c\u200b</p> <p>9.\u200b\u590d\u5236\u200b\u4e0e\u200b\u7c98\u8d34\u200b\uff1a y:\u200b\u590d\u5236\u200b(\u200b\u6587\u672c\u200b) p:\u200b\u5728\u200b\u5149\u6807\u200b\u6240\u200b\u5904\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u4e0b\u200b\u4e00\u884c\u200b\u6216\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u4f4d\u7f6e\u200b(\u200b\u901a\u5e38\u200b\u5f53\u200b\u5149\u6807\u200b\u5728\u200b\u4e24\u8fb9\u200b\u65f6\u200b)\u200b\u7c98\u8d34\u200b yy:\u200b\u590d\u5236\u200b\u5f53\u524d\u200b\u884c\u200b</p> <p>10.\u200b\u64a4\u9500\u200b:u:\u200b\u64a4\u9500\u200b ctrl+r:\u200b\u53d6\u6d88\u200b\u64a4\u9500\u200b \u200b\u6ce8\u200b:\u200b\u5728\u200bwindows\u200b\u91cc\u200b\uff0cctrl+z\u200b\u64a4\u9500\u200b\uff0cctrl+shift+z\u200b\u53d6\u6d88\u200b\u64a4\u9500\u200b</p> <p>11.&gt; \u200b\u5c06\u200b\u9009\u4e2d\u200b\u7684\u200b\u6587\u672c\u200b\u6574\u4f53\u200b\u5411\u200b\u53f3\u200b\u79fb\u52a8\u200b &lt; \u200b\u5c06\u200b\u9009\u4e2d\u200b\u7684\u200b\u6587\u672c\u200b\u6574\u4f53\u200b\u5411\u200b\u5de6\u200b\u79fb\u52a8\u200b</p> <p>12.\u200b\u4fdd\u5b58\u200b\u4e0e\u200b\u9000\u51fa\u200b\uff1a :w\u200b\u4fdd\u5b58\u200b :w! \u200b\u5f3a\u5236\u200b\u4fdd\u5b58\u200b \u200b\u4e00\u822c\u200b\u547d\u4ee4\u200b\u6a21\u5f0f\u200b\u4e0b\u200b:\u200b\u6309\u4e0b\u200bESC\uff0c\u200b\u6309\u200bq\u200b\u9000\u51fa\u200b :q! \u200b\u5f3a\u5236\u200b\u9000\u51fa\u200b\uff08\u200b\u4e0d\u200b\u4fdd\u5b58\u200b\uff09 :wq \u200b\u4fdd\u5b58\u200b\u5e76\u200b\u9000\u51fa\u200b :wq! \u200b\u5f3a\u5236\u200b\u4fdd\u5b58\u200b\u9000\u51fa\u200b</p> <p>13.\u200b\u884c\u53f7\u200b\u7684\u200b\u663e\u793a\u200b\u4e0e\u200b\u9690\u85cf\u200b: :set nonu \u200b\u9690\u85cf\u200b\u884c\u53f7\u200b :set nu \u200b\u663e\u793a\u200b\u884c\u53f7\u200b</p> <p>14.paste\u200b\u6a21\u5f0f\u200b: \u200b\u4e3a\u4ec0\u4e48\u200b:\u200b\u5f53\u8981\u200b\u7c98\u8d34\u200b\u8fc7\u6765\u200b\u7684\u200b\u4ee3\u7801\u200b\u5f88\u957f\u200b\u65f6\u200b\uff0c\u200b\u547d\u4ee4\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5931\u6548\u200b\uff0c\u200b\u5360\u7528\u200b\u5f88\u5927\u200b\u5e26\u5bbd\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u51fa\u73b0\u200b\u591a\u91cd\u200b\u7f29\u8fdb\u200b :set paste\u200b\u53d6\u6d88\u200b\u4ee3\u7801\u200b\u7f29\u8fdb\u200b\uff0c\u200b\u8bbe\u7f6e\u200b\u6210\u200b\u7c98\u8d34\u200b\u6a21\u5f0f\u200b :set nopaste\u200b\u5f00\u542f\u200b\u4ee3\u7801\u200b\u7f29\u8fdb\u200b</p> <p>15.\u200b\u5176\u4ed6\u200b\u4e0e\u200bgg\u200b\u6709\u5173\u200b\u7684\u200b gg+d+G \u200b\u5220\u9664\u200b\u5168\u90e8\u5185\u5bb9\u200b gg=G \u200b\u5c06\u200b\u5168\u6587\u200b\u683c\u5f0f\u5316\u200b</p> <p>16.vim\u200b\u7684\u200b\u5361\u6b7b\u200b\u5904\u7406\u200b ctrl+q:\u200b\u5f53\u200bvim\u200b\u5361\u6b7b\u200b\u65f6\u200b\uff0c\u200b\u53ef\u200b\u53d6\u6d88\u200b\u5f53\u524d\u200b\u6b63\u5728\u200b\u6267\u884c\u200b\u7684\u200b\u547d\u4ee4\u200b</p> <p>17.\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b:\u200b\u5f53\u524d\u200b\u8fdb\u7a0b\u200b\u51fa\u73b0\u200b\u51b2\u7a81\u200b\u65f6\u200b\uff0c\u200b\u4f1a\u200b\u51fa\u73b0\u5f02\u5e38\u200b \u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a1).\u200b\u627e\u5230\u200b\u6b63\u5728\u200b\u591a\u4e2a\u200b\u6253\u5f00\u200b\u7684\u200b\u6587\u4ef6\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u5e76\u200b\u5173\u6389\u200b\uff0c\u200b\u4fdd\u8bc1\u200b\u540c\u4e00\u4e2a\u200b\u8fdb\u7a0b\u200b\u53ea\u6709\u200b\u540c\u4e00\u4e2a\u200b\u6587\u4ef6\u200b\u80fd\u200b\u6253\u5f00\u200b 2).\u200b\u95ee\u9898\u200b\uff1a\u200b\u5f53\u200b\u4e00\u4e2a\u200b\u8fdb\u7a0b\u200b\u4e0d\u200b\u5c0f\u5fc3\u200b\u88ab\u200b\u5176\u4ed6\u200b\u8fdb\u7a0b\u200b\u6740\u6389\u200b\uff0c\u200b\u5f53\u200b\u518d\u200b\u6253\u5f00\u200bmain.cpp\u200b\u65f6\u200b\uff0c\u200b\u6b64\u65f6\u200b\u5982\u679c\u200b\u51fa\u73b0\u200b\u4e00\u4e2a\u200b.swp\u200b\u7f13\u5b58\u200b\u6587\u4ef6\u200b\u65f6\u4f1a\u200b\u62a5\u9519\u200b \u200b\u89e3\u51b3\u200b\uff1a\u200b\u5728\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\u8fdb\u7a0b\u200b\u6253\u5f00\u200b\u8be5\u200b\u6587\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b.swp\u200b\u6587\u4ef6\u200b\u5220\u6389\u200b\u5373\u53ef\u200b</p> <p>(\u200b\u8f6c\u8f7d\u200b)</p> <p>\u200b\u4f5c\u8005\u200b\uff1a\u200b\u6211\u200b\u771f\u7684\u200b\u83dc\u200b\u7684\u200b\u8981\u6b7b\u200b\u4e86\u200b \u200b\u94fe\u63a5\u200b\uff1ahttps://www.acwing.com/solution/content/126569/ \u200b\u6765\u6e90\u200b\uff1aAcWing</p>"},{"location":"src/Verilog%E9%9A%8F%E7%AC%94/","title":"Verilog\u200b\u968f\u7b14","text":"<p>if\u200b\u548c\u200bcase\u200b\u8bed\u53e5\u200b\u5fc5\u987b\u200b\u5728\u200balways\u200b\u91cc\u200b\u6267\u884c\u200b</p> <p>wire\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b=\uff0c\u200b\u8981\u200b\u7528\u200bassign\uff0creg\u200b\u7c7b\u578b\u200b\u7684\u200b\u624d\u80fd\u200b=</p> <p>always\u200b\u8bed\u53e5\u200b\u91cc\u200b\u662f\u200b\u4e0d\u80fd\u200b\u51fa\u73b0\u200bwire\u200b\u7c7b\u578b\u200b\u7684\u200b\uff0c\u200b\u7528\u200breg res\u200b\u53d8\u91cf\u200b\u53bb\u200b\u8d4b\u503c\u200b</p> <p>R1=(C&gt;D)?1'b1:1'b0  \u200b\u4e09\u76ee\u200b\u8fd0\u7b97\u7b26\u200b\u7528\u6cd5\u200b</p> <p>pipX_valid\u200b\u4e3a\u200b1\uff0c\u200b\u8fd9\u200b\u4e00\u7ea7\u200b\u6709\u200b\u6307\u4ee4\u200b\u5728\u200b\u8fd0\u884c\u200b</p> <p>pipX_ready_go \u200b\u5f53\u524d\u200b\u8fd9\u200b\u4e00\u7ea7\u200b\u6307\u4ee4\u200b\u6267\u884c\u200b\u5b8c\u6bd5\u200b</p> <p>pipX_allowin \u200b\u5f53\u524d\u200b\u7ea7\u200b\u51c6\u8bb8\u200b\u8fdb\u5165\u200b</p>"},{"location":"src/__am_gpu_config%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E8%A1%8C%E4%BC%98%E5%85%88%E5%AD%98%E5%82%A8%E6%98%AF%E4%BB%80%E4%B9%88/","title":"__am_gpu_config\u200b\u7684\u200b\u5b9e\u73b0\u200b\u4ee5\u53ca\u200b\u884c\u200b\u4f18\u5148\u200b\u5b58\u50a8\u200b\u662f\u200b\u4ec0\u4e48","text":"<p>\u200b\u884c\u200b\u4f18\u5148\u200b\u548c\u200b\u5217\u200b\u4f18\u5148\u200b\u5b58\u50a8\u200b \u200b\u6211\u4eec\u200b\u968f\u4fbf\u200b\u627e\u200b\u4e00\u4e2a\u200b\u77e9\u9635\u200b\u6765\u200b\u8bf4\u660e\u200b\u5427\u200b\uff0c\u200b\u6bd4\u5982\u8bf4\u200b\u5982\u4e0b\u200b\u7684\u200b\u77e9\u9635\u200ba:</p> <p>1, 3, 5 4, 2, 6, 7, 8, 9</p> <p>\u200b\u6211\u4eec\u200b\u90fd\u200b\u77e5\u9053\u200b\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b3\u200b\u884c\u200b3\u200b\u5217\u200b\u7684\u200b\u77e9\u9635\u200b\uff0c\u200b\u4f46\u662f\u200b\u5728\u200b\u8ba1\u7b97\u673a\u200b\u5185\u5b58\u200b\u91cc\u200b\u5b58\u50a8\u200b\u7684\u200b\u65f6\u5019\u200b\uff0c\u200b\u662f\u200b\u7ebf\u6027\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u4e5f\u5c31\u662f\u8bf4\u200b\u6240\u6709\u200b\u77e9\u9635\u7684\u5143\u200b\u7d20\u200b\u90fd\u200b\u88ab\u200b\u5b58\u50a8\u200b\u5230\u200b\u4e86\u200b\u4e00\u884c\u200b\u3002 \u200b\u5982\u679c\u200b\u662f\u200b\u884c\u200b\u4f18\u5148\u200b\u5b58\u50a8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u77e9\u9635\u200b\uff41\u200b\u5728\u200b\u5185\u5b58\u200b\u91cc\u200b\u662f\u200b\u8fd9\u4e48\u200b\u5b58\u50a8\u200b\u7684\u200b1,3,5,4,2,6,7,8,9\u3002\u200b\u5982\u679c\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u5217\u200b\u4f18\u5148\u200b\u5b58\u50a8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u77e9\u9635\u200b\uff41\u200b\u5728\u200b\u5185\u5b58\u200b\u91cc\u200b\u662f\u200b\u8fd9\u4e48\u200b\u5b58\u50a8\u200b\u7684\u200b1,4,7,3,2,8,5,6,9\u3002</p> <p>\u200b\u6839\u636e\u200b\u4ee5\u4e0a\u200b\u6982\u5ff5\u200b\uff0c\u200b\u6211\u4eec\u200b\u5bf9\u200b\u540c\u6b65\u200b\u5237\u65b0\u200b\u6a21\u5757\u200b\u8fd9\u6837\u200b\u7406\u89e3\u200b</p> <pre><code>void __am_gpu_fbdraw(AM_GPU_FBDRAW_T *ctl) {\nif (!ctl-&gt;sync&amp;&amp;(ctl-&gt;h==0||ctl-&gt;w==0)) return;\n//\u200b\u5982\u679c\u200b\u5237\u65b0\u200b\u5185\u5bb9\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\n\nuint32_t *fb =(uint32_t *)(uintptr_t)FB_ADDR;\nuint32_t vag_begin=inl(VGACTL_ADDR)&gt;&gt;16;\n//\u200b\u539f\u7406\u200b\u5c31\u662f\u200b\u884c\u200b\u4f18\u5148\u200b\u5b58\u50a8\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5199\u5165\u200b\u4e5f\u200b\u662f\u4ece\u200b\u884c\u5199\u200b\n//\u200b\u7b80\u5355\u200b\u6765\u8bf4\u200b\u662f\u200b\u4e8c\u7ef4\u200b\u6570\u636e\u200b\u4e00\u7ef4\u200b\u8f6c\u50a8\u200b\u7684\u200b\u8fc7\u7a0b\u200b\n/*\n    \u200b\u5982\u679c\u8bf4\u200b\u4ece\u200b\u5199\u5165\u200b\u5730\u65b9\u200b\u7684\u200b\u89d2\u5ea6\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u5237\u65b0\u200b\u8981\u200b\u5237\u65b0\u200b\u7684\u200b\u5730\u65b9\u200b\u5c31\u884c\u4e86\u200b\n    \u200b\u90a3\u4e48\u200b\u4f4d\u7f6e\u200b\u5c31\u662f\u200b\n    \u200b\u5047\u8bbe\u200b\u5c4f\u5e55\u200b: \u200b\u4e3a\u200bw:9 * h:5 \u200b\u6a2a\u5411\u200b\u4e3a\u200bx\u200b\u8f74\u200b\uff0c\u200b\u7eb5\u5411\u200b\u4e3a\u200by\u200b\u8f74\u200b\u4ece\u5de6\u5f80\u53f3\u200b\u4ece\u4e0a\u5230\u4e0b\u200b\n    *********\n    *********\n    *********\n    *********\n    *********\n    \u200b\u90a3\u4e48\u200b\u60f3\u5f80\u200b\u5c4f\u5e55\u200b\u5750\u6807\u200b [4,3]\u200b\u5f00\u59cb\u200b\u66f4\u65b0\u200b\u5bbd\u5ea6\u200b\u4e3a\u200bx+w,y+h\u200b\u4e2a\u91cf\u200b\n    \u200b\u5c31\u8981\u200b\u5411\u200bvag_begin(\u200b\u5c4f\u5e55\u200b\u7684\u200b\u5bbd\u5ea6\u200b)*3+4 \u200b\u8fd9\u6837\u200b\u5b9e\u9645\u4e0a\u200b\u5c31\u662f\u200b\u628a\u200b\u4e8c\u7ef4\u200b\u6570\u636e\u200b\u7528\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u65b9\u6cd5\u200b\u8fdb\u884c\u200b\u5199\u5165\u200b\n    \u200b\u90a3\u4e48\u200b\u8fd9\u65f6\u5019\u200b\u6211\u4eec\u200b\u53ea\u200b\u9700\u8981\u200b\u628a\u200b\u9700\u8981\u200b\u53d6\u51fa\u200b\u6765\u200b\u7684\u200b\u6570\u636e\u200b\u653e\u8fdb\u200b\u8981\u653e\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u5c31\u200b\u597d\u200b\u4e86\u200b\n  */\nuint32_t *pixels=ctl-&gt;pixels;\nfor(int y=ctl-&gt;y;y&lt;ctl-&gt;y+ctl-&gt;h;y++){\nfor(int x=ctl-&gt;x;x&lt;ctl-&gt;x+ctl-&gt;w;x++){\nfb[vag_begin*y+x]=pixels[(y-ctl-&gt;y)*ctl-&gt;w+(x-ctl-&gt;x)];\n}\n}\nif (ctl-&gt;sync) {\noutl(SYNC_ADDR, 1);\n}\n}\n</code></pre>"},{"location":"src/compile_commands.json%E6%9B%B4%E5%85%88%E8%BF%9B%E7%9A%84%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/","title":"compile_commands.json\u200b\u66f4\u200b\u5148\u8fdb\u200b\u7684\u200b\u8f85\u52a9\u5de5\u5177","text":"<p>\u200b\u6700\u8fd1\u200b\u4f7f\u7528\u200b\uff0cvscode\u200b\u914d\u7f6e\u200b\u9879\u76ee\u200b\u9047\u5230\u200b\u4e86\u200b\u4e00\u7cfb\u5217\u200b\u95ee\u9898\u200b</p> <p>\u200b\u5927\u578b\u200bc\u200b\u8bed\u8a00\u200b\u9879\u76ee\u200b\u603b\u4f1a\u200b\u51fa\u73b0\u200bvscode\u200b\u62bd\u98ce\u200b\u95ee\u9898\u200b\uff0c\u200b\u660e\u660e\u200b\u80fd\u200b\u8dd1\u200b\u7684\u200b\u4ee3\u7801\u200b\u5374\u200b\u603b\u662f\u200b\u51fa\u73b0\u200b\u7ea2\u8272\u200b\u6ce2\u6d6a\u200b\u66f2\u7ebf\u200b\uff0cincludepath\u200b\u4e0d\u662f\u200b\u90a3\u4e48\u200b\u7684\u200b\u53ef\u4fe1\u200b\uff0c\u200b\u5c31\u200b\u5982\u540c\u200bvscode\u200b\u641c\u7d22\u200b\u4f1a\u200b\u62bd\u98ce\u200b\u4e00\u6837\u200b\uff0cincludepath\u200b\u4e5f\u200b\u4f1a\u200b\u62bd\u98ce\u200b\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u66f4\u597d\u200b\u7684\u200b\u4e1c\u897f\u200b\u66ff\u4ee3\u200b\u5b83\u200b</p> <p>compile_commands.json</p> <p>\u200b\u5bf9\u4e8e\u200bcmake\u200b\u6784\u5efa\u200b\u7684\u200b\u9879\u76ee\u200b\uff0c\u200b\u6ca1\u6709\u200b\u4ec0\u4e48\u200b\u95ee\u9898\u200b</p> <p>\u200b\u5bf9\u4e8e\u200b\u7528\u200bmakefile\u200b\u6784\u5efa\u200b\u7684\u200b\u9879\u76ee\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5148\u200b\u8bd5\u7528\u200bbear -- make ** \u200b\u751f\u6210\u200bcompile_commands.json</p> <p>\u200b\u5728\u200b\u5230\u200bvscode\u200b\u91cc\u200b\u52a0\u5165\u200b\"compileCommands\"</p> <pre><code>{\n    \"configurations\": [\n        {\n            \"name\": \"Linux\",\n            \"includePath\": [\n                \"/home/wangxin/ysyx-workbench/**\",\n                \"/home/wangxin/ysyx-workbench/npc/build/obj_dirtop\",\n                \"${workspaceFolder}\",\n                \"/usr/local/share/verilator/include/**\",\n                \"/usr/local/share/verilator/include/vltstd/**\",\n                \"/usr/include/**\"\n            ],\n            \"cStandard\": \"c17\",\n            \"cppStandard\": \"gnu++17\",\n            \"intelliSenseMode\": \"linux-gcc-x64\",\n            \"compileCommands\": \"/home/wangxin/ysyx-workbench/compile_commands.json\",\n            \"browse\": {\n                \"path\": [\n                    \"${workspaceFolder}/\",\n                    \"/usr/local/share/verilator/include/\",\n                    \"/usr/include/\"\n                ]\n            }\n        }\n    ],\n    \"version\": 4\n}\n</code></pre> <p>\u200b\u6240\u6709\u200b\u56e0\u200bincludepath\u200b\u9020\u6210\u200b\u7684\u200b\u95ee\u9898\u200b\u90fd\u200b\u8fce\u5203\u800c\u89e3\u200b</p>"},{"location":"src/difftest%E7%B3%BB%E7%BB%9F%E8%B8%A9%E5%9D%91%E8%A7%A3%E8%AF%BB/","title":"difftest\u200b\u7cfb\u7edf\u200b\u8e29\u200b\u5751\u200b\u89e3\u8bfb","text":"<p>\u200b\u5728\u200bdifftest\u200b\u91cc\u200b\u8e29\u200b\u5751\u200b\u592a\u4e45\u200b\u592a\u4e45\u200b\uff0c\u200b\u4e5f\u200b\u5206\u6790\u200b\u4e86\u200b\u5f88\u200b\u957f\u65f6\u95f4\u200b\u3002</p> <p>\u200b\u505a\u200b\u4e00\u7bc7\u200b\u89e3\u8bfb\u200b\u52a0\u6df1\u200b\u4e00\u4e0b\u200b\u5370\u8c61\u200b</p> <p>\u200b\u5728\u200b\u9047\u5230\u200b\u4e00\u4e2a\u200b\u5916\u90e8\u200b\u8bbf\u95ee\u200b\u8bbe\u5907\u200b\u7684\u200b\u6307\u4ee4\u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u7528\u200bdifftest\u200b\u7684\u200bskip_ref\uff0c\u200b\u6765\u200b\u8fdb\u884c\u200b\u8df3\u8fc7\u200b\u8fd9\u6761\u200b\u6307\u4ee4\u200b</p> <pre><code>void difftest_skip_ref() {\nis_skip_ref = true;\nskip_dut_nr_inst = 0;\n}\n</code></pre> <pre><code>void difftest_step(vaddr_t pc, vaddr_t npc) {\nCPU_state ref_r;\nif (is_skip_ref) {\nis_skip_ref = false;\nreturn;\n}\nref_difftest_exec(1);\nref_difftest_regcpy(&amp;ref_r, DIFFTEST_TO_DUT,0);\ncheckregs(&amp;ref_r, pc, npc);\n}\n</code></pre> <p>\u200b\u6b64\u65f6\u200b\u673a\u5668\u200b\u6b63\u5728\u200b\u8fdb\u884c\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u548c\u200b\u5bf9\u6bd4\u200b\u72b6\u6001\u200b</p> <p>\u200b\u6211\u4eec\u200b\u5047\u8bbe\u200b\u8fd9\u65f6\u5019\u200b\u673a\u5668\u200b\u6ca1\u6709\u200b\u53d1\u751f\u200b\u8bbe\u5907\u200b\u8bbf\u5b58\u200b\uff1a</p> <pre><code>nemu                            npc\n0x800011d4 lui      diff    0x800011d4 lw\n0x800011d8 lw       diff    0x800011d8 lw\n0x800011e0 lw       diff    0x800011e0 auipc\n0x800011e4 auipc    diff    0x800011e4\n</code></pre> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8fd9\u6837\u200b\u5bf9\u6bd4\u200b\uff0c\u200b\u6211\u4eec\u200b\u77e5\u9053\u200bnpc\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u662f\u200b\u5728\u200b\u4e0b\u200b\u4e00\u6392\u200b\u5199\u5165\u200b\uff0c\u200b\u90a3\u200b\u6211\u4eec\u200bdiff\u200b\u7684\u200b\u65f6\u5019\u200b\u5e94\u8be5\u200b\u8ba9\u200bnpc\u200b\u6267\u884c\u200b\u7684\u200b\u6307\u4ee4\u200b\u6162\u4e00\u62cd\u200b</p> <p>\u200b\u7406\u89e3\u200b\u5b8c\u200bnpc\u200b\u548c\u200bnemu\u200b\u7684\u200bdiff\u200b\u673a\u5236\u200b\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6df1\u5165\u200b\u7406\u89e3\u200bskip_ref\u200b\u7684\u200b\u529f\u80fd\u200b\u4e86\u200b</p> <p>\u200b\u5f88\u200b\u663e\u7136\u200b\uff0c\u200b\u5728\u200b\u8bbf\u95ee\u200b\u5916\u8bbe\u200b\u7684\u200b\u65f6\u5019\u200b\uff0cnpc\u200b\u548c\u200bnemu\u200b\u4ece\u200b\u5185\u5b58\u200b\u91cc\u200b\u8bfb\u51fa\u6765\u200b\u7684\u200b\u4e1c\u897f\u200b\u662f\u200b\u6709\u200b\u5dee\u5f02\u200b\u7684\u200b\uff0c\u200b\u8fd9\u65f6\u5019\u200b\u6211\u4eec\u200b\u5c31\u8981\u200b\u7528\u200bskip_ref\u200b\u628a\u200bnpc\u200b\u7684\u200bpc\u200b\u548c\u200breg\u200b\u8986\u76d6\u200b\u7ed9\u200bnemu\uff0c\u200b\u4ece\u800c\u200b\u8ba9\u200b\u5bc4\u5b58\u5668\u200b\u83b7\u5f97\u200b\u5e94\u6709\u200b\u7684\u200b\u503c\u200b</p> <p>\u200b\u8fd9\u65f6\u5019\u200b\u7684\u200b\u8bbe\u60f3\u200b\u884c\u4e3a\u200b\u5e94\u8be5\u200b\u4e3a\u200b</p> <pre><code>nemu                            npc\n0x800011d8 lui      diff    0x800011d8 lw\n0x800011dc lw     &lt;--copy-- 0x800011dc lw\n0x800011e0 lw     &lt;--copy-- 0x800011e0 auipc\n0x800011e4 auipc    diff    0x800011e4\n</code></pre> <p>\u200b\u5b9e\u9645\u4e0a\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u884c\u4e3a\u200b\u5e94\u8be5\u200b\u4e3a\u200b</p> <pre><code>nemu                            npc\n0x800011d8 lui      diff    0x800011d8 lw\nskip:0x800011d8  &lt;--copy--  0x800011dc lw\nskip:0x800011dc  &lt;--copy--  0x800011e0 auipc\n0x800011e4 auipc    diff    0x800011e4\n</code></pre> <p>nemu pc\u200b\u7684\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u4e3a\u200b</p> <pre><code>cpu_exe(1)         skip          skip       cpu_exe(1)\n0x800011d8  -&gt;  0x800011dc -&gt; 0x800011e0 -&gt; 0x800011e4\n</code></pre> <p>nemu\u200b\u7684\u200breg\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u4e3a\u200b</p> <pre><code>cpu_exe(1)          skip         skip       cpu_exe(1)\nnemureg     -&gt;     npcreg  -&gt;  npcreg  -&gt;   nemureg   \n</code></pre> <p>\u200b\u5047\u8bbe\u200bnpc\u200b\u5728\u200b<code>0x800011d4 lw</code>\u200b\u53d1\u751f\u200b\u4e86\u200b\u8bbf\u5b58\u200b</p> <p>difftest_skip_ref()\u200b\u88ab\u200b\u8c03\u7528\u200b</p> <p>is_skip_ref = true;</p> <p>\u200b\u6b64\u65f6\u200bnemu\u200b\u4e3a\u4e86\u200bdiff\u200b\u4e5f\u200b\u5f00\u59cb\u200b\u8d70\u200b\u4e00\u6b65\u200b</p> <pre><code>void difftest_step(vaddr_t pc, vaddr_t npc) {\n  CPU_state ref_r;\n  if (is_skip_ref) { //\u200b\u6267\u884c\u200b\n    is_skip_ref = false;\n    ref_difftest_regcpy(&amp;cpu, DIFFTEST_TO_REF,npc);\n    return;\n  }\n  ref_difftest_exec(1);\n  ref_difftest_regcpy(&amp;ref_r, DIFFTEST_TO_DUT,0);\n  checkregs(&amp;ref_r, pc, npc);\n}\n</code></pre> <p>\u200b\u5728\u200bdifftest\u200b\u4fee\u6539\u200b\u4e4b\u524d\u200b\u72b6\u6001\u200b\u4e3a\u200b</p> <p>ref_difftest_regcpy(&amp;cpu, DIFFTEST_TO_REF);</p> <p>\u200b\u5c06\u200bref-&gt;pc  0x800011d4\u200b\u4fee\u6539\u200b\u4e3a\u200bpc:0x800011d4</p> <p>\u200b\u8fd9\u200b\u663e\u7136\u200b\u662f\u200b\u9519\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6b64\u65f6\u200b\u53d1\u751f\u200b\u4e86\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u8981\u200b\u8fdb\u884c\u200b\u8df3\u8fc7\u200b\uff1a</p> <p>\u200b\u5982\u679c\u200b\u6309\u7167\u200b\u8fd9\u6837\u200b\u4fee\u6539\u200b\uff0c\u200b\u90a3\u4e48\u200b\u53d1\u751f\u200b\u7684\u200b\u7ed3\u679c\u200b\u662f\u200b</p> <pre><code>nemu                            npc(nextpc)       pc \n0x800011d8 lui      diff     0x800011d8 lw      0x800011d4\n0x800011d8 lui &lt;--copy(pc)-- 0x800011dc lw      0x800011d8\n0x800011dc lw  &lt;--copy(pc)-- 0x800011e0 auipc   0x800011dc\n0x800011e0 lw       diff     0x800011e4         0x800011e0  \u3010\u200b\u62a5\u9519\u200b\u3011\n</code></pre> <p>\u200b\u6b63\u786e\u200b\u7684\u200b\u662f\u200b</p> <p>\u200b\u5c06\u200bref-&gt;pc  0x800011d4\u200b\u4fee\u6539\u200b\u4e3a\u200bpc:0x800011d8</p> <p>\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u8981\u200b\u4f20\u5165\u200b\u4e00\u4e2a\u200btarget\uff08nextpc\uff09\u200b\u6765\u200b\u8df3\u8f6c\u200b\u5230\u200b\u6b63\u786e\u200b\u4f4d\u7f6e\u200b</p> <p>\u200b\u5982\u679c\u200b\u53d1\u751f\u200b\u8df3\u8f6c\u200b\uff0c\u200b\u5c31\u200b\u8df3\u200b\u5230\u200btarget: ref_difftest_regcpy(&amp;cpu, DIFFTEST_TO_REF,npc); (npc\u200b\u6307\u200b\u7684\u200b\u662f\u200b**nextpc**)</p> <p>ref\u200b\u7684\u200b\u4ee3\u7801\u200b</p> <pre><code>__EXPORT void difftest_regcpy(void *dut, bool direction,vaddr_t skip_target) {\n  CPU_state* dut_t=dut; \n  if (direction == DIFFTEST_TO_REF) {\n    for(int i=0;i&lt;32;i++){\n      cpu.gpr[i]=dut_t-&gt;gpr[i];\n    }\n    if(skip_target==0) cpu.pc=dut_t-&gt;pc;\n    else cpu.pc=skip_target;\n  }else{\n    for(int i=0;i&lt;32;i++){\n      dut_t-&gt;gpr[i]=cpu.gpr[i];\n    }\n    dut_t-&gt;pc=cpu.pc;\n  }\n  // assert(0);\n}\n</code></pre> <p>\u200b\u867d\u7136\u200b\u8981\u200b\u4fee\u6539\u200b\u7684\u200b\u5730\u65b9\u200b\u5c31\u200b\u4e00\u70b9\u200b\uff0c\u200b\u4f46\u662f\u200b\u5f7b\u5e95\u200b\u641e\u61c2\u200b\u8fd9\u4e2a\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u82b1\u200b\u4e86\u200b\u5f88\u4e45\u5f88\u4e45\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5199\u200b\u4e00\u7bc7\u200b\u7b14\u8bb0\u200b\u5f3a\u5316\u200b\u81ea\u5df1\u200b\u7684\u200b\u7406\u89e3\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u4e0b\u6b21\u200b\u505a\u5230\u200b\u66f4\u597d\u200b</p>"},{"location":"src/git%E7%9A%84%E7%94%A8%E6%B3%95/","title":"GIT","text":""},{"location":"src/git%E7%9A%84%E7%94%A8%E6%B3%95/#10git","title":"1.0.git\u200b\u5b98\u7f51","text":"<p>GIT\u200b\u5e73\u53f0\u200b\uff1awww.github.com</p>"},{"location":"src/git%E7%9A%84%E7%94%A8%E6%B3%95/#11-git","title":"1.1. git\u200b\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u200b\u5de5\u4f5c\u200b\u533a\u200b\uff1a\u200b\u4ed3\u5e93\u200b\u7684\u200b\u76ee\u5f55\u200b\u3002\u200b\u5de5\u4f5c\u200b\u533a\u200b\u662f\u200b\u72ec\u7acb\u200b\u4e8e\u200b\u5404\u4e2a\u200b\u5206\u652f\u200b\u7684\u200b\u3002</li> <li>\u200b\u6682\u5b58\u533a\u200b\uff1a\u200b\u6570\u636e\u200b\u6682\u65f6\u200b\u5b58\u653e\u200b\u7684\u200b\u533a\u57df\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u5de5\u4f5c\u200b\u533a\u200b\u5199\u5165\u200b\u7248\u672c\u200b\u5e93\u524d\u200b\u7684\u200b\u7f13\u5b58\u200b\u533a\u200b\u3002\u200b\u6682\u5b58\u533a\u200b\u662f\u200b\u72ec\u7acb\u200b\u4e8e\u200b\u5404\u4e2a\u200b\u5206\u652f\u200b\u7684\u200b\u3002</li> <li>\u200b\u7248\u672c\u200b\u5e93\u200b\uff1a\u200b\u5b58\u653e\u200b\u6240\u6709\u200b\u5df2\u7ecf\u200b\u63d0\u4ea4\u200b\u5230\u200b\u672c\u5730\u200b\u4ed3\u5e93\u200b\u7684\u200b\u4ee3\u7801\u200b\u7248\u672c\u200b</li> <li>\u200b\u7248\u672c\u200b\u7ed3\u6784\u200b\uff1a\u200b\u6811\u7ed3\u6784\u200b\uff0c\u200b\u6811\u4e2d\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u4ee3\u8868\u200b\u4e00\u4e2a\u200b\u4ee3\u7801\u200b\u7248\u672c\u200b\u3002</li> </ul>"},{"location":"src/git%E7%9A%84%E7%94%A8%E6%B3%95/#12-git","title":"1.2 git\u200b\u5e38\u7528\u547d\u4ee4","text":"<pre><code>git config --global user.name xxx\uff1a\u200b\u8bbe\u7f6e\u200b\u5168\u5c40\u200b\u7528\u6237\u540d\u200b\uff0c\u200b\u4fe1\u606f\u200b\u8bb0\u5f55\u200b\u5728\u200b~/.gitconfig\u200b\u6587\u4ef6\u200b\u4e2d\u200b\ngit config --global user.email xxx@xxx.com\uff1a\u200b\u8bbe\u7f6e\u200b\u5168\u5c40\u200b\u90ae\u7bb1\u5730\u5740\u200b\uff0c\u200b\u4fe1\u606f\u200b\u8bb0\u5f55\u200b\u5728\u200b~/.gitconfig\u200b\u6587\u4ef6\u200b\u4e2d\u200b\ngit init\uff1a\u200b\u5c06\u200b\u5f53\u524d\u76ee\u5f55\u200b\u914d\u7f6e\u200b\u6210\u200bgit\u200b\u4ed3\u5e93\u200b\uff0c\u200b\u4fe1\u606f\u200b\u8bb0\u5f55\u200b\u5728\u200b\u9690\u85cf\u200b\u7684\u200b.git\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\ngit add XX\uff1a\u200b\u5c06\u200bXX\u200b\u6587\u4ef6\u200b\u6dfb\u52a0\u200b\u5230\u200b\u6682\u5b58\u533a\u200b\ngit add .\uff1a\u200b\u5c06\u200b\u6240\u6709\u200b\u5f85\u200b\u52a0\u5165\u200b\u6682\u5b58\u533a\u200b\u7684\u200b\u6587\u4ef6\u200b\u52a0\u5165\u200b\u6682\u5b58\u533a\u200b\ngit rm --cached XX\uff1a\u200b\u5c06\u200b\u6587\u4ef6\u200b\u4ece\u200b\u4ed3\u5e93\u200b\u7d22\u5f15\u200b\u76ee\u5f55\u200b\u4e2d\u200b\u5220\u6389\u200b\ngit commit -m \"\u200b\u7ed9\u200b\u81ea\u5df1\u200b\u770b\u200b\u7684\u200b\u5907\u6ce8\u200b\u4fe1\u606f\u200b\"\uff1a\u200b\u5c06\u200b\u6682\u5b58\u533a\u200b\u7684\u200b\u5185\u5bb9\u200b\u63d0\u4ea4\u200b\u5230\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\ngit status\uff1a\u200b\u67e5\u770b\u200b\u4ed3\u5e93\u200b\u72b6\u6001\u200b\ngit diff XX\uff1a\u200b\u67e5\u770b\u200bXX\u200b\u6587\u4ef6\u200b\u76f8\u5bf9\u200b\u4e8e\u200b\u6682\u5b58\u533a\u200b\u4fee\u6539\u200b\u4e86\u200b\u54ea\u4e9b\u200b\u5185\u5bb9\u200b\ngit log\uff1a\u200b\u67e5\u770b\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\u7684\u200b\u6240\u6709\u200b\u7248\u672c\u200b\ngit reflog\uff1a\u200b\u67e5\u770b\u200bHEAD\u200b\u6307\u9488\u200b\u7684\u200b\u79fb\u52a8\u200b\u5386\u53f2\u200b\uff08\u200b\u5305\u62ec\u200b\u88ab\u200b\u56de\u6eda\u200b\u7684\u200b\u7248\u672c\u200b\uff09\ngit reset --hard HEAD^ \u200b\u6216\u200b git reset --hard HEAD~\uff1a\u200b\u5c06\u200b\u4ee3\u7801\u200b\u5e93\u56de\u200b\u6eda\u200b\u5230\u200b\u4e0a\u200b\u4e00\u4e2a\u200b\u7248\u672c\u200b\ngit reset --hard HEAD^^\uff1a\u200b\u5f80\u4e0a\u200b\u56de\u6eda\u200b\u4e24\u6b21\u200b\uff0c\u200b\u4ee5\u6b64\u7c7b\u63a8\u200b\ngit reset --hard HEAD~100\uff1a\u200b\u5f80\u4e0a\u200b\u56de\u6eda\u200b100\u200b\u4e2a\u200b\u7248\u672c\u200b\ngit reset --hard \u200b\u7248\u672c\u53f7\u200b\uff1a\u200b\u56de\u6eda\u200b\u5230\u200b\u67d0\u200b\u4e00\u200b\u7279\u5b9a\u200b\u7248\u672c\u200b\ngit checkout \u2014 XX\u200b\u6216\u200bgit restore XX\uff1a\u200b\u5c06\u200bXX\u200b\u6587\u4ef6\u200b\u5c1a\u672a\u200b\u52a0\u5165\u200b\u6682\u5b58\u533a\u200b\u7684\u200b\u4fee\u6539\u200b\u5168\u90e8\u200b\u64a4\u9500\u200b\ngit remote add origin git@git.acwing.com:xxx/XXX.git\uff1a\u200b\u5c06\u200b\u672c\u5730\u200b\u4ed3\u5e93\u200b\u5173\u8054\u200b\u5230\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\ngit push -u (\u200b\u7b2c\u4e00\u6b21\u200b\u9700\u8981\u200b-u\u200b\u4ee5\u540e\u200b\u4e0d\u200b\u9700\u8981\u200b)\uff1a\u200b\u5c06\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\u63a8\u9001\u200b\u5230\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\ngit push origin branch_name\uff1a\u200b\u5c06\u200b\u672c\u5730\u200b\u7684\u200b\u67d0\u4e2a\u200b\u5206\u652f\u200b\u63a8\u9001\u200b\u5230\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\ngit clone git@git.acwing.com:xxx/XXX.git\uff1a\u200b\u5c06\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200bXXX\u200b\u4e0b\u8f7d\u200b\u5230\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e0b\u200b\ngit checkout -b branch_name\uff1a\u200b\u521b\u5efa\u200b\u5e76\u200b\u5207\u6362\u200b\u5230\u200bbranch_name\u200b\u8fd9\u4e2a\u200b\u5206\u652f\u200b\ngit branch\uff1a\u200b\u67e5\u770b\u200b\u6240\u6709\u200b\u5206\u652f\u200b\u548c\u200b\u5f53\u524d\u200b\u6240\u200b\u5904\u200b\u5206\u652f\u200b\ngit checkout branch_name\uff1a\u200b\u5207\u6362\u200b\u5230\u200bbranch_name\u200b\u8fd9\u4e2a\u200b\u5206\u652f\u200b\ngit merge branch_name\uff1a\u200b\u5c06\u200b\u5206\u652f\u200bbranch_name\u200b\u5408\u5e76\u200b\u5230\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\u4e0a\u200b\ngit branch -d branch_name\uff1a\u200b\u5220\u9664\u200b\u672c\u5730\u200b\u4ed3\u5e93\u200b\u7684\u200bbranch_name\u200b\u5206\u652f\u200b\ngit branch branch_name\uff1a\u200b\u521b\u5efa\u200b\u65b0\u200b\u5206\u652f\u200b\ngit push --set-upstream origin branch_name\uff1a\u200b\u8bbe\u7f6e\u200b\u672c\u5730\u200b\u7684\u200bbranch_name\u200b\u5206\u652f\u200b\u5bf9\u5e94\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\u7684\u200bbranch_name\u200b\u5206\u652f\u200b\ngit push -d origin branch_name\uff1a\u200b\u5220\u9664\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\u7684\u200bbranch_name\u200b\u5206\u652f\u200b\ngit pull\uff1a\u200b\u5c06\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\u7684\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\u4e0e\u200b\u672c\u5730\u200b\u4ed3\u5e93\u200b\u7684\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\u5408\u5e76\u200b\ngit pull origin branch_name\uff1a\u200b\u5c06\u200b\u8fdc\u7a0b\u200b\u4ed3\u5e93\u200b\u7684\u200bbranch_name\u200b\u5206\u652f\u200b\u4e0e\u200b\u672c\u5730\u200b\u4ed3\u5e93\u200b\u7684\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\u5408\u5e76\u200b\ngit branch --set-upstream-to=origin/branch_name1 branch_name2\uff1a\u200b\u5c06\u200b\u8fdc\u7a0b\u200b\u7684\u200bbranch_name1\u200b\u5206\u652f\u200b\u4e0e\u200b\u672c\u5730\u200b\u7684\u200bbranch_name2\u200b\u5206\u652f\u200b\u5bf9\u5e94\u200b\ngit checkout -t origin/branch_name \u200b\u5c06\u200b\u8fdc\u7a0b\u200b\u7684\u200bbranch_name\u200b\u5206\u652f\u200b\u62c9\u53d6\u200b\u5230\u200b\u672c\u5730\u200b\ngit stash\uff1a\u200b\u5c06\u200b\u5de5\u4f5c\u200b\u533a\u200b\u548c\u200b\u6682\u5b58\u533a\u200b\u4e2d\u200b\u5c1a\u672a\u200b\u63d0\u4ea4\u200b\u7684\u200b\u4fee\u6539\u200b\u5b58\u5165\u200b\u6808\u4e2d\u200b\ngit stash apply\uff1a\u200b\u5c06\u200b\u6808\u9876\u200b\u5b58\u50a8\u200b\u7684\u200b\u4fee\u6539\u200b\u6062\u590d\u200b\u5230\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5220\u9664\u200b\u6808\u9876\u200b\u5143\u7d20\u200b\ngit stash drop\uff1a\u200b\u5220\u9664\u200b\u6808\u9876\u200b\u5b58\u50a8\u200b\u7684\u200b\u4fee\u6539\u200b\ngit stash pop\uff1a\u200b\u5c06\u200b\u6808\u9876\u200b\u5b58\u50a8\u200b\u7684\u200b\u4fee\u6539\u200b\u6062\u590d\u200b\u5230\u200b\u5f53\u524d\u200b\u5206\u652f\u200b\uff0c\u200b\u540c\u65f6\u200b\u5220\u9664\u200b\u6808\u9876\u200b\u5143\u7d20\u200b\ngit stash list\uff1a\u200b\u67e5\u770b\u200b\u6808\u4e2d\u200b\u6240\u6709\u200b\u5143\u7d20\u200b\n</code></pre>"},{"location":"src/gtkwave%E9%85%8D%E7%BD%AE%E5%BF%83%E5%BE%97/","title":"gtkwave\u200b\u914d\u7f6e","text":"<p>\u200b\u81ea\u5df1\u200b\u6284\u200b\u4e86\u200b\u522b\u4eba\u200b\u7684\u200b\u914d\u7f6e\u200b+\u200b\u53c8\u200b\u6298\u817e\u200b\u4e00\u904d\u200b</p> <p>\u200b\u628a\u200b\u914d\u7f6e\u200b\u5199\u5165\u200b <code>~/.gtkwaverc</code>\uff1a</p> <pre><code># \u200b\u9009\u62e9\u200b\u5b57\u4f53\u200b\n#fontname_signals Lato 16\n#fontname_logfile Lato 16\n#fontname_waves JetBrains Mono Medium 14\n\n# \u200b\u5feb\u6377\u952e\u200b\n# \u201cx\u201d \u200b\u65b0\u5efa\u200b\u4e00\u4e2a\u200b marker\uff0c\u201cz\u201d \u200b\u5220\u9664\u200b\u4e00\u4e2a\u200b marker\uff0c\u201cc\u201d \u200b\u5220\u9664\u200b\u6240\u6709\u200b marker,\u201cv\u201d\u200b\u6253\u5f00\u200bsst,\"backspace\" \u200b\u9000\u683c\u200b\u5220\u9664\u200b,\u200b\u6253\u5f00\u200bsst\u200b\u540e\u200bEsc\u200b\u9000\u51fa\u200b\naccel \"/Markers/Drop Named Marker\" x\naccel \"/Markers/Collect Named Marker\" z\naccel \"/Markers/Collect All Named Markers\" c\naccel \"/Search/Signal Search Tree\" v\naccel \"/Edit/Delete\" BackSpace\n\n\nfill_waveform 1\n#hide_sst 1\nhier_grouping 1\nhier_max_level 2\nleft_justify_sigs 1\nuse_fat_lines 1\nuse_roundcaps 1\nwave_scrolling 1\ndisable_mouseover 0\nhighlight_wavewindow 1\nsplash_disable 1\ncolor_back 041933\ncolor_0 54c231\ncolor_1 54c231\ncolor_vbox 54c231\ncolor_grid 666666\ncolor_trans cc0000\ncolor_vtrans cc0000\ncolor_value eeeeee\ncolor_umark f9fd01\nenable_horiz_grid 0\npage_divisor 4\n</code></pre> <p>\u200b\u5feb\u901f\u200b\u4fdd\u5b58\u200b\u4fe1\u53f7\u200b</p> <pre><code>gtk:\n    gtkwave dump.vcd allview.gtkw\n</code></pre>"},{"location":"src/pa3%E5%81%9A%E5%AE%8C%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/","title":"pa3\u200b\u505a\u200b\u5b8c\u200b\u7684\u200b\u788e\u200b\u788e\u5ff5","text":"<p>pa3\u200b\u505a\u200b\u5b8c\u200b\u4e86\u200b\uff0c\u200b\u4f46\u662f\u200b\u611f\u89c9\u200b\u4e00\u4e9b\u200b\u5370\u8c61\u200b\u8fd8\u662f\u200b\u6ca1\u6709\u200b\u68b3\u200b\u4e00\u904d\u200b\uff0c\u200b\u5c31\u200b\u505a\u200b\u4e00\u7bc7\u200b\u7b14\u8bb0\u200b\u68b3\u7406\u200b\u4e00\u4e0b\u200b\u8f9b\u9178\u200b\u8def\u7a0b\u200b\u5427\u200b</p> <p>pa3\u200b\u4e3b\u8981\u200b\u662f\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u548c\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\uff0c\u200b\u5148\u200b\u4ece\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u5f00\u59cb\u200b\u56de\u5fc6\u200b\u4e00\u4e0b\u200b</p> <p>\u200b\u5f53\u200b\u6211\u4eec\u200b\u8fd0\u884c\u200b\u4e0b\u9762\u200b\u8fd9\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u65f6\u200b\uff0c\u200b\u7cfb\u7edf\u200b\u53d1\u751f\u200b\u4e86\u200b\u4ec0\u4e48\u200b</p> <pre><code>make ARCH=riscv32-nemu run mainargs=\n  ['i'] = \"interrupt/yield test\",\n</code></pre> <p>\u200b\u521d\u59cb\u5316\u200b\u4e86\u200b\u4e32\u53e3\u200b\uff08\u200b\u7565\u200b\uff09</p> <p>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4ee5\u200byield test\u200b\u4e3e\u4f8b\u200b\uff0c\u200b\u6211\u4eec\u200b\u4f20\u5165\u200b\u4e86\u200b<code>cte_init(simple_trap)</code></p> <pre><code>Context *simple_trap(Event ev, Context *ctx) {\n  switch(ev.event) {\n    case EVENT_IRQ_TIMER:\n      putch('t'); break;\n    case EVENT_IRQ_IODEV:\n      putch('d'); break;\n    case EVENT_YIELD:\n      putch('y'); break;\n    default:\n      panic(\"Unhandled event\"); break;\n  }\n  return ctx;\n}\n</code></pre> <p><code>bool cte_init(Context* (*handler)(Event ev, Context *ctx))</code>\u200b\u7528\u4e8e\u200b\u8fdb\u884c\u200bCTE\u200b\u76f8\u5173\u200b\u7684\u200b\u521d\u59cb\u5316\u200b\u64cd\u4f5c\u200b. \u200b\u5176\u4e2d\u200b\u5b83\u200b\u8fd8\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u6765\u81ea\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u7684\u200b\u4e8b\u4ef6\u5904\u7406\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b\u7684\u200b\u6307\u9488\u200b, \u200b\u5f53\u200b\u53d1\u751f\u200b\u4e8b\u4ef6\u200b\u65f6\u200b, CTE\u200b\u5c06\u4f1a\u200b\u628a\u200b\u4e8b\u4ef6\u200b\u548c\u200b\u76f8\u5173\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b, \u200b\u6765\u200b\u8c03\u7528\u200b\u8fd9\u4e2a\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b, \u200b\u4ea4\u7531\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u8fdb\u884c\u200b\u540e\u7eed\u200b\u5904\u7406\u200b</p> <p>cte_init\uff1a</p> <pre><code>bool cte_init(Context*(*handler)(Event, Context*)) {\n// initialize exception entry\nasm volatile(\"csrw mtvec, %0\" : : \"r\"(__am_asm_trap));\n//\u200b\u5c06\u200b\u5f02\u5e38\u200b\u5165\u53e3\u200b\u5730\u5740\u200b\u8bbe\u7f6e\u200b\u5230\u200bmtvec\u200b\u5bc4\u5b58\u5668\u200b\n// register event handler\nuser_handler = handler;\n\nreturn true;\n}\n</code></pre> <p>cte_init\u200b\u5b9e\u9645\u4e0a\u200b\u505a\u200b\u7684\u200b\u64cd\u4f5c\u200b\u9996\u5148\u200b\u628a\u200b__am_asm_trap\u200b\u4f5c\u4e3a\u200b\u5730\u5740\u200b\u5199\u5165\u200b\u5230\u200bmtvec\u200b\u5bc4\u5b58\u5668\u200b\u91cc\u200b\uff0c\u200b\u5728\u200b\u628a\u200b\u63a5\u53d7\u200b\u7684\u200b\u56de\u8c03\u200b\u51fd\u6570\u6307\u9488\u200b\u4f5c\u4e3a\u200buser_handler\u200b\u51fd\u6570\u6307\u9488\u200b</p> <p>__am_asm_trap\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e3b\u8981\u200b\u662f\u200b\u4e09\u70b9\u200b\uff1a</p> <ol> <li>\u200b\u4fdd\u5b58\u200b\u5f53\u524d\u200breg\u200b\u5bc4\u5b58\u5668\u200b\u548c\u200bcsr\u200b\u5bc4\u5b58\u5668\u200b\uff08mcause,mstatus,mepc\uff09\u200b\u7684\u200b\u503c\u200b\u5230\u200b\u5206\u914d\u200b\u7684\u200b\u6808\u200b\u5e27\u200b\u4e0a\u200b</li> <li>\u200b\u8df3\u8f6c\u200b\u5230\u200b__am_irq_handle</li> <li>\u200b\u628a\u200b\u5185\u5b58\u200b\u7684\u200b\u503c\u200b\u52a0\u8f7d\u200b\u5230\u200b\u76f8\u5e94\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u4e0a\u200b</li> </ol> <p>__am_irq_handle\u200b\u662f\u200b\u4ec0\u4e48\u200b\uff1f</p> <p><code>__am_irq_handle()</code>\u200b\u7684\u200b\u4ee3\u7801\u200b\u4f1a\u200b\u628a\u200b\u6267\u884c\u200b\u6d41\u200b\u5207\u6362\u200b\u7684\u200b\u539f\u56e0\u200b\u6253\u5305\u200b\u6210\u200b\u4e8b\u4ef6\u200b, \u200b\u7136\u540e\u200b\u8c03\u7528\u200b\u5728\u200b<code>cte_init()</code>\u200b\u4e2d\u200b\u6ce8\u518c\u200b\u7684\u200b\u4e8b\u4ef6\u5904\u7406\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b, \u200b\u5c06\u200b\u4e8b\u4ef6\u200b\u4ea4\u7ed9\u200b<code>yield test</code>\u200b\u6765\u200b\u5904\u7406\u200b. \u200b\u5728\u200b<code>yield test</code>\u200b\u4e2d\u200b, \u200b\u8fd9\u200b\u4e00\u56de\u200b\u8c03\u200b\u51fd\u6570\u200b\u662f\u200b<code>am-kernels/tests/am-tests/src/tests/intr.c</code>\u200b\u4e2d\u200b\u7684\u200b<code>simple_trap()</code>\u200b\u51fd\u6570\u200b.</p> <p>\u200b\u8bb2\u4e49\u200b\u7684\u8bdd\u200b\u4e5f\u8bb8\u200b\u5f88\u8499\u200b\uff0cRTFSC</p> <pre><code>Context* __am_irq_handle(Context *c) {\n  if (user_handler) {\n    Event ev = {0};\n    switch (c-&gt;mcause) {\n      case 0xb: //11 Environment call from M-mode\n        if(c-&gt;GPR1==-1){\n          ev.event=EVENT_YIELD;\n          c-&gt;mepc+=4; //\u200b\u505a\u200bpa3.2\u200b\u7684\u200b\u65f6\u5019\u200b\u53d1\u73b0\u200b\u8fd9\u91cc\u200b\u6ca1\u6709\u200b\u5904\u7406\u200b\uff0c\uff0c\uff0c\u200b\u96be\u200b\u7ef7\u200b\n        }else if(c-&gt;GPR1&gt;=0&amp;&amp;c-&gt;GPR1&lt;=19){\n          ev.event=EVENT_SYSCALL;\n          c-&gt;mepc+=4;\n        }else{\n          printf(\"abstract-machine/am/src/riscv/nemu/cte.c\u200b\u4f20\u5165\u200b\u4e86\u200b\u672a\u77e5\u200b\u7684\u200btype\");\n        }\n        break;\n      default: ev.event = EVENT_ERROR; break;\n    }\n    c = user_handler(ev, c);\n    assert(c != NULL);\n  }\n</code></pre> <p>__am_irq_handle\u200b\u9996\u5148\u200b\u5224\u65ad\u200b\u4e86\u200b\u673a\u5668\u200b\u6240\u5728\u200b\u7684\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u8fd9\u91cc\u200bnemu\u200b\u4e00\u76f4\u200b\u5904\u4e8e\u200bM-mode</p> <p>\u200b\u7136\u540e\u200b\u901a\u8fc7\u200b\u5224\u65ad\u200bc-&gt;GPR1\u200b\u7684\u200b\u503c\u6765\u200b\u5224\u65ad\u200b\u5f53\u524d\u200b\u89e6\u53d1\u200b\u4e86\u200b\u662f\u200b\u4e48\u200b\u81ea\u9677\u200b\u4e8b\u4ef6\u200b</p> <p>\u200b\u7136\u540e\u200b\u8c03\u7528\u200buser_handler-&gt;handler-&gt;simple_trap</p> <p>\u200b\u6700\u540e\u200b\u5728\u200b<code>simple_trap()</code>\u200b\u51fd\u6570\u200b\u4f1a\u200b\u6839\u636e\u200b\u4e8b\u4ef6\u200b\u7c7b\u578b\u200b\u518d\u6b21\u200b\u8fdb\u884c\u200b\u5206\u53d1\u200b</p> <p>\u200b\u6240\u4ee5\u200b\u4e00\u4e2a\u200b\u7a0b\u5e8f\u200b\u600e\u4e48\u200b\u8d70\u5230\u200b\u8fd9\u200b\u4e00\u6b65\u200b\u5462\u200b\uff0c\u200b\u6216\u8005\u200b\u662f\u200byield-test\u200b\u662f\u200b\u600e\u4e48\u200b\u8f93\u51fa\u200by\u200b\u7684\u200b</p> <p>\u200b\u9996\u5148\u200b\uff1a</p> <p>cte_init\u200b\u628a\u200b\u524d\u9762\u200b\u8981\u200b\u8df3\u8f6c\u200b\u5904\u7406\u200b\u7684\u200b\u5730\u65b9\u200b\u51c6\u5907\u200b\u597d\u200b\uff0c\u200b\u5f02\u5e38\u200b\u5165\u53e3\u200b\u5730\u5740\u200b\u8bbe\u7f6e\u200b\u597d\u200b</p> <pre><code>void yield() {\n#ifdef __riscv_e\n  asm volatile(\"li a5, -1; ecall\");\n#else\n  asm volatile(\"li a7, -1; ecall\");\n  //\u200b\u5c06\u200b -1 load\u200b\u5230\u200b\u5bc4\u5b58\u5668\u200b a7 \u200b\u4e2d\u200b\uff0c\u200b\u7136\u540e\u200b\u89e6\u53d1\u200b\u4e00\u4e2a\u200b\u5f02\u5e38\u200b\u8c03\u7528\u200b\u3002\n#endif\n}\n</code></pre> <p>yield -&gt;(a7\u200b\u5c31\u200b\u76f8\u5f53\u4e8e\u200b\u524d\u9762\u200b\u7684\u200bGPR1 a7=-1 )-&gt;ecall</p> <p>nemu\u200b\u9047\u5230\u200becall\uff0c\u200b\u8bd1\u7801\u200b\u5e76\u200b\u6267\u884c\u200b</p> <p>ecall\u200b\u4e3b\u8981\u200b\u505a\u200b\u4e86\u200b\u8fd9\u4ef6\u200b\u4e8b\u200b</p> <pre><code>\u200b\u5c06\u200b\u5f53\u524d\u200bPC\u200b\u503c\u200b\u4fdd\u5b58\u200b\u5230\u200bmepc\u200b\u5bc4\u5b58\u5668\u200b\n\u200b\u5728\u200bmcause\u200b\u5bc4\u5b58\u5668\u200b\u4e2d\u200b\u8bbe\u7f6e\u200b\u5f02\u5e38\u200b\u53f7\u200b\n\u200b\u4ece\u200bmtvec\u200b\u5bc4\u5b58\u5668\u200b\u4e2d\u200b\u53d6\u51fa\u200b\u5f02\u5e38\u200b\u5165\u53e3\u200b\u5730\u5740\u200b\n\u200b\u8df3\u8f6c\u200b\u5230\u200b\u5f02\u5e38\u200b\u5165\u53e3\u200b\u5730\u5740\u200b\n</code></pre> <p>ecall-&gt;__am_asm_trap</p> <p>__am_asm_trap\u200b\u505a\u200b\u7684\u200b\u4e8b\u524d\u200b\u6587\u6709\u200b\u63d0\u5230\u200b</p> <p><code>__am_asm_trap-&gt;__am_irq_handle</code>\u200b\u4f20\u5165\u200b\u4e86\u200bc-&gt;GPR1=-1\uff0c\u200b\u89e6\u53d1\u200b</p> <pre><code>  ev.event=EVENT_YIELD;\n  c-&gt;mepc+=4; //\u200b\u505a\u200bpa3.2\u200b\u7684\u200b\u65f6\u5019\u200b\u53d1\u73b0\u200b\u8fd9\u91cc\u200b\u6ca1\u6709\u200b\u5904\u7406\u200b\uff0c\uff0c\uff0c\u200b\u96be\u200b\u7ef7\u200b\n</code></pre> <p>\u200b\u8fdb\u5165\u200bsimple_trap\uff0c\u200b\u6839\u636e\u200b\u4e8b\u4ef6\u200b\u505a\u51fa\u200b\u76f8\u5e94\u200b\u54cd\u5e94\u200b\uff0c\u200b\u7136\u540e\u200b\uff1a\uff01\uff01\uff01</p> <p>\u200b\u4ee3\u7801\u200b\u5c06\u4f1a\u200b\u4e00\u8def\u200b\u8fd4\u56de\u200b\u5230\u200b<code>trap.S</code>\u200b\u7684\u200b<code>__am_asm_trap()</code>\u200b\u4e2d\u200b, \u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5c31\u662f\u200b\u6062\u590d\u7a0b\u5e8f\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b. <code>__am_asm_trap()</code>\u200b\u5c06\u200b\u6839\u636e\u200b\u4e4b\u524d\u200b\u4fdd\u5b58\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u5185\u5bb9\u200b, \u200b\u6062\u590d\u7a0b\u5e8f\u200b\u7684\u200b\u72b6\u6001\u200b, \u200b\u6700\u540e\u200b\u6267\u884c\u200b\"\u200b\u5f02\u5e38\u200b\u8fd4\u56de\u200b\u6307\u4ee4\u200b\"\u200b\u8fd4\u56de\u200b\u5230\u200b\u7a0b\u5e8f\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u4e4b\u524d\u200b\u7684\u200b\u72b6\u6001\u200b.</p> <p>\u200b\u4e0d\u8fc7\u200b\u8fd9\u91cc\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u4e4b\u524d\u200b\u81ea\u9677\u200b\u6307\u4ee4\u200b\u4fdd\u5b58\u200b\u7684\u200bPC, \u200b\u5bf9\u4e8e\u200bx86\u200b\u7684\u200b<code>int</code>\u200b\u6307\u4ee4\u200b, \u200b\u4fdd\u5b58\u200b\u7684\u200b\u662f\u200b\u6307\u5411\u200b\u5176\u4e0b\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u7684\u200bPC, \u200b\u8fd9\u200b\u6709\u70b9\u50cf\u200b\u51fd\u6570\u8c03\u7528\u200b; \u200b\u800c\u200b\u5bf9\u4e8e\u200bmips32\u200b\u7684\u200b<code>syscall</code>\u200b\u548c\u200briscv32\u200b\u7684\u200b<code>ecall</code>, \u200b\u4fdd\u5b58\u200b\u7684\u200b\u662f\u200b\u81ea\u9677\u200b\u6307\u4ee4\u200b\u7684\u200bPC, \u200b\u56e0\u6b64\u200b\u8f6f\u4ef6\u200b\u9700\u8981\u200b\u5728\u200b\u9002\u5f53\u200b\u7684\u200b\u5730\u65b9\u200b\u5bf9\u200b\u4fdd\u5b58\u200b\u7684\u200bPC\u200b\u52a0\u4e0a\u200b4, \u200b\u4f7f\u5f97\u200b\u5c06\u6765\u200b\u8fd4\u56de\u200b\u5230\u200b\u81ea\u9677\u200b\u6307\u4ee4\u200b\u7684\u200b\u4e0b\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b.</p> <p>\u200b\u8fd9\u91cc\u200b\u7684\u200bmepc+=4\u200b\u5c31\u662f\u200b\u5728\u200b\u8fd9\u91cc\u200b\u52a0\u200b4\uff0c__am_asm_trap\u200b\u505a\u200b\u5b8c\u200b\u76f8\u5e94\u200b\u7684\u200b\u64cd\u4f5c\u200b\u4e4b\u540e\u200b\u8fdb\u5165\u200becall\u200b\u7684\u200b\u540e\u9762\u200b\u7684\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u7ee7\u7eed\u6267\u884c\u200b\u4e0b\u9762\u200b\u7684\u200b\u6307\u4ee4\u200b\u3002</p> <p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u52a0\u200b4\u200b\u4f1a\u200b\u600e\u4e48\u6837\u200b\uff1f \u200b\u4f1a\u200b\u6267\u884c\u200becall\u200b\u540e\u200b\u53c8\u200b\u8fd4\u56de\u200becall,\u200b\u53cd\u590d\u200b\u6267\u884c\u200becall\u200b\u76f4\u5230\u200b\u5b87\u5b99\u200b\u7ec8\u70b9\u200b\uff08\u200b\u88ab\u200bmepc+=4\u200b\u8fd9\u4e2a\u200b\u5751\u8fc7\u200b\uff09</p> <p>\u200b\u4e0b\u9762\u200b\uff0c\u200b\u542f\u52a8\u200bnanos-lite\uff0c\u200b\u6765\u8bb2\u200b\u4e00\u4e0b\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5f02\u5e38\u200b\u8c03\u7528\u200b\u662f\u200b\u600e\u4e48\u200b\u6765\u200b\u7684\u200b</p> <p>\u200b\u6211\u4eec\u200b\u62ff\u200b\u4e00\u4e2a\u200b\u5e38\u89c1\u200b\u7684\u200b\u547d\u4ee4\u200b\u6765\u200b\u4e3e\u4f8b\u200b\uff0copen(...);</p> <p>\uff08\u200b\u524d\u6392\u200b\u63d0\u793a\u200b\u4e00\u4e2a\u200b\u5c0f\u5751\u200b\u70b9\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u4e00\u4e2a\u200b\u6709\u200blseek\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5728\u200b\u6253\u5f00\u200b\u524d\u5148\u200b\u628a\u200bopen_offset\u200b\u8bbe\u7f6e\u200b\u6210\u200b0\u200b\u6216\u8005\u200bclose\u200b\u7684\u200b\u65f6\u5019\u200b\u628a\u200bopen_offset\u200b\u8bbe\u7f6e\u200b\u6210\u200b0\uff0c\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u6211\u200b\u5230\u200b\u6700\u540e\u200b\u52a0\u8f7d\u200b\u4e0d\u200b\u51fa\u6765\u200b\u4e1c\u897f\u200b\u624d\u200b\u53d1\u73b0\u200b\uff0c\u200b\u54ed\u200b\u6b7b\u200b\uff09</p> <p>open\u200b\u5728\u200bnavy\u200b\u4e2d\u200b\u7f16\u8bd1\u200b\uff0copen-&gt;syscall(SYS_open,(intptr_t)path,flags,mode);</p> <pre><code>intptr_t _syscall_(intptr_t type, intptr_t a0, intptr_t a1, intptr_t a2) {\nregister intptr_t _gpr1 asm (GPR1) = type;\nregister intptr_t _gpr2 asm (GPR2) = a0;\nregister intptr_t _gpr3 asm (GPR3) = a1;\nregister intptr_t _gpr4 asm (GPR4) = a2;\nregister intptr_t ret asm (GPRx);\nasm volatile (SYSCALL : \"=r\" (ret) : \"r\"(_gpr1), \"r\"(_gpr2), \"r\"(_gpr3), \"r\"(_gpr4));\nreturn ret;\n}\n</code></pre> <p>syscall\u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u628a\u200btype,a0,a1,a2\u200b\u5b58\u200b\u5230\u200bgpr1,2,3,4\u200b\u5bc4\u5b58\u5668\u200b\u91cc\u200b\uff0c\u200b\u628a\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u5bc4\u5b58\u5668\u200b\u8bbe\u200b\u6210\u200bgprx\uff0c\u200b\u7136\u540e\u200b\u8c03\u7528\u200becall</p> <p>ecall-&gt;_am_asm_trap\u200b\u505a\u200b\u7684\u200b\u4e8b\u524d\u200b\u6587\u6709\u200b\u63d0\u5230\u200b</p> <p>__am_asm_trap-&gt;__am_irq_handle\u200b\u4f20\u5165\u200b\u4e86\u200b(GPR1=type)</p> <p>am_irq_handle-&gt;\u200b\u89e6\u53d1\u200b</p> <pre><code>ev.event=EVENT_SYSCALL;\nc-&gt;mepc+=4;\n</code></pre> <p>\u200b\u8fdb\u5165\u200bstatic Context* do_event(Event e, Context* c)</p> <pre><code>static Context* do_event(Event e, Context* c) {\nswitch (e.event) {\ncase EVENT_YIELD: break;\ncase EVENT_SYSCALL:\ndo_syscall(c); break;\ndefault: panic(\"Unhandled event ID = %d\", e.event);\n}\nreturn c;\n}\n</code></pre> <p>do_event-&gt;do_syscall\u00a9\u200b\u6839\u636e\u200b\u5bc4\u5b58\u5668\u200b\u8c03\u7528\u200b\u7cfb\u7edf\u200b\u54cd\u5e94\u200b\u7684\u200b\u51fd\u6570\u200b\u505a\u51fa\u200b\u76f8\u5e94\u200b\u7684\u200b\u64cd\u4f5c\u200b...</p> <pre><code>void do_syscall(Context *c) {\nuintptr_t a[4];\na[0] = c-&gt;GPR1;\na[1] = c-&gt;GPR2;\na[2] = c-&gt;GPR3;\na[3] = c-&gt;GPR4;\na[4] = c-&gt;GPRx;\nswitch (a[0]) {\ncase SYS_open:\nstrace_log(a[0],-1,a[1],a[2],a[3]);\nc-&gt;GPRx=fs_open((char *)a[1],a[2],a[3]);\nfile_names[c-&gt;GPRx]=(char *)a[1];\nbreak;\ndefault: panic(\"Unhandled syscall ID = %d\", a[0]);\n}\n}\n</code></pre> <p>\u200b\u505a\u200b\u5b8c\u200bpa3\u200b\u6700\u5927\u200b\u7684\u200b\u611f\u53d7\u200b\u5c31\u662f\u200b\u4f60\u200b\u8ba9\u200b\u6211\u200b\u590d\u8ff0\u200b\u8fd9\u200b\u4e00\u904d\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u611f\u89c9\u200b\u597d\u4e71\u200b\uff0c\u200b\u8fd8\u8981\u200b\u518d\u8fb9\u200b\u770b\u200b\u4ee3\u7801\u200b\u8fb9\u200b\u590d\u8ff0\u200b\uff0c\u200b\u7d22\u6027\u200b\u5c31\u200b\u5199\u4e2a\u200b\u7b14\u8bb0\u200b\u8bb0\u5f55\u4e0b\u6765\u200b</p> <p>\u200b\u5176\u5b9e\u200b\u4e00\u4e2a\u200bprintf\u200b\u51fd\u6570\u200b\u7684\u200b\u5728\u200b\u7cfb\u7edf\u200b\u4e0a\u200b\u7684\u200b\u53d1\u751f\u200b\u4e5f\u200b\u662f\u200b\u8fd9\u6837\u200b\uff0c\u200b\u4e3e\u4e2a\u200b\u4f8b\u5b50\u200bprintf(\"hello world\");</p> <p>\u200b\u5206\u4e3a\u200b\u8f6f\u4ef6\u200b\u548c\u200b\u786c\u4ef6\u200b\u5904\u7406\u200b\u7ed3\u5408\u200b\uff0c\u200b\u8f6f\u4ef6\u200b\u5c31\u662f\u200b\u5199\u200b\u597d\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u4e8b\u4ef6\u5904\u7406\u200b\u65b9\u6848\u200b\uff0c\uff08\u200b\u786c\u4ef6\u200b\u90e8\u5206\u200b\u662f\u200becall\u200b\u9677\u5165\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\uff09\u200b\u540e\u200b\uff0c\u200b\u5148\u200b\u4fdd\u5b58\u200b\u73b0\u573a\u200b\u5230\u200b\u6808\u200b\u5e27\u200b\u4e2d\u200b\uff0c\u200b\u518d\u200b\u8fdb\u5165\u200b\u5f02\u5e38\u200b\u5904\u7406\u4e8b\u4ef6\u200b\u5206\u53d1\u200b\uff0c\u200b\u6700\u540e\u200b\u6062\u590d\u200b\u73b0\u573a\u200b</p> <p>\u200b\u5269\u4e0b\u200b\u7684\u200b\u8bfb\u53d6\u200b\u5185\u5b58\u200b\u8bfb\u200b\u5230\u200bbuf\u200b\u4e2d\u200b\u518d\u200b\u8fdb\u884c\u200b\u4f7f\u7528\u200b\u90fd\u200b\u662f\u200b\u57fa\u7840\u200b\u64cd\u4f5c\u200b</p> <p>pa3\u200b\u7684\u200b\u4e00\u4e9b\u200b\u84dd\u6846\u200b\u9898\u200b\uff1a</p> <p>\u200b\u5f02\u5e38\u200b\u53f7\u200b\u7684\u200b\u4fdd\u5b58\u200b</p> <ul> <li>\u200b\u4e2a\u4eba\u200b\u8ba4\u4e3a\u200b\u548c\u200b\u8fd9\u4e2a\u200b\u548c\u200b\u624b\u518c\u200b\u7ea6\u5b9a\u200b\u6709\u200b\u5173\u7cfb\u200b</li> </ul> <p>\u200b\u5bf9\u6bd4\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u4e0e\u200b\u51fd\u6570\u8c03\u7528\u200b</p> <ul> <li>\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u662f\u200b\u76f8\u5f53\u4e8e\u200b\u5207\u6362\u200b\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u7a7a\u95f4\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\uff0c\u200b\u5f02\u5e38\u200b\u5904\u7406\u8fc7\u7a0b\u200b\u53d1\u751f\u200b\u7684\u200b\u4e8b\u200b\u4e0e\u200b\u539f\u5148\u200b\u7a0b\u5e8f\u200b\u5e72\u200b\u4e86\u200b\u4ec0\u4e48\u200b\u6ca1\u5173\u7cfb\u200b\u3002\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u540e\u200b\u6062\u590d\u200b\u73b0\u573a\u200b\uff0c\u200b\u56de\u5230\u200b\u539f\u5148\u200b\u7a0b\u5e8f\u200b</li> </ul> <p>\u200b\u4ece\u52a0\u200b4\u200b\u64cd\u4f5c\u200b\u770b\u200bCISC\u200b\u548c\u200bRISC</p> <ul> <li>risc\u200b\u7684\u200b+4\u200b\u53ef\u4ee5\u200b\u7406\u89e3\u200b\u4e3a\u200b\u4e24\u6761\u200b\u6307\u4ee4\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u4e00\u4e2a\u200becall\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200bcsr\u200b\u5bc4\u5b58\u5668\u200b\u5199\u200b\u3002\u200b\u5f88\u200b\u7b26\u5408\u200bRISC\u200b\u7684\u200b\u98ce\u683c\u200b\u3002\u200b\u6216\u8005\u8bf4\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u517c\u987e\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u548c\u200b\u7f3a\u9875\u200b\u5904\u7406\u200b</li> <li>CISC\u200b\u9047\u5230\u200b\u5f02\u5e38\u200b\u5e94\u8be5\u200b\u786c\u4ef6\u200b+4\uff0c\u200b\u5982\u679c\u200b\u662f\u200b\u7f3a\u9875\u200b\u5904\u7406\u200b\uff0c\u200b\u9700\u8981\u200b\u518d\u200b\u52a0\u4e0a\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b-4</li> <li>\u200b\u603b\u5f97\u6765\u8bf4\u200b\uff0c\u200b\u867d\u7136\u200brisc\u200b\u548c\u200bcisc\u200b\u5904\u7406\u200b\u5f02\u5e38\u200b\u548c\u200b+4\uff0c\u200b\u867d\u7136\u200b\u6700\u540e\u200b\u6307\u4ee4\u200b\u53ef\u80fd\u200b\u90fd\u200b\u662f\u200b\u4e00\u6761\u200b\u5230\u200b\u4e24\u6761\u200b\uff0c\u200b\u4f46\u662f\u200b\u9762\u5bf9\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b+4\u200b\u8fd9\u4e2a\u200b\u64cd\u4f5c\u200brisc\u200b\u5e73\u5747\u200b\u4e0b\u6765\u200b\u6bcf\u6761\u200b\u6307\u4ee4\u200b\u662f\u200b\u6bd4\u200bcisc\u200b\u6240\u200b\u505a\u200b\u7684\u200b\u4e8b\u60c5\u200b\u66f4\u5c11\u200b\u7684\u200b\uff0c\u200b\u6267\u884c\u200b\u8d77\u6765\u200b\u4e5f\u200b\u66f4\u200b\u5feb\u200b\uff0c\u200b\u6240\u4ee5\u200brisc\u200b\u66f4\u200b\u5408\u7406\u200b\u548c\u200b\u4f18\u200b</li> </ul> <p>\u200b\u64cd\u4f5c\u7cfb\u7edf\u200b\u662f\u200b\u4e2a\u200bC\u200b\u7a0b\u5e8f\u200b</p> <ul> <li>\u200b\u505a\u200b\u5b8c\u200bpa3\u200b\u5c31\u200b\u7406\u89e3\u200b\u4e86\u200b</li> </ul> <p>\u200b\u5806\u200b\u548c\u200b\u6808\u200b\u5728\u200b\u54ea\u91cc\u200b?</p> <ul> <li>\u200b\u7a0b\u5e8f\u200b\u7533\u8bf7\u200b\u7684\u200b</li> </ul> <p>\u200b\u5982\u4f55\u200b\u8bc6\u522b\u200b\u4e0d\u540c\u200b\u683c\u5f0f\u200b\u7684\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b?</p> <ul> <li>elf\u200b\u6587\u4ef6\u200b\u7684\u200b\u7ed3\u6784\u200b\u91cc\u200b\u6709\u200b\u76f8\u5e94\u200b\u7684\u200b\u4fe1\u606f\u200b</li> <li>\u200b\u8bfb\u200b\u4e0d\u200b\u51fa\u6765\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6807\u8bc6\u200b\u4fe1\u606f\u200b\u5c31\u662f\u200b\u683c\u5f0f\u200b\u9519\u8bef\u200b\u4e86\u200b</li> </ul> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u7684\u200b\u5fc5\u8981\u6027\u200b</p> <ul> <li>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u662f\u200b\u4e00\u5c42\u200b\u62bd\u8c61\u200b\uff0c\u200b\u662f\u200bamAPI\u200b\u548c\u200b\u6279\u5904\u7406\u200b\u7cfb\u7edf\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6865\u6881\u200b\uff0c\u200b\u76f4\u63a5\u200b\u66b4\u9732\u200b\u7684\u8bdd\u200b\u8fd9\u4e2a\u200b\u7a0b\u5e8f\u200b\u53ea\u80fd\u200b\u518d\u200b\u4f60\u200b\u8fd9\u4e2a\u200b\u7cfb\u7edf\u200b\u4e0a\u200b\u8dd1\u200b\uff0c\u200b\u518d\u200b\u522b\u7684\u200b\u7cfb\u7edf\u200b\u4e0a\u200b\u600e\u4e48\u200b\u8dd1\u200b\u5462\u200b</li> </ul> <p>RISC-V\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\u53f7\u200b\u7684\u200b\u4f20\u9012\u200b</p> <ul> <li>\u200b\u8fd9\u4e2a\u200b\u771f\u4e0d\u77e5\u9053\u200b\uff0c\u200b\u53ea\u200b\u77e5\u9053\u200blinux\u200b\u8fd9\u4e48\u200b\u7528\u200b\u7684\u200b</li> </ul> <p>\u200b\u652f\u6301\u200b\u591a\u4e2a\u200bELF\u200b\u7684\u200bftrace</p> <ul> <li>\u200b\u5199\u4e2a\u200b\u9012\u5f52\u200b\u53cd\u590d\u200b\u521d\u59cb\u5316\u200b\u5c31\u884c\u4e86\u200b</li> </ul> <p>\u200b\u6bd4\u8f83\u200bfixedpt\u200b\u548c\u200bfloat</p> <ul> <li>\u200b\u7b80\u5355\u200b\u67e5\u200b\u4e86\u200b\u4e0b\u200b\uff0c\u200b\u5927\u6982\u200b\u5c31\u662f\u200b\u7cbe\u5ea6\u200b\u4e0d\u592a\u200b\u4e00\u6837\u200b\uff0c\u200b\u8ba1\u7b97\u200b\u65b9\u5f0f\u200b\u4e0d\u592a\u200b\u4e00\u6837\u200b</li> </ul> <p>\u200b\u795e\u5947\u200b\u7684\u200bfixedpt_rconst</p> <ul> <li>\u200b\u5f3a\u5236\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u4e86\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u5e72\u7684\u4e8b\u200b</li> </ul> <p>\u200b\u5982\u4f55\u200b\u5c06\u200b\u6d6e\u70b9\u200b\u53d8\u91cf\u200b\u8f6c\u6362\u6210\u200bfixedpt\u200b\u7c7b\u578b\u200b?</p> <ul> <li>\u200b\u67e5\u200b\u624b\u518c\u200b\u6298\u817e\u200b\u6298\u817e\u200b\u5e94\u8be5\u200b\u80fd\u200b\u5b9e\u73b0\u200b</li> </ul> <p>\u200b\u7ec8\u6781\u200b\u62f7\u95ee\u200b</p> <p>\u200b\u81ea\u53e4\u4ee5\u6765\u200b, \u200b\u8ba1\u7b97\u673a\u7cfb\u7edf\u200b\u65b9\u5411\u200b\u7684\u200b\u8bfe\u7a0b\u200b\u5c31\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7ec8\u6781\u200b\u62f7\u95ee\u200b:</p> <p>\u200b\u5f53\u200b\u4f60\u200b\u5728\u200b\u7ec8\u7aef\u200b\u952e\u5165\u200b<code>./hello</code>\u200b\u8fd0\u884c\u200bHello World\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u65f6\u5019\u200b, \u200b\u8ba1\u7b97\u673a\u200b\u7a76\u7adf\u200b\u505a\u200b\u4e86\u200b\u4e9b\u200b\u4ec0\u4e48\u200b?</p> <p>\u200b\u535a\u5ba2\u200b\u524d\u9762\u200b\u5176\u5b9e\u200b\u5199\u200b\u4e86\u200b</p> <p>\u200b\u4e0b\u9762\u200b\u8bf4\u200b\u4e00\u4e0b\u200b\u5bb9\u6613\u200b\u88ab\u200b\u5751\u200b\u7684\u200b\u70b9\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u63d0\u9192\u200b\u81ea\u5df1\u200b\u4ee5\u540e\u200b\u8981\u200b\u6ce8\u610f\u200b\uff0c\u200b\u4e5f\u200b\u4e0e\u200bpa3\u200b\u5173\u8054\u200b\u4e0d\u200b\u5927\u200b</p> <ol> <li> <p>\u200b\u5728\u200b\u8fdb\u884c\u200b\u7533\u8bf7\u200b\u5185\u5b58\u200b\u91ca\u653e\u200b\u65f6\u200b\uff0c\u200b\u4e00\u5b9a\u200b\u8981\u200b\u6ce8\u610f\u200b\u68c0\u67e5\u200b\u91ca\u653e\u200b\u7684\u200b\u5185\u5b58\u200b\u8fd8\u200b\u662f\u4e0d\u662f\u200b\u81ea\u5df1\u200b\u6307\u5411\u200b\u7533\u8bf7\u200b\u5185\u5b58\u200b\u7684\u200b\u6307\u9488\u200b</p> </li> <li> <p>\u200b\u5728\u200b\u56fe\u5f62\u5316\u200b\u8bbe\u7f6e\u200b\u4e2d\u200b\uff0c\u200b\u4e2a\u4eba\u200b\u8ba4\u4e3a\u200b\u591a\u200b\u6253\u200btrace,\u200b\u7136\u540e\u200b\u9010\u6b65\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u95ee\u9898\u200b\u5728\u200b\u54ea\u200b</p> </li> </ol>"},{"location":"src/riscv%E5%8D%95%E5%91%A8%E6%9C%9F%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/","title":"riscv\u200b\u5355\u200b\u5468\u671f\u200b\u9047\u5230\u200b\u7684\u200b\u95ee\u9898","text":"<p>\u200b\u8df3\u8f6c\u200b\u6307\u4ee4\u200b\u5f02\u5e38\u200b</p> <p></p> <p></p> <p>\u200b\u9047\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7279\u522b\u200b\u5947\u602a\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u200b\u5728\u200b\u5199\u200bnpc\u200b\u7684\u200b\u65f6\u5019\u200bREGpc\u200b\u53ea\u4f1a\u200b\u88ab\u200bnextpc\u200b\u8d4b\u503c\u200b\uff0c\u200b\u4f46\u662f\u200b\u67e5\u770b\u200b\u6ce2\u5f62\u200b\u548c\u200bprintf\u200b\u6253\u5370\u200b\u51fa\u6765\u200b\u7684\u200b\u65f6\u5019\u200b\u51fa\u73b0\u200b\u4e86\u200b\u5982\u56fe\u200b\u6240\u4ee5\u200b\u7684\u200b\u6570\u503c\u200b\u9519\u8bef\u200b\u60c5\u51b5\u200b\uff0c\u200b\u6392\u67e5\u200b\u597d\u4e45\u200b\u90fd\u200b\u6ca1\u200b\u627e\u5230\u200b\u600e\u4e48\u200b\u89e3\u51b3\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u503c\u200b\u8d4b\u200b\u7ed9\u200b\u4e86\u200b\u6211\u200b\u7684\u200bREGpc\uff0c\u200b\u8fd9\u4e2a\u200b\u65f6\u95f4\u200b\u89e6\u53d1\u200b\u4e86\u200b\u8df3\u8f6c\u200b\u6307\u4ee4\u200b\uff0c\u200b\u4f46\u662f\u200b\u8df3\u8f6c\u200b\u6211\u200b\u5199\u200b\u7684\u200b\u4e5f\u200b\u662f\u200b\u5148\u200b\u6539\u53d8\u200b\u6211\u200bnextpc\u200b\u624d\u200b\u4f1a\u200b\u6539\u53d8\u200b\u6211\u200bREGpc\uff0c\u200b\u6ca1\u200b\u60f3\u200b\u660e\u767d\u200b\u4e3a\u5565\u200b\u4f1a\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u91cc\u200b\u5168\u90e8\u200b\u5b8c\u6210\u200b\u4e86\u200b\uff0c\u200b\u63a8\u6d4b\u200b\u662f\u200b\u5728\u200b\u8fd9\u91cc\u200b\u8fde\u7eed\u200b\u52a0\u200b\u4e86\u200b\u4e24\u6b21\u200bimm\u200b\u5bfc\u81f4\u200b\u8df3\u8f6c\u200b\u5f02\u5e38\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e3a\u5565\u200b\u662f\u200b\u5728\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u5185\u200b\u53d1\u751f\u200b\uff0cimm\u200b\u662f\u200b0000000C\u3002</p> <p>\u200b\u89e3\u51b3\u200b\u65b9\u6cd5\u200b\uff1a\u200b\u6211\u200b\u6700\u200b\u5f00\u59cb\u200b\uff08\u200b\u4e3a\u4e86\u200binst\u200b\u548c\u200bpc\u200b\u7684\u200b\u6ce2\u5f62\u200b\u5bf9\u9f50\u200b\uff09\u200b\u662f\u200b\u7528\u200bdnpc\u200b\u8fdb\u884c\u200b\u53d6\u6307\u200b\uff0c\u200b\u8fd9\u200b\u4f3c\u4e4e\u200b\u5bfc\u81f4\u200b\u8df3\u8f6c\u200b\u8df3\u200b\u7684\u200b\u592a\u5feb\u200b\u4e86\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5468\u671f\u200b\u52a0\u200b\u4e86\u200b\u4e24\u6b21\u200bimm,\u200b\u6362\u6210\u200bREGpc\u200b\u53d6\u503c\u200b\u5c31\u200b\u6b63\u5e38\u200b\u4e86\u200b\u3002wire\u200b\u4fe1\u53f7\u200b\u4f3c\u4e4e\u200b\u5f88\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u7528\u200breg\u200b\u7a33\u5b9a\u200b\u591a\u200b\u4e86\u200b</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/","title":"rv32\u200b\u548c\u200b64\u200b\u4e0e\u200b\u4e94\u7ea7\u200b\u6d41\u6c34","text":"<p>\u200b\u5728\u200b\u8bbe\u8ba1\u200b\u4e4b\u200b\u5904\u200b\uff0c\u200b\u7531\u4e8e\u200b\u5404\u79cd\u200b\u4e0d\u200b\u9075\u5b88\u200b\u89c4\u8303\u200b\uff0c\u200b\u8bbe\u8ba1\u200bRVnpc\u200b\u65f6\u200b\u5728\u200b\u5207\u6362\u200b64\u200b\u548c\u200b32\u200b\u603b\u200b\u8981\u200b\u66f4\u6539\u200b\u4e00\u90e8\u5206\u200b\u7684\u200b\uff0c\u200b\u4e0d\u5982\u200b\u63d0\u524d\u200b\u9605\u8bfb\u200b\u624b\u518c\u200b\uff0c\u200b\u505a\u597d\u200b\u8bbe\u8ba1\u89c4\u8303\u200b</p> <p>\u200b\u5148\u200b**RTFC**</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/#_1","title":"\u8bbe\u8ba1\u200b\u5927\u7eb2\u200b\uff1a","text":"<p>\u200b\u76ee\u6807\u200b1\uff1a \u200b\u9996\u5148\u200b\u652f\u6301\u200b\u5b8f\u200b\u5feb\u901f\u200b\u9002\u914d\u200b\uff0c\u200b\u7528\u5b8f\u200b\u5b9a\u4e49\u200bpc\u200b\u548c\u200breg\u200b\u7684\u200b\u4f4d\u200b\u5bbd\u200b\uff0c\u200b\u652f\u6301\u200brv32\u200b\u548c\u200b64\u200b\u7684\u200b\u5feb\u901f\u200b\u5207\u6362\u200b</p> <p>\u200b\u76ee\u6807\u200b2\uff1a\u200b\u4e94\u7ea7\u200b\u6d41\u6c34\u200b\uff0c\u200b\u533a\u5206\u200b\u660e\u786e\u200b</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/#if_stage","title":"IF_stage","text":"<p>\u200b\u53d6\u6307\u200b</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/#id_stage","title":"ID_stage","text":"<p>\u200b\u5bc4\u5b58\u5668\u200b\u5806\u200b</p> <p>\u200b\u8bd1\u7801\u5668\u200b</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/#ex_stage","title":"EX_stage","text":"<p>\u200b\u52a0\u6cd5\u5668\u200b</p> <p>\u200b\u4e58\u200b\u9664\u6cd5\u5668\u200b</p> <p>\u200b\u8df3\u8f6c\u200b\uff08\u200b\u5206\u652f\u200b\uff09\u200b\u63a7\u5236\u200b</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/#ls_stage","title":"LS_stage","text":"<p>ls\uff08load and store == mem\uff09</p> <p>\u200b\u5185\u5b58\u200b\u8bfb\u5199\u200b</p>"},{"location":"src/rv32%E5%92%8C64%E4%B8%8E%E4%BA%94%E7%BA%A7%E6%B5%81%E6%B0%B4/#wb_stage","title":"WB_stage","text":"<p>\u200b\u5199\u56de\u200b\u63a7\u5236\u200b</p>"},{"location":"src/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AFNPC%E8%B0%83%E8%AF%95%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/","title":"\u4e00\u751f\u200b\u4e00\u82af\u200bNPC\u200b\u8c03\u8bd5\u200b\u7cfb\u7edf\u200b\u6846\u67b6","text":"<p>\u200b\u76f4\u63a5\u200b\u7167\u642c\u200bnemu\u200b\u7684\u200b\u8c03\u8bd5\u200b\u7cfb\u7edf\u200b\u6846\u67b6\u200b\u8fc7\u4e8e\u200b\u590d\u6742\u200b\uff0c\u200b\u5f88\u591a\u200b\u5730\u65b9\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u7cbe\u7b80\u200b\uff0c\u200b\u56e0\u6b64\u200b\u51b3\u5b9a\u200b\u518d\u200b\u5b8c\u6210\u200b\u524d\u200b\u5c31\u200b\u91cd\u6784\u200b\uff0c\u200b\u4e0d\u8ba9\u200b\u5176\u200b\u6210\u4e3a\u200b\u81ea\u5df1\u200b\u7684\u200b\u7d2f\u8d58\u200b</p> <pre><code>\u251c\u2500\u2500 include\n\u2502   \u251c\u2500\u2500 macro.h\n\u2502   \u251c\u2500\u2500 npc_common.h\n\u2502   \u251c\u2500\u2500 npc_debug.h\n\u2502   \u251c\u2500\u2500 npc_reg.h\n\u2502   \u2514\u2500\u2500 npc_utils.h\n\u251c\u2500\u2500 load_img.cpp\n\u251c\u2500\u2500 main.cpp\n\u251c\u2500\u2500 npc_exe.cpp\n\u251c\u2500\u2500 npc_expr.cpp\n\u251c\u2500\u2500 npc_sdb.cpp\n\u251c\u2500\u2500 npc_watchpoint.cpp\n\u2514\u2500\u2500 reg.cpp\n</code></pre> <p>\u200b\u5927\u81f4\u200b\u5206\u4e3a\u200binclude\u200b\u5934\u6587\u4ef6\u200b\u548c\u200b\u4ee3\u7801\u200b\u5c42\u200b</p> <p>\u200b\u6267\u884c\u200b\u65b9\u5f0f\u200b</p> <p>\u200b\u652f\u6301\u200b\u6279\u5904\u7406\u200b\u6a21\u5f0f\u200b</p> <pre><code>./SimTop img=***.bin log=***.txt elf=***.elf\n</code></pre> <p>\u200b\u8bbe\u60f3\u200b\u8fd0\u884c\u200b\u65b9\u5f0f\u200b</p> <p>\u200b\u5206\u9636\u6bb5\u200b\u5f00\u59cb\u200b</p> <p>1.\u200b\u521d\u59cb\u5316\u200b\u5305\u62ec\u200breset,sdb_mainloop\u200b\u7b49\u200b\u4e00\u7cfb\u5217\u200b\u521d\u59cb\u5316\u200b</p> <p>2.\u200b\u7136\u540e\u200b\u5f39\u200b\u51fa\u200bnpc\u200b\u8c03\u8bd5\u200b\u7a97\u53e3\u200b</p> <p>3.\u200b\u8f93\u5165\u200bq\u200b\u9000\u51fa\u200b\uff0c\u200b\u8c03\u8bd5\u200b\u7ed3\u675f\u200b</p> <p>\u200b\u5206\u200b\u6a21\u5757\u200b\u8fdb\u884c\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f7f\u7528\u200bc++\u200b\u6846\u67b6\u200b\uff0c\u200b\u5c3d\u91cf\u200b\u5199\u200bc\u200b\u8bed\u8a00\u200b\u4ee3\u7801\u200b\u5b8c\u6210\u200b</p>"},{"location":"src/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AF%E7%9A%84makefile%E7%B2%BE%E8%A7%A3/","title":"\u4e00\u751f\u200b\u4e00\u82af\u200b\u7684\u200bmakefile\u200b\u7cbe\u89e3","text":"<pre><code>-C        dir\u200b\u8bfb\u5165\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200bmakefile -f        file\u200b\u8bfb\u5165\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200bfile\u200b\u6587\u4ef6\u200b\u4f5c\u4e3a\u200bmakefile -i        \u200b\u5ffd\u7565\u200b\u6240\u6709\u200b\u547d\u4ee4\u200b\u6267\u884c\u200b\u9519\u8bef\u200b -I        dir\u200b\u5236\u5b9a\u200b\u88ab\u200b\u5305\u542b\u200b\u7684\u200bmakefile\u200b\u6240\u5728\u200b\u76ee\u5f55\u200b -n        \u200b\u53ea\u200b\u6253\u5370\u200b\u8981\u200b\u6267\u884c\u200b\u7684\u200b\u547d\u4ee4\u200b\uff0c\u200b\u4f46\u662f\u200b\u4e0d\u200b\u6267\u884c\u200b\u8fd9\u4e9b\u200b\u547d\u4ee4\u200b -p        \u200b\u663e\u793a\u200bmake\u200b\u53d8\u91cf\u200b\u6570\u636e\u5e93\u200b\u7684\u200b\u9690\u542b\u200b\u89c4\u5219\u200b -s        \u200b\u5728\u200b\u6267\u884c\u547d\u4ee4\u200b\u65f6\u200b\u4e0d\u200b\u663e\u793a\u200b\u547d\u4ee4\u200b -w        \u200b\u5982\u679c\u200b\u6267\u884c\u200bmake\u200b\u5728\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6539\u53d8\u200b\u76ee\u5f55\u200b\uff0c\u200b\u6253\u5370\u200b\u5f53\u524d\u76ee\u5f55\u200b\u540d\u200b\n\naddprefix\uff1a\n$(addprefix &lt;prefix&gt;, &lt;name1 name2 ...&gt;)\n\u200b\u529f\u80fd\u200b\uff1a\u200b\u628a\u200b&lt;prefix&gt;\u200b\u52a0\u200b\u5230\u200bname\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u7684\u200b\u6bcf\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u524d\u9762\u200b\u3002\n\nresult = $(addprefix %., c cpp)\ntest:\n@echo $(result)\n\u200b\u8f93\u51fa\u200b\uff1a%.c %.cpp\n\naddsuffix:\u200b\u7528\u6cd5\u200b\u4e0e\u200baddprefix\u200b\u76f8\u540c\u200b\uff0c\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u662f\u200b\u524d\u7f00\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u540e\u7f00\u200b\u3002\n\nwildcard:\n$(wildcard &lt;pattern1 pattern2 ...&gt;)\n\u200b\u529f\u80fd\u200b\uff1a\u200b\u5c55\u5f00\u200bpattern\u200b\u4e2d\u200b\u7684\u200b\u901a\u914d\u7b26\u200b\n\n$(wildcard src/*)\n\u200b\u8f93\u51fa\u200b\uff1a\u200b\u5f97\u5230\u200bsrc\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200b\u6587\u4ef6\u200b\u5217\u8868\u200b\nFile=/dir1/dir2/dir3/a.b.c.txt\n    basename $File\n\u200b\u8f93\u51fa\u200b a.b.c.txt\n\nbasename:\n\u200b\u4ece\u200b\u8def\u5f84\u200b\u4e2d\u200b\u63d0\u53d6\u200b\u51fa\u200b\u6587\u4ef6\u540d\u200b\uff08\u200b\u5e26\u200b\u540e\u7f00\u200b\uff09\n\nfilter\uff1a\n$(filter &lt;pattern1 pattern2 ...&gt;, &lt;text&gt;)\n\u200b\u529f\u80fd\u200b\uff1a\u200b\u4ee5\u200b&lt;pattern&gt;\u200b\u6a21\u5f0f\u200b\u8fc7\u6ee4\u200b&lt;text&gt;\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u5355\u8bcd\u200b\uff0c\u200b\u4fdd\u7559\u200b\u7b26\u5408\u200b\u6a21\u5f0f\u200b&lt;pattern&gt;\u200b\u7684\u200b\u5355\u8bcd\u200b\u3002\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b\u6a21\u5f0f\u200b\u3002\n\n$(filter %.c %.cpp, $(wildcard src/*))\n\u200b\u8f93\u51fa\u200b\uff1asrc\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b\u540e\u7f00\u200b\u662f\u200b.c\u200b\u548c\u200b.cpp\u200b\u7684\u200b\u6587\u4ef6\u200b\u5e8f\u5217\u200b\u3002\n\ncall\uff1a\n$(call &lt;expression&gt;,&lt;param1&gt;,&lt;param2&gt;,...)\n\u200b\u529f\u80fd\u200b\uff1a&lt;expression&gt;\u200b\u4e2d\u6709\u200b$(1),$(2)\u200b\u8fd9\u79cd\u200b\u5360\u4f4d\u200b\u7b26\u200b\uff0ccall\u200b\u51fd\u6570\u200b\u4f7f\u7528\u200b&lt;param1&gt;,&lt;param2&gt;\u200b\u6765\u200b\u66ff\u6362\u200b$(1),$(2),\u200b\u5e76\u200b\u8ba1\u7b97\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u5b57\u7b26\u4e32\u200b\u3002\n\nlistfile  = $(filter $(if $(2),$(addprefix %.,$(2)),%), \\\n$(wildcard $(addsuffix $(SLASH)*, $(1))))\n\nlist_cc = $(call listfile, src, c cpp)\n\u200b\u8f93\u51fa\u200b\uff1asrc\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b\u540e\u7f00\u200b\u662f\u200b.c\u200b\u548c\u200b.cpp\u200b\u7684\u200b\u6587\u4ef6\u200b\u5e8f\u5217\u200b\n</code></pre>"},{"location":"src/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AF%E7%9A%84makefile%E7%B2%BE%E8%A7%A3/#ysyx-makefile","title":"ysyx-makefile\u200b\u7684\u200b\u795e\u5947\u200b\u5192\u9669\u200b\u4e4b\u65c5","text":""},{"location":"src/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AF%E7%9A%84makefile%E7%B2%BE%E8%A7%A3/#runcpu-test","title":"\u5c0f\u200brun\u200b\u4ece\u200bcpu-test\u200b\u7684\u200b\u56de\u5bb6\u200b\u8def\u7ebf","text":"<p>makefile\u200b\u7684\u200b\u795e\u5947\u200b\u5192\u9669\u200b\u4e4b\u65c5\u200b</p> <p>\u200b\u5199\u4e0b\u200b\u6b64\u200b\u7b14\u8bb0\u200b\u4f5c\u4e3a\u200b\u5bf9\u200b\u81ea\u5df1\u200b\u7684\u200b\u953b\u70bc\u200b\uff0c\u200b\u987a\u5e26\u200b\u52a0\u6df1\u200b\u5370\u8c61\u200b</p> <p>/home/wangxin/ysyx-workbench/am-kernels/tests/cpu-tests/Makefile</p> <p>\u200b\u5728\u200bcpu-test\u200b\u4e2d\u200b\u542f\u52a8\u200bmake ARCH=riscv32-nemu ALL=bit run -nB\u200b\u7684\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b</p> <p>\u200b\u6267\u884c\u200brun\u200b\u540e\u200b\u7684\u200b\u72b6\u6001\u200b</p> <pre><code>/bin/echo -e \"NAME = bit\\nSRCS = tests/bit.c\\ninclude ${AM_HOME}/Makefile\" &gt; Makefile.bit\nif make -s -f Makefile.bit ARCH=riscv32-nemu run; then \\\n        printf \"[%14s] \\033[1;32mPASS!\\033[0m\\n\" bit &gt;&gt; .result; \\\nelse \\\n        printf \"[%14s] \\033[1;31mFAIL!\\033[0m\\n\" bit &gt;&gt; .result; \\\nfi\nrm -f Makefile.bit\necho \"\" bit\ncat .result\nrm .result\n</code></pre> <p>\u200b\u63d0\u53d6\u200b\u51fa\u200b\u91cd\u8981\u200b\u4fe1\u606f\u200b</p> <pre><code>make -s -f Makefile.bit ARCH=riscv32-nemu run\n-f        file\u200b\u8bfb\u5165\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200bfile\u200b\u6587\u4ef6\u200b\u4f5c\u4e3a\u200bmakefile $(ARCH)=riscv32-nemu $(MAKECMDGOALS)=run\n</code></pre> <pre><code>\"NAME = bit\\nSRCS = tests/bit.c\\ninclude ${AM_HOME}/Makefile\" &gt; Makefile.bit\n</code></pre> <p>Makefile.bit\u200b\u89e3\u8bfb\u200b \uff08\u200b\u6765\u6e90\u200bchatgpt\uff09</p> <ul> <li> <p><code>Makefile.%: tests/%.c latest</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b Makefile \u200b\u7684\u200b\u89c4\u5219\u200b\uff0c\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b\u4ee5\u200b\u7279\u5b9a\u200b\u6a21\u5f0f\u200b\u5f00\u5934\u200b\u7684\u200b\u76ee\u6807\u200b\u6587\u4ef6\u200b\u3002</p> </li> <li> <p>\u200b\u8fd9\u4e2a\u200b\u89c4\u5219\u200b\u53ef\u4ee5\u200b\u89e3\u8bfb\u200b\u4e3a\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u4ee5\u200b\u4efb\u610f\u200b\u5b57\u7b26\u4e32\u200b\u5f00\u5934\u200b\u7684\u200b\u76ee\u6807\u200b\u6587\u4ef6\u200b\uff08\u200b\u4f7f\u7528\u200b\u901a\u914d\u7b26\u200b %\uff09\uff0c\u200b\u5982\u679c\u200b\u5b58\u5728\u200b\u5bf9\u5e94\u200b\u7684\u200b <code>tests/</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200b\u540c\u540d\u200b <code>.c</code> \u200b\u6587\u4ef6\u200b\uff0c\u200b\u5219\u200b\u4f7f\u7528\u200b\u6700\u65b0\u200b\u7684\u200b <code>latest</code> \u200b\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u4f9d\u8d56\u200b\uff0c\u200b\u6267\u884c\u200b\u89c4\u5219\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u547d\u4ee4\u200b\u3002</p> </li> <li> <p>\u200b\u5177\u4f53\u6765\u8bf4\u200b\uff0c\u200b\u5047\u8bbe\u200b\u4f60\u200b\u7684\u200b Makefile \u200b\u4e2d\u6709\u200b\u4ee5\u4e0b\u200b\u89c4\u5219\u200b\uff1a</p> </li> <li> <p><code>makefile   Makefile.%: tests/%.c latest       gcc -o $@ $&lt; -Iinclude -Llib -lmylibrary</code></p> </li> <li> <p>\u200b\u5f53\u200b\u4f60\u200b\u8fd0\u884c\u200b <code>make Makefile.example</code> \u200b\u65f6\u200b\uff0cMake \u200b\u5de5\u5177\u200b\u4f1a\u200b\u5c1d\u8bd5\u200b\u67e5\u627e\u200b <code>tests/example.c</code> \u200b\u6587\u4ef6\u200b\u4ee5\u53ca\u200b\u540d\u4e3a\u200b <code>latest</code> \u200b\u7684\u200b\u6587\u4ef6\u200b\u3002\u200b\u5982\u679c\u200b\u8fd9\u4e9b\u200b\u6587\u4ef6\u200b\u90fd\u200b\u5b58\u5728\u200b\uff0c\u200b\u5e76\u4e14\u200b <code>tests/example.c</code> \u200b\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u65f6\u95f4\u200b\u665a\u4e8e\u200b <code>latest</code> \u200b\u6587\u4ef6\u200b\u7684\u200b\u4fee\u6539\u200b\u65f6\u95f4\u200b\uff0c\u200b\u90a3\u4e48\u200b Make \u200b\u5de5\u5177\u200b\u4f1a\u200b\u6267\u884c\u200b\u89c4\u5219\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u547d\u4ee4\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u662f\u200b\u4f7f\u7528\u200b gcc \u200b\u7f16\u8bd1\u200b <code>tests/example.c</code> \u200b\u6587\u4ef6\u200b\u5e76\u200b\u751f\u6210\u200b\u540d\u4e3a\u200b <code>Makefile.example</code> \u200b\u7684\u200b\u76ee\u6807\u200b\u6587\u4ef6\u200b\u3002</p> </li> <li> <p>\u200b\u8fd9\u4e2a\u200b\u89c4\u5219\u200b\u7684\u200b\u4f5c\u7528\u200b\u662f\u200b\u6839\u636e\u200b <code>tests/</code> \u200b\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200b\u6e90\u4ee3\u7801\u200b\u6587\u4ef6\u200b\u751f\u6210\u200b\u5bf9\u5e94\u200b\u7684\u200b\u76ee\u6807\u200b\u6587\u4ef6\u200b\u3002<code>latest</code> \u200b\u6587\u4ef6\u200b\u7528\u4f5c\u200b\u4e00\u4e2a\u200b\u6807\u8bb0\u200b\uff0c\u200b\u786e\u4fdd\u200b\u53ea\u6709\u200b\u5728\u200b\u6e90\u4ee3\u7801\u200b\u6587\u4ef6\u200b\u66f4\u65b0\u200b\u540e\u200b\u624d\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u76ee\u6807\u200b\u6587\u4ef6\u200b\u3002\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u6784\u5efa\u200b\u6548\u7387\u200b</p> </li> </ul> <pre><code>\"NAME = bit SRCS = tests/bit.c include ${AM_HOME}/Makefile\" &gt; Makefile.bit\n</code></pre> <p>\u200b\u4f20\u5165\u200b\u53c2\u6570\u200b</p> <pre><code> $NAME=bit    $SRCS=tests/bit.c   include ${AM_HOME}/Makefile \u200b\u5199\u5165\u200bMakefile.*\u200b\u6587\u4ef6\u200b\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u4f9d\u7136\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u7528\u200b\u7684\u200b\u662f\u200bmake ARCH=riscv32-nemu ALL=bit run -nB\u200b\u547d\u4ee4\u200b</p> <p>\u200b\u6b64\u65f6\u200b\u4ea7\u751f\u200b\u4e86\u200bMakefile.bit\u200b\u6587\u4ef6\u200b \u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u4e3a\u200b</p> <pre><code>NAME = bit\nSRCS = tests/bit.c\ninclude /home/wangxin/ysyx-workbench/abstract-machine/Makefile\n#include \u200b\u76f8\u5f53\u4e8e\u200b\u628a\u200bMakefile.bit\u200b\u5c55\u5f00\u200b\u6210\u200b\nNAME = bit\nSRCS = tests/bit.c\n+include /home/wangxin/ysyx-workbench/abstract-machine/Makefile \u200b\u91cc\u200b\u7684\u200b\u6240\u6709\u200b\u5185\u5bb9\u200b\n\uff08\u200b\u76f8\u5f53\u4e8e\u200bcopy abstract-machine/Makefile\u200b\u7684\u200b\u6240\u6709\u200b\u5185\u5bb9\u200b\uff0c\u200b\u591a\u200b\u4e86\u200bNAME\u200b\u548c\u200bSRCS\u200b\u53c2\u6570\u200b\uff09\n</code></pre> <p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u6765\u200b\u63a5\u7740\u200b\u5173\u6ce8\u200b include ${AM_HOME}/Makefile</p> <p>\u200b\u8fdb\u5165\u200b/home/wangxin/ysyx-workbench/abstract-machine/Makefile</p> <p>\u200b\u7531\u4e8e\u200babstract-machine/Makefile\u200b\u6a21\u677f\u200b\u590d\u6742\u200b\uff0c\u200b\u6311\u200b\u91cd\u70b9\u200b\u8fdb\u884c\u200b\u89e3\u8bfb\u200b</p> <p>\u200b\u9996\u5148\u200b\u8fdb\u884c\u200b\u9884\u5904\u7406\u200b\uff0c\u200b\u5f97\u5230\u200b\u9700\u8981\u200b\u7684\u200b\u6240\u6709\u200b\u53d8\u91cf\u200b</p> <p>\u200b\u7b2c\u4e00\u6b21\u200b\u8c03\u7528\u200babstract-machine/Makefile\u200b\u8981\u200b\u5904\u7406\u200b\u7684\u200b\u53d8\u91cf\u200b</p> <pre><code>NAME = bit\nSRCS = tests/bit.c\nISA = riscv32\nARCH= riscv32-nemu\nPLATFORM=menu\nMAKECMDGOALS=run\nWORK_DIR  = $(shell pwd)\nWORK_DIR  = $(shell pwd)\nDST_DIR   = $(WORK_DIR)/build/$(ARCH)\n$(shell mkdir -p $(DST_DIR))\n\n### Compilation targets (a binary image or archive)\nIMAGE_REL = build/$(NAME)-$(ARCH)\nIMAGE     = $(abspath $(IMAGE_REL))\nARCHIVE   = $(WORK_DIR)/build/$(NAME)-$(ARCH).a\n</code></pre> <pre><code>-include $(AM_HOME)/scripts/$(ARCH).mk\n</code></pre> <p>-include\u200b\u548c\u200binclude\u200b\u533a\u522b\u200b</p> <ul> <li>\u200b\u7c7b\u4f3c\u200bc++\u200b\u5230\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u5bfb\u627e\u200bmakefile\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u8be5\u200b\u6587\u4ef6\u200b\u8f7d\u5165\u200b\u5230\u200b\u5f53\u524d\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff08\u200b\u53ef\u4ee5\u200b\u770b\u505a\u200binclude\u200b\u5c31\u662f\u200b\u5c06\u200bmakefile\u200b\u6587\u4ef6\u200b\u91cc\u200b\u7684\u200b\u6240\u6709\u200b\u5185\u5bb9\u200bcopy\u200b\u5230\u200b\u5f53\u524d\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff09</li> <li>\u200b\u533a\u522b\u200b\u5982\u679c\u200b\u6709\u200binclude\u200b\u7684\u200b\u6587\u4ef6\u200b\u6ca1\u6709\u200b\u627e\u5230\u200b\u7684\u8bdd\u200b\uff0cmake\u200b\u4f1a\u200b\u751f\u6210\u200b\u4e00\u6761\u200b\u8b66\u544a\u200b\u4fe1\u606f\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u4f1a\u200b\u9a6c\u4e0a\u200b\u51fa\u73b0\u200b\u81f4\u547d\u200b\u9519\u8bef\u200b\u3002\u200b\u5b83\u4f1a\u200b\u7ee7\u7eed\u200b\u8f7d\u5165\u200b\u5176\u5b83\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u4e00\u65e6\u200b\u5b8c\u6210\u200bmakefile\u200b\u7684\u200b\u8bfb\u53d6\u200b\uff0cmake\u200b\u4f1a\u200b\u518d\u200b\u91cd\u8bd5\u200b\u8fd9\u4e9b\u200b\u6ca1\u6709\u200b\u627e\u5230\u200b\uff0c\u200b\u6216\u662f\u200b\u4e0d\u80fd\u200b\u8bfb\u53d6\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5982\u679c\u200b\u8fd8\u662f\u200b\u4e0d\u884c\u200b\uff0cmake\u200b\u624d\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u4e00\u6761\u200b\u81f4\u547d\u200b\u4fe1\u606f\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u60f3\u200b\u8ba9\u200bmake\u200b\u4e0d\u7406\u200b\u90a3\u4e9b\u200b\u65e0\u6cd5\u200b\u8bfb\u53d6\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u800c\u200b\u7ee7\u7eed\u6267\u884c\u200b\uff0c\u200b\u5728\u200binclude\u200b\u524d\u52a0\u200b\u4e00\u4e2a\u200b\u51cf\u53f7\u200b\u201c-\u201d\u3002\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5ffd\u7565\u200b\u8b66\u544a\u200b</li> </ul> <p>\u200b\u5c55\u5f00\u200b-include $(AM_HOME)/scripts/riscv32-nemu.mk\u200b\u7684\u200b\u5185\u5bb9\u200b\u4e3a\u200b</p> <pre><code>include $(AM_HOME)/scripts/isa/riscv.mk\ninclude $(AM_HOME)/scripts/platform/nemu.mk\n###\u200b\u5c55\u5f00\u200briscv,mk\nCROSS_COMPILE := riscv64-linux-gnu-\nCOMMON_CFLAGS := -fno-pic -march=rv64g -mcmodel=medany -mstrict-align\nCFLAGS        += $(COMMON_CFLAGS) -static\nASFLAGS       += $(COMMON_CFLAGS) -O0\nLDFLAGS       += -melf64lriscv\n\n# overwrite ARCH_H defined in $(AM_HOME)/Makefile\nARCH_H := arch/riscv.h\n###\n\n###\u200b\u5c55\u5f00\u200bnemu.mk\n\u200b\u7bc7\u5e45\u200b\u8fc7\u957f\u200b \u200b\u89c1\u4e0b\u6587\u200b\n###\nCFLAGS  += -DISA_H=\\\"riscv/riscv.h\\\"\nCOMMON_CFLAGS += -march=rv32im_zicsr -mabi=ilp32  # overwrite\nLDFLAGS       += -melf32lriscv                     # overwrite\n\nAM_SRCS += riscv/nemu/start.S \\\nriscv/nemu/cte.c \\\nriscv/nemu/trap.S \\\nriscv/nemu/vme.c\n</code></pre> <p>\u200b\u5c55\u5f00\u200binclude $(AM_HOME)/scripts/platform/nemu.mk</p> <pre><code>AM_SRCS := platform/nemu/trm.c \\\nplatform/nemu/ioe/ioe.c \\\nplatform/nemu/ioe/timer.c \\\nplatform/nemu/ioe/input.c \\\nplatform/nemu/ioe/gpu.c \\\nplatform/nemu/ioe/audio.c \\\nplatform/nemu/ioe/disk.c \\\nplatform/nemu/mpe.c\n\nCFLAGS    += -fdata-sections -ffunction-sections\nLDFLAGS   += -T $(AM_HOME)/scripts/linker.ld \\\n--defsym=_pmem_start=0x80000000 --defsym=_entry_offset=0x0\nLDFLAGS   += --gc-sections -e _start\nNEMUFLAGS += -b\n# NEMUFLAGS += -f $(IMAGE).elf\n#\u200b\u6700\u540e\u200b\u5728\u200bnative.mk\u200b\u7f16\u8bd1\u200b,\u200b\u4e00\u4e2a\u200b\u540d\u53eb\u200briscv32-nemu-interpreter \u200b\u7684\u200bc++\u200b\u6587\u4ef6\u200b\u4f20\u5165\u200bint main(argc, argv)[nemu-main.c]\n#/home/wangxin/ysyx-workbench/nemu/build/riscv32-nemu-interpreter \n# -l -b /home/wangxin/ysyx-workbench/am-kernels/tests/cpu-tests/build/nemu-log.txt\n# /home/wangxin/ysyx-workbench/am-kernels/tests/cpu-tests/build/bit-riscv32-nemu.bin\nNEMUFLAGS += -l $(shell dirname $(IMAGE).elf)/nemu-log.txt\n\nCFLAGS += -DMAINARGS=\\\"$(mainargs)\\\"\nCFLAGS += -I$(AM_HOME)/am/src/platform/nemu/include\n.PHONY: $(AM_HOME)/am/src/platform/nemu/trm.c\n\nimage: $(IMAGE).elf\n@$(OBJDUMP) -d $(IMAGE).elf &gt; $(IMAGE).txt\n    @echo + OBJCOPY \"-&gt;\" $(IMAGE_REL).bin\n    @$(OBJCOPY) -S --set-section-flags .bss=alloc,contents -O binary $(IMAGE).elf $(IMAGE).bin\n\nrun: image\n$(MAKE) -C $(NEMU_HOME) ISA=$(ISA) run ARGS=\"$(NEMUFLAGS)\" IMG=$(IMAGE).bin\n\ngdb: image\n$(MAKE) -C $(NEMU_HOME) ISA=$(ISA) gdb ARGS=\"$(NEMUFLAGS)\" IMG=$(IMAGE).bin\n</code></pre> <p>\u200b\u7b49\u7b49\u200b\uff0c\u200b\u8fd9\u4e2a\u200brun\u200b\u662f\u4ece\u200b\u54ea\u6765\u200b\u7684\u200b\u5462\u200b\uff1f</p> <p>\u200b\u6211\u4eec\u200b\u5f80\u524d\u200b\u63a8\u200b\uff0c\u200b\u5f80\u524d\u200b\u5f80\u524d\u200b\u518d\u200b\u5f80\u524d\u200b\uff0c\u200b\u4e00\u6761\u200b\u65e0\u6bd4\u200b\u719f\u6089\u200b\u7684\u200b\u6307\u4ee4\u200b\u6d6e\u73b0\u200b\u5728\u200b\u773c\u524d\u200b</p> <pre><code>make -s -f Makefile.bit ARCH=riscv32-nemu run\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b run \u200b\u5212\u200b\u91cd\u70b9\u200b\uff0c\u200b\u8d70\u200b\u4e86\u200b\u8fd9\u4e48\u4e45\u200b\uff0c\u200b\u53ef\u200b\u7b97\u200b\u627e\u5230\u200brun\u200b\u5728\u200b\u54ea\u200b\u51fa\u73b0\u200b\u4e86\u200b</p> <p>\u200b\u6240\u4ee5\u200b\uff0c\u200b\u5230\u5e95\u200b\u662f\u200b\u4e2a\u200b\u4ec0\u4e48\u200b\u8fc7\u7a0b\u200b\u5462\u200b \u200b\u5176\u5b9e\u200b\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u9012\u5f52\u200b\u8c03\u7528\u200b</p> <p>\u200b\u6211\u4eec\u200b\u8d70\u200b\u4e86\u200b\u8fd9\u4e48\u4e45\u200b\uff0c\u200b\u5176\u5b9e\u200b\u5c31\u662f\u200b\u53cd\u590d\u200b\u9012\u5f52\u200b\u3002</p> <p>\u200b\u5728\u200b\u9002\u5f53\u200b\u7684\u200b\u5730\u65b9\u200b\u63d2\u5165\u200b\u76d1\u89c6\u200b\u70b9\u200b <code>$(info \"The am_makefile begin\"$(NAME)-$(MAKECMDGOALS)-$(ARCH))</code></p> <p>\u200b\u83b7\u5f97\u200b\u7f16\u8bd1\u200b\u53c2\u6570\u200b</p> <pre><code>\"The am_makefile begin\"bit-run-riscv32-nemu\n# Building bit-run [riscv32-nemu]\n\"The am_makefile end\"bit-run-riscv32-nemu\n\"The am_makefile begin\"am-archive-riscv32-nemu\n# Building am-archive [riscv32-nemu]\n\"The am_makefile end\"am-archive-riscv32-nemu\n+ CC src/platform/nemu/trm.c\n+ AR -&gt; build/am-riscv32-nemu.a\n\"The am_makefile begin\"klib-archive-riscv32-nemu\n# Building klib-archive [riscv32-nemu]\n\"The am_makefile end\"klib-archive-riscv32-nemu\n+ LD -&gt; build/bit-riscv32-nemu.elf\n# Creating image [riscv32-nemu]\n+ OBJCOPY -&gt; build/bit-riscv32-nemu.bin\n</code></pre> <p>\u200b\u6bcf\u200b\u4e00\u6b21\u200bbuilding\u200b\u4f34\u968f\u200b\u7740\u200binclude abstract-machine/makefile</p> <p>\u200b\u7b2c\u4e00\u6b21\u200b\u7684\u200bbuilding</p> <pre><code>NAME = bit\nISA = riscv32\nARCH= riscv32-nemu\nMAKECMDGOALS=run\n</code></pre> <p>\u200b\u7b2c\u4e8c\u6b21\u200b\u7684\u200bbuilding</p> <pre><code>NAME = am\nISA = riscv32\nARCH= riscv32-nemu\nMAKECMDGOALS=archive\n</code></pre> <p>\u200b\u7b2c\u4e09\u6b21\u200b\u7684\u200bbuilding</p> <pre><code>NAME = klib\nISA = riscv32\nARCH= riscv32-nemu\nMAKECMDGOALS=archive\n</code></pre> <p>\u200b\u7b2c\u56db\u6b21\u200b\u7684\u200bcreating\u200b\u76f8\u5f53\u4e8e\u200b\u751f\u6210\u200b.elf\u200b\u6587\u4ef6\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u8c03\u7528\u200b</p> <pre><code>+ LD -&gt; build/bit-riscv32-nemu.elf\n# Creating image [riscv32-nemu]\n+ OBJCOPY -&gt; build/bit-riscv32-nemu.bin\n</code></pre> <p>\u200b\u8ba9\u200b\u6211\u4eec\u200b\u5148\u200b\u4ece\u200b\u7b2c\u4e00\u4e2a\u200brun\u200b\u8bf4\u8d77\u200b\u5427\u200b</p> <pre><code>run: image\n    $(MAKE) -C $(NEMU_HOME) ISA=$(ISA) run ARGS=\"$(NEMUFLAGS)\" IMG=$(IMAGE).bin\n</code></pre> <p>\u200b\u8bfb\u5165\u200bNEMU_HOME\u200b\u7684\u200bmakefile</p> <p>\u200b\u4f20\u5165\u200b\u53c2\u6570\u200b</p> <pre><code>ISA=riscv32-nemu\nARGS=\"$(NEMUFLAGS)\"\nIMG=$(IMAGE).bin \n</code></pre> <p>\u200b\u8fd9\u4e2a\u200bIMG\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6d4f\u89c8\u200b\u540e\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u5f97\u5230\u200b\u7ed3\u8bba\u200b</p> <p>nemu\u200b\u901a\u8fc7\u200b\u89e3\u6790\u200b\u8fd9\u4e2a\u200b.bin\u200b\u6587\u4ef6\u200b\u83b7\u5f97\u200binst\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u5b58\u5165\u200bpmem\u200b\u8fd9\u4e2a\u200b\u5927\u200b\u6570\u7ec4\u200b\u4e2d\u200b</p> <p></p> <p>\u200b\u7136\u540e\u200b \u200b\u6211\u4eec\u200b\u518d\u6b21\u200b\u89c1\u5230\u200b\u4e86\u200b\u8001\u670b\u53cb\u200b <code>include $(AM_HOME)/Makefile</code></p> <p>\u200b\u6211\u4eec\u200b\u5bf9\u200b\u8001\u670b\u53cb\u200b\u6bd4\u8f83\u200b\u719f\u6089\u200b\u4e86\u200b\uff0c\u200b\u90a3\u200b\u6211\u4eec\u200b\u5148\u200b\u628a\u200bnemu/makefile\u200b\u68b3\u7406\u200b\u5b8c\u518d\u200b\u8fdb\u5165\u200b\u8001\u670b\u53cb\u200b\u63a2\u7d22\u200b</p> <p>\u200b\u5728\u200bnemu/makefile\u200b\u4e2d\u200b\u7684\u200b\u6700\u540e\u200b\u51e0\u53e5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b <code>include $(NEMU_HOME)/scripts/native.mk</code></p> <p>\u200b\u5c55\u5f00\u200b</p> <pre><code>-include $(NEMU_HOME)/../Makefile\ninclude $(NEMU_HOME)/scripts/build.mk\n\ninclude $(NEMU_HOME)/tools/difftest.mk\n</code></pre> <p>\u200b\u8fd9\u91cc\u200b\u5f15\u7528\u200b\u4e86\u200bysyx\u200b\u7684\u200b\u4e00\u4e9b\u200b\u8ffd\u8e2a\u200b\u4e1c\u897f\u200b</p> <pre><code>run-env: $(BINARY) $(DIFF_REF_SO)\n\nrun: run-env\n$(call git_commit, \"run NEMU\")\n$(NEMU_EXEC)\n</code></pre> <p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u53d1\u73b0\u200b\uff0c\u200b\u6700\u200b\u5f00\u59cb\u200b\u8f93\u5165\u200b\u7684\u200b\u90a3\u4e2a\u200brun\uff0c\u200b\u7adf\u7136\u200b\u8d70\u200b\u4e86\u200b\u8fd9\u4e48\u200b\u591a\u200b\uff0c\u200b\u515c\u515c\u200b\u8f6c\u8f6c\u200b\u6765\u5230\u200b\u4e86\u200bnative.mk\u200b\u6267\u884c\u200b</p> <pre><code>compile_git:\n$(call git_commit, \"compile NEMU\")\n$(BINARY):: compile_git\n\n#\u200b\u4ece\u200b\u524d\u9762\u200b\u7684\u200b\u53c2\u6570\u200b\uff0c\u200b\u6211\u4eec\u200b\u5f97\u77e5\u200b ARGS=\"$(NEMUFLAGS)\"\noverride ARGS ?= --log=$(BUILD_DIR)/nemu-log.txt\noverride ARGS += $(ARGS_DIFF)\n\nIMG ?=\nNEMU_EXEC := $(BINARY) $(ARGS) $(IMG)\n</code></pre> <p>\u200b\u6240\u4ee5\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200brun\u200b\u6700\u7ec8\u200b\u7684\u200b\u8f93\u51fa\u200b\u4e3a\u200b</p> <pre><code># NEMUFLAGS += -f $(IMAGE).elf\n#\u200b\u6700\u540e\u200b\u5728\u200bnative.mk\u200b\u7f16\u8bd1\u200b,\u200b\u4e00\u4e2a\u200b\u540d\u53eb\u200briscv32-nemu-interpreter \u200b\u7684\u200bc++\u200b\u6587\u4ef6\u200b\u4f20\u5165\u200bint main(argc, argv)[nemu-main.c]\n/home/wangxin/ysyx-workbench/nemu/build/riscv32-nemu-interpreter -l -b /home/wangxin/ysyx-workbench/am-kernels/tests/cpu-tests/build/nemu-log.txt\n/home/wangxin/ysyx-workbench/am-kernels/tests/cpu-tests/build/bit-riscv32-nemu.bin\n</code></pre> <p>/home/wangxin/ysyx-workbench/nemu/build/riscv32-nemu-interpreter\u200b\u662f\u200b\u7f16\u8bd1\u200b\u51fa\u200b\u7684\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b</p> <p>\u200b\u540e\u9762\u200b\u7684\u200b\u53c2\u6570\u200b\u901a\u8fc7\u200b**int** parse_args(int argc, char argv*[]**) \u200b\u89e3\u6790\u200b\u51fa\u6765\u200b\u4ea4\u7ed9\u200bc\u200b\u8bed\u8a00\u200b\u8fdb\u884c\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u63a5\u4e0b\u6765\u200b\u5728\u200bc\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u5e94\u8be5\u200b\u53d1\u751f\u200b\u4ec0\u4e48\u200b\u6211\u4eec\u200b\u5e94\u8be5\u200b\u77e5\u9053\u200b\u4e86\u200b</p>"},{"location":"src/%E4%B8%80%E7%94%9F%E4%B8%80%E8%8A%AF%E7%9A%84makefile%E7%B2%BE%E8%A7%A3/#amklibelf","title":"am\u3001klib\u200b\u548c\u200b\u3001elf\u200b\u7684\u200b\u5192\u9669\u200b\u4e4b\u65c5","text":"<p>\u200b\u7528\u5230\u200b\u7684\u200b\u65f6\u5019\u200b\u518d\u200b\u8865\u5145\u200b\u8be6\u89e3\u200b\uff08\uff09</p> <p>\u200b\u5728\u200babstract-machine/makefile\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u770b\u5230\u200b\u5982\u4e0b\u200b\u5b57\u200b\u6bb5\u200b</p> <p>\u200b\u7ed3\u5408\u200bysyx\u200b\u8bb2\u4e49\u200b\u5f97\u200bam\u200b\u548c\u200bklib\u200b\u8fd9\u4e9b\u200b\u94fe\u63a5\u200b\u8fc7\u7a0b\u200b</p> <pre><code>### Collect the files to be linked: object files (`.o`) and libraries (`.a`)\nOBJS      = $(addprefix $(DST_DIR)/, $(addsuffix .o, $(basename $(SRCS))))\nLIBS     := $(sort $(LIBS) am klib) # lazy evaluation (\"=\") causes infinite recursions\nLINKAGE   = $(OBJS) \\\n$(addsuffix -$(ARCH).a, $(join \\\n$(addsuffix /build/, $(addprefix $(AM_HOME)/, $(LIBS))), \\\n$(LIBS) ))\n</code></pre> <p>\u200b\u5bf9\u4e8e\u200belf\u200b\u7684\u200b\u751f\u6210\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd9\u91cc\u200b\u627e\u5230\u200b</p> <pre><code>### Rule (link): objects (`*.o`) and libraries (`*.a`) -&gt; `IMAGE.elf`, the final ELF binary to be packed into image (ld)\n$(IMAGE).elf: $(OBJS) am $(LIBS)\n@echo + LD \"-&gt;\" $(IMAGE_REL).elf\n    @$(LD) $(LDFLAGS) -o $(IMAGE).elf --start-group $(LINKAGE) --end-group\n</code></pre>"},{"location":"src/%E5%BC%80%E5%8F%91%E8%AE%A1%E5%88%92/","title":"\u5f00\u53d1\u8ba1\u5212","text":"<ul> <li> <p> \u200b\u7814\u7a76\u200bpmem\u200b\u5185\u5b58\u200b\u5bf9\u9f50\u200b\u95ee\u9898\u200b </p> </li> <li> <p> \u200b\u5347\u7ea7\u200b\u65ad\u70b9\u200b\u529f\u80fd\u200b</p> </li> <li> \u200b\u73b0\u5728\u200b\u7684\u200b\u65ad\u70b9\u200b\uff0c\u200b\u6b8b\u8840\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u4f7f\u7528\u200b\u9700\u8981\u200b\u8f93\u5165\u200b\u5f88\u957f\u200b\u4e00\u6bb5\u200b</li> <li> \u200b\u65ad\u70b9\u200b\u8df3\u200b\u7684\u200b\u4e0d\u591f\u200b\u7cbe\u51c6\u200b\uff0c\u200b\u9700\u8981\u200b\u8f85\u52a9\u200b\u8ba1\u6570\u5668\u200b\u6765\u200b\u5347\u7ea7\u200b\u8c03\u8bd5\u200b\u7cfb\u7edf\u200b</li> <li> <p> \u200b\u8f85\u52a9\u200b\u8ba1\u6570\u5668\u200b\uff1a\u200b\u6bcf\u200b\u6267\u884c\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b+1\uff0c\u200b\u8fd9\u6837\u200b\u76f4\u63a5\u200bsi\u200b\u5c31\u200b\u80fd\u200b\u8df3\u200b\u5230\u200b\u66f4\u200b\u51c6\u786e\u200b\u7684\u200b\u63a5\u8fd1\u200b\u5730\u65b9\u200b\u89c2\u5bdf\u200b</p> </li> <li> <p> sdb looktrace \u200b\u5728\u200b\u8c03\u8bd5\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u770b\u200b\u6240\u6709\u200btrace\u200b\u7684\u200b\u8bb0\u5f55\u200b</p> </li> <li> <p> sdb lt</p> </li> <li> <p> watchpoint \u200b\u652f\u6301\u200b\u68c0\u6d4b\u200b\u5185\u5b58\u200b\u66f4\u6539\u200b</p> </li> <li> <p> \u200b\u5b9e\u73b0\u200b\u65f6\u949f\u200b\uff0c\u200b\u601d\u8def\u200b\uff1a</p> </li> <li> <p> \u200b\u5199\u200b\u4e00\u4e2a\u200b\u65f6\u949f\u200b\u8ba1\u6570\u5668\u200b\u51fd\u6570\u200b\uff0c\u200b\u81ea\u52a8\u200b\u8ba1\u6570\u200b\uff0c\u200b\u53d6\u200b\u7684\u200b\u65f6\u5019\u200b\u53d6\u200brtc_addr\u200b\u548c\u200brtc_addr+4,\u200b\u5206\u4e3a\u200b\u4f4e\u4f4d\u200b\u548c\u200b\u9ad8\u4f4d\u200b\u5c31\u662f\u200b\u65f6\u95f4\u200b</p> </li> <li> <p> cpu\u200b\u5b9e\u73b0\u200bvga\uff0c\u200b\u952e\u76d8\u200b\uff0c\u200b\u4e32\u53e3\u200b\uff0c\u200b\u65f6\u949f\u200b</p> </li> <li> <p> \u200b\u5b8c\u5584\u200b\u7684\u200bnpc\u200b\u5b8f\u200b\u63a7\u5236\u200b\uff0c\u200b\u6216\u8bb8\u200b\u53ef\u4ee5\u200b\u7528\u200bmake menuconfig\uff0c\u200b\u4f46\u662f\u200b\u6211\u200b\u611f\u89c9\u200b\u8fd8\u662f\u200b\u597d\u200b\u9ebb\u70e6\u200b</p> </li> <li> <p> nemu\u200b\u7684\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u5e76\u200b\u4e0d\u200b\u5b8c\u5584\u200b</p> </li> <li> <p> \u200b\u611f\u89c9\u200b  |\u3001-\u200b\u8fd9\u200b\u4fe9\u200b\u547d\u4ee4\u200b\u8fd8\u200b\u4e0d\u662f\u200b\u5f88\u200b\u719f\u7ec3\u200b\uff0c\u200b\u6f0f\u7f51\u4e4b\u9c7c\u200b\u4e86\u200b\u5c5e\u4e8e\u200b\u662f\u200b</p> </li> <li> <p> stdio\u200b\u5e93\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b</p> </li> <li> <p> printf\u200b\u8981\u52a0\u200bpanic\u200b\u68c0\u67e5\u200b\uff0c\u200b\u907f\u514d\u200b\u5185\u5b58\u200b\u6ea2\u51fa\u200b\u53d1\u751f\u200b\u5176\u4ed6\u200b\u95ee\u9898\u200b</p> </li> <li> <p> \u200b\u5feb\u7167\u200b (\u200b\u5f00\u53d1\u200b\u4e5f\u200b\u4e0d\u96be\u200b\uff0c\u200b\u4f46\u662f\u200b\u6682\u65f6\u200b\u611f\u89c9\u200b\u6ca1\u200b\u5fc5\u8981\u200b)</p> </li> <li> <p> \u200b\u4ed9\u5251\u200b\u5947\u4fa0\u4f20\u200b\u7684\u200b\u663e\u793a\u200b\u6ea2\u51fa\u200b\u95ee\u9898\u200b</p> </li> </ul>"},{"location":"src/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E9%9A%8F%E7%AC%94/","title":"\u5f02\u5e38\u200b\u5904\u7406\u200b\u968f\u7b14","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5f88\u200b\u91cd\u8981\u200b\u7684\u200b\u8868\u200b\uff0c\u200b\u5c45\u7136\u200b\u5728\u200b\u5f00\u653e\u200b\u67b6\u6784\u8bbe\u8ba1\u200b\u4e4b\u9053\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u8bfb\u200b\u5230\u200b\uff08\u200b\u9009\u62e9\u200b\u6b63\u786e\u200b\u7684\u200b\u624b\u518c\u200b\uff09</p> <p></p> <p></p> <p></p> <p></p> <p>\u200b\u8981\u200b\u8eb2\u907f\u200b\u7684\u200b\u51e0\u4e2a\u200b\u5751\u70b9\u200b\uff1a</p> <p>1.\u200b\u5b9e\u73b0\u200bdifftest\u200b\u7684\u200b\u65f6\u5019\u200b\u8981\u8bfb\u200b\u4e00\u4e0b\u200b\u6e90\u7801\u200b\uff0cdifftest\u200b\u540c\u6b65\u200b\u5bc4\u5b58\u5668\u200b\u7684\u200b\u65f6\u5019\u200b\u8d4b\u503c\u200b\u65b9\u5f0f\u200b\u662f\u200b\u4e0d\u200b\u4e00\u6837\u200b\u7684\u200b</p> <p>2.nemu\u200b\u4e00\u76f4\u200b\u662f\u200bM\u200b\u6700\u9ad8\u200b\u6743\u9650\u200b\u7ea7\u522b\u200b</p> <p>3.\u200b\u591a\u8bfb\u200b\u624b\u518c\u200b</p> <p>4.\u200b\u7b2c\u4e00\u4e2a\u200b\u5730\u65b9\u200b\u7684\u200b\u8981\u6c42\u200b\u884c\u4e3a\u200b\u548c\u200bnative\u200b\u5e76\u200b\u4e0d\u200b\u4e00\u6837\u200b\uff0c\u200b\u505a\u5230\u200b\u6b63\u786e\u200b\u8df3\u8f6c\u200b\u5373\u53ef\u200b</p> <p>\u200b\u901a\u8fc7\u200b\u8c03\u8bd5\u5668\u200b\u626b\u63cf\u200b\u5185\u5b58\u200b\u548c\u200b\u89c2\u5bdf\u200b\u5bc4\u5b58\u5668\u200b\u53ef\u4ee5\u200b\u5f97\u51fa\u200b</p> <pre><code>trap.S\u200b\u89e3\u8bfb\u200b\n80001488 &lt;__am_asm_trap&gt;:\n80001488:   f7010113            addi    sp,sp,-144 //\u200b\u5728\u200b\u5185\u5b58\u200b\u4e2d\u200b\u5206\u914d\u200b\u6808\u5e27\u200b\n8000148c:   00112223            sw  ra,4(sp)       //\u200b\u628a\u200b\u5bc4\u5b58\u5668\u200b\u7684\u200b\u503c\u200b\u4f20\u9012\u200b\u5230\u200bsp\u200b\u6240\u6307\u200b\u7684\u200b\u5185\u5b58\u200b\u4e0a\u200b\u5b58\u50a8\u200b\n80001490:   00312623            sw  gp,12(sp)\n80001494:   00412823            sw  tp,16(sp)\n80001498:   00512a23            sw  t0,20(sp)\n8000149c:   00612c23            sw  t1,24(sp)\n800014a0:   00712e23            sw  t2,28(sp)\n800014a4:   02812023            sw  s0,32(sp)\n800014a8:   02912223            sw  s1,36(sp)\n800014ac:   02a12423            sw  a0,40(sp)\n800014b0:   02b12623            sw  a1,44(sp)\n800014b4:   02c12823            sw  a2,48(sp)\n800014b8:   02d12a23            sw  a3,52(sp)\n800014bc:   02e12c23            sw  a4,56(sp)\n800014c0:   02f12e23            sw  a5,60(sp)\n800014c4:   05012023            sw  a6,64(sp)\n800014c8:   05112223            sw  a7,68(sp)\n800014cc:   05212423            sw  s2,72(sp)\n800014d0:   05312623            sw  s3,76(sp)\n800014d4:   05412823            sw  s4,80(sp)\n800014d8:   05512a23            sw  s5,84(sp)\n800014dc:   05612c23            sw  s6,88(sp)\n800014e0:   05712e23            sw  s7,92(sp)\n800014e4:   07812023            sw  s8,96(sp)\n800014e8:   07912223            sw  s9,100(sp)\n800014ec:   07a12423            sw  s10,104(sp)\n800014f0:   07b12623            sw  s11,108(sp)\n800014f4:   07c12823            sw  t3,112(sp)\n800014f8:   07d12a23            sw  t4,116(sp)\n800014fc:   07e12c23            sw  t5,120(sp)\n80001500:   07f12e23            sw  t6,124(sp)\n80001504:   342022f3            csrr    t0,mcause   //\u200b\u628a\u200b\u5bc4\u5b58\u5668\u200bmcause\u200b\u7684\u200b\u503c\u200b\u8bfb\u5165\u200bt0\n80001508:   30002373            csrr    t1,mstatus  //\u200b\u628a\u200b\u5bc4\u5b58\u5668\u200bmstatus\u200b\u7684\u200b\u503c\u200b\u8bfb\u5165\u200bt1\n8000150c:   341023f3            csrr    t2,mepc     //\u200b\u628a\u200b\u5bc4\u5b58\u5668\u200bmepc\u200b\u7684\u200b\u503c\u200b\u8bfb\u5165\u200bt2\n80001510:   08512023            sw  t0,128(sp)      //\u200b\u5c06\u200b\u8fd9\u200b\u4e09\u8005\u200b\u4e5f\u200b\u5b58\u5165\u200b\u6808\u5e27\u200b\u4e2d\u200b\n80001514:   08612223            sw  t1,132(sp)\n80001518:   08712423            sw  t2,136(sp)\n8000151c:   00020537            lui a0,0x20\n80001520:   00a36333            or  t1,t1,a0\n80001524:   30031073            csrw    mstatus,t1\n80001528:   00010513            mv  a0,sp\n8000152c:   e65ff0ef            jal ra,80001390 &lt;__am_irq_handle&gt; //\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\u5c31\u662f\u200b\u8bfb\u200b\u8fd9\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u4ece\u200b\u5185\u5b58\u200b\u91cc\u200b\u8bfb\u200b\u7ed3\u6784\u200b\u4f53\u200b\n80001530:   08412303            lw  t1,132(sp)      //\u200b\u628a\u200b\u6808\u200b\u5e27\u200b132\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u503c\u200b\u5199\u5165\u200b\u5bc4\u5b58\u5668\u200bt1\n80001534:   08812383            lw  t2,136(sp)      //\u200b\u628a\u200b\u6808\u200b\u5e27\u200b136\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u503c\u200b\u5199\u5165\u200b\u5bc4\u5b58\u5668\u200bt2\n80001538:   30031073            csrw    mstatus,t1  //\u200b\u628a\u200b\u5bc4\u5b58\u5668\u200bt1\u200b\u7684\u200b\u503c\u200b\u5199\u5165\u200bmstatus\n8000153c:   34139073            csrw    mepc,t2     //\u200b\u628a\u200b\u5bc4\u5b58\u5668\u200bt2\u200b\u7684\u200b\u503c\u200b\u5199\u5165\u200bmepc\n80001540:   00412083            lw  ra,4(sp)        //\u200b\u6062\u590d\u200blw\n80001544:   00c12183            lw  gp,12(sp)\n80001548:   01012203            lw  tp,16(sp)\n8000154c:   01412283            lw  t0,20(sp)\n80001550:   01812303            lw  t1,24(sp)\n80001554:   01c12383            lw  t2,28(sp)\n80001558:   02012403            lw  s0,32(sp)\n8000155c:   02412483            lw  s1,36(sp)\n80001560:   02812503            lw  a0,40(sp)\n80001564:   02c12583            lw  a1,44(sp)\n80001568:   03012603            lw  a2,48(sp)\n8000156c:   03412683            lw  a3,52(sp)\n80001570:   03812703            lw  a4,56(sp)\n80001574:   03c12783            lw  a5,60(sp)\n80001578:   04012803            lw  a6,64(sp)\n8000157c:   04412883            lw  a7,68(sp)\n80001580:   04812903            lw  s2,72(sp)\n80001584:   04c12983            lw  s3,76(sp)\n80001588:   05012a03            lw  s4,80(sp)\n8000158c:   05412a83            lw  s5,84(sp)\n80001590:   05812b03            lw  s6,88(sp)\n80001594:   05c12b83            lw  s7,92(sp)\n80001598:   06012c03            lw  s8,96(sp)\n8000159c:   06412c83            lw  s9,100(sp)\n800015a0:   06812d03            lw  s10,104(sp)\n800015a4:   06c12d83            lw  s11,108(sp)\n800015a8:   07012e03            lw  t3,112(sp)\n800015ac:   07412e83            lw  t4,116(sp)\n800015b0:   07812f03            lw  t5,120(sp)\n800015b4:   07c12f83            lw  t6,124(sp)\n800015b8:   09010113            addi    sp,sp,144\n800015bc:   30200073            mret\n800015c0:   0000                    .2byte  0x0\n    ...\n</code></pre> <p></p> <pre><code>mstatus\u200b\u7684\u200b\u72b6\u6001\u200b\n    MPP       MPIE\n    12 11     7\n000 1  1  000 0   000 0000 =0x1800\n              1   000 0000 =0x80\n110&lt;&lt;11\n110 000 0000 0000\n</code></pre> <p>\u200b\u53c8\u200b\u53c8\u200b\u53c8\u200b\u88ab\u200b\u5751\u200b\u4e86\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4e0d\u591f\u200b\u5b8c\u6574\u200b</p> <p>/home/wangxin/ysyx-workbench/abstract-machine/am/src/riscv/nemu/cte.c</p> <pre><code>Context* __am_irq_handle(Context *c) {\n  if (user_handler) {\n    Event ev = {0};\n    switch (c-&gt;mcause) {\n      case 0xb: //11 Environment call from M-mode\n        if(c-&gt;GPR1==-1){\n          ev.event=EVENT_YIELD;\n        }else{ \n          //\u200b\u5178\u4e2d\u5178\u200b\u4e4b\u200bpa\u200b\u540e\u8fb9\u200b\u7684\u200b\u90e8\u5206\u200b\u88ab\u200bpa\u200b\u524d\u9762\u200b\u7684\u200b\u5b9e\u73b0\u200b\u5751\u60e8\u200b\uff0c\u200b\u540e\u8fb9\u200b\u8981\u6c42\u200b\u4e3a\u200b\u8bc6\u522b\u200b\u7684\u200b\u5f02\u5e38\u200b\u65f6\u95f4\u200b\u7f16\u53f7\u200b\u4e3a\u200b4\uff0c\u200b\u4f46\u662f\u200b\u7ecf\u8fc7\u200b\u68c0\u67e5\u200b\u53d1\u73b0\u200b\n          //\u200b\u81ea\u5df1\u200b\u7684\u200b\u8f93\u51fa\u200b\u4e3a\u200b0\uff0c\u200b\u51e0\u756a\u200b\u5b9a\u4f4d\u200b\u5b9a\u4f4d\u200b\u5230\u200b\u8fd9\u91cc\u200b\u7ed9\u200b\u4e86\u200b0\uff0c\u200b\u7167\u7406\u8bf4\u200b\u4f20\u5165\u200b\u4e0d\u200b\u5bf9\u200b\u7684\u200b\u6570\u636e\u200b\u90fd\u200b\u5e94\u8be5\u200b\u7ed9\u200b0\n          ev.event=EVENT_ERROR;\n        }\n        break;\n      default: ev.event = EVENT_ERROR; break;\n    }\n\n    c = user_handler(ev, c);\n    assert(c != NULL);\n  }\n\n  return c;\n}\n</code></pre> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u6e05\u96f6\u200b?</p> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u9700\u8981\u200b\u5c06\u200b <code>[VirtAddr + FileSiz, VirtAddr + MemSiz)</code> \u200b\u5bf9\u5e94\u200b\u7684\u200b\u7269\u7406\u200b\u533a\u95f4\u200b\u6e05\u96f6\u200b?</p> <p>\u200b\u4f8b\u5982\u200b</p> <pre><code>Section Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 0]                   NULL            00000000 000000 000000 00      0   0  0\n  [ 1] .text             PROGBITS        830000b4 0000b4 0050d0 00  AX  0   0  4\n  [ 2] .rodata           PROGBITS        83005184 005184 000244 00   A  0   0  4\n  [ 3] .data             PROGBITS        830063c8 0053c8 000830 00  WA  0   0  8\n  [ 4] .sdata            PROGBITS        83006bf8 005bf8 000068 00  WA  0   0  4\n  [ 5] .sbss             NOBITS          83006c60 005c60 000014 00  WA  0   0  4\n  [ 6] .bss              NOBITS          83006c74 005c60 000028 00  WA  0   0  4\n  [ 7] .comment          PROGBITS        00000000 005c60 00002b 01  MS  0   0  1\n  [ 8] .riscv.attributes RISCV_ATTRIBUTE 00000000 005c8b 00001f 00      0   0  1\n  [ 9] .symtab           SYMTAB          00000000 005cac 000f10 10     10 116  4\n  [10] .strtab           STRTAB          00000000 006bbc 00071b 00      0   0  1\n  [11] .shstrtab         STRTAB          00000000 0072d7 00005c 00      0   0  1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  D (mbind), p (processor specific)\n\nThere are no section groups in this file.\n\nProgram Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  RISCV_ATTRIBUT 0x005c8b 0x00000000 0x00000000 0x0001f 0x00000 R   0x1\n  LOAD           0x000000 0x83000000 0x83000000 0x053c8 0x053c8 R E 0x1000\n  LOAD           0x0053c8 0x830063c8 0x830063c8 0x00898 0x008d4 RW  0x1000\n  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10\n</code></pre> <p>\u200b\u6458\u53d6\u200b\u91cd\u70b9\u200b\u4fe1\u606f\u200b</p> <pre><code>Section Headers:\n  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\n  [ 6] .bss              NOBITS          83006c74 005c60 000028 00  WA  0   0  4\n\n  Program Headers:\n  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n  LOAD           0x000000 0x83000000 0x83000000 0x053c8 0x053c8 R E 0x1000\n  LOAD           0x0053c8 0x830063c8 0x830063c8 0x00898 0x008d4 RW  0x1000\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u8ba1\u7b97\u200b\u5f97\u77e5\u200b.bss\u200b\u7684\u200baddr\u200b\u5bf9\u5e94\u200b\uff1a83006c74=0x830063c8\uff08VirtAddr \uff09+ 0x00898</p> <p>(size)000028=0x008d4(MemSiz)-(0x00898)FileSiz</p> <p>\u200b\u56e0\u4e3a\u200b\u53ef\u4ee5\u200b\u5f97\u51fa\u200b[VirtAddr + FileSiz, VirtAddr + MemSiz)\u200b\u5bf9\u5e94\u200b\u7684\u200b\u7269\u7406\u200b\u533a\u95f4\u200b\u5373\u200b\u4e3a\u200b.bss\u200b\u6bb5\u200b</p> <p>\u200b\u67e5\u9605\u200b\u624b\u518c\u200b\u5f97\u77e5\u200b   .bss This section holds uninitialized data that contributes to the</p> <p>\u200b    program's memory image.  By definition, the system  initializes </p> <p>\u200b    the data with zeros when the program begins to run.  This section is </p> <p>\u200b    *of type SHT_NOBITS.  The attribute types are SHF_ALLOC and SHF_WRITE.</p> <p>mepc\u200b\u7684\u200b+4  \u2018/home/wangxin/ysyx-workbench/abstract-machine/am/src/riscv/nemu/cte.c\u2018</p> <p>\u200b\u91cd\u200b\u56de\u987e\u200b\uff1a</p> <p>\u200b\u4ee3\u7801\u200b\u5c06\u4f1a\u200b\u4e00\u8def\u200b\u8fd4\u56de\u200b\u5230\u200b<code>trap.S</code>\u200b\u7684\u200b<code>__am_asm_trap()</code>\u200b\u4e2d\u200b, \u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u4e8b\u60c5\u200b\u5c31\u662f\u200b\u6062\u590d\u7a0b\u5e8f\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b. <code>__am_asm_trap()</code>\u200b\u5c06\u200b\u6839\u636e\u200b\u4e4b\u524d\u200b\u4fdd\u5b58\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u5185\u5bb9\u200b, \u200b\u6062\u590d\u7a0b\u5e8f\u200b\u7684\u200b\u72b6\u6001\u200b, \u200b\u6700\u540e\u200b\u6267\u884c\u200b\"\u200b\u5f02\u5e38\u200b\u8fd4\u56de\u200b\u6307\u4ee4\u200b\"\u200b\u8fd4\u56de\u200b\u5230\u200b\u7a0b\u5e8f\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u4e4b\u524d\u200b\u7684\u200b\u72b6\u6001\u200b.</p> <p>\u200b\u4e0d\u8fc7\u200b\u8fd9\u91cc\u200b\u9700\u8981\u200b\u6ce8\u610f\u200b\u4e4b\u524d\u200b\u81ea\u9677\u200b\u6307\u4ee4\u200b\u4fdd\u5b58\u200b\u7684\u200bPC, \u200b\u5bf9\u4e8e\u200bx86\u200b\u7684\u200b<code>int</code>\u200b\u6307\u4ee4\u200b, \u200b\u4fdd\u5b58\u200b\u7684\u200b\u662f\u200b\u6307\u5411\u200b\u5176\u4e0b\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b\u7684\u200bPC, \u200b\u8fd9\u200b\u6709\u70b9\u50cf\u200b\u51fd\u6570\u8c03\u7528\u200b; \u200b\u800c\u200b\u5bf9\u4e8e\u200bmips32\u200b\u7684\u200b<code>syscall</code>\u200b\u548c\u200briscv32\u200b\u7684\u200b<code>ecall</code>, \u200b\u4fdd\u5b58\u200b\u7684\u200b\u662f\u200b\u81ea\u9677\u200b\u6307\u4ee4\u200b\u7684\u200bPC, \u200b\u56e0\u6b64\u200b\u8f6f\u4ef6\u200b\u9700\u8981\u200b\u5728\u200b\u9002\u5f53\u200b\u7684\u200b\u5730\u65b9\u200b\u5bf9\u200b\u4fdd\u5b58\u200b\u7684\u200bPC\u200b\u52a0\u4e0a\u200b4, \u200b\u4f7f\u5f97\u200b\u5c06\u6765\u200b\u8fd4\u56de\u200b\u5230\u200b\u81ea\u9677\u200b\u6307\u4ee4\u200b\u7684\u200b\u4e0b\u200b\u4e00\u6761\u200b\u6307\u4ee4\u200b.</p> <p>\u200b\u4ece\u52a0\u200b4\u200b\u64cd\u4f5c\u200b\u770b\u200bCISC\u200b\u548c\u200bRISC</p> <p>\u200b\u4e8b\u5b9e\u4e0a\u200b, \u200b\u81ea\u9677\u200b\u53ea\u662f\u200b\u5176\u4e2d\u200b\u4e00\u79cd\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b. \u200b\u6709\u200b\u4e00\u79cd\u200b\u6545\u969c\u200b\u7c7b\u200b\u5f02\u5e38\u200b, \u200b\u5b83\u4eec\u200b\u8fd4\u56de\u200b\u7684\u200bPC\u200b\u548c\u200b\u89e6\u53d1\u200b\u5f02\u5e38\u200b\u7684\u200bPC\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b, \u200b\u4f8b\u5982\u200b\u7f3a\u9875\u200b\u5f02\u5e38\u200b, \u200b\u5728\u200b\u7cfb\u7edf\u200b\u5c06\u200b\u6545\u969c\u200b\u6392\u9664\u200b\u540e\u200b, \u200b\u5c06\u4f1a\u200b\u91cd\u65b0\u200b\u6267\u884c\u200b\u76f8\u540c\u200b\u7684\u200b\u6307\u4ee4\u200b\u8fdb\u884c\u200b\u91cd\u8bd5\u200b, \u200b\u56e0\u6b64\u200b\u5f02\u5e38\u200b\u8fd4\u56de\u200b\u7684\u200bPC\u200b\u65e0\u9700\u200b\u52a0\u200b4. \u200b\u6240\u4ee5\u200b\u6839\u636e\u200b\u5f02\u5e38\u200b\u7c7b\u578b\u200b\u7684\u200b\u4e0d\u540c\u200b, \u200b\u6709\u65f6\u5019\u200b\u9700\u8981\u200b\u52a0\u200b4, \u200b\u6709\u65f6\u5019\u200b\u5219\u200b\u4e0d\u200b\u9700\u8981\u200b\u52a0\u200b.</p> <p>\u200b\u8fd9\u65f6\u5019\u200b, \u200b\u6211\u4eec\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u8fd9\u6837\u200b\u7684\u200b\u4e00\u4e2a\u200b\u95ee\u9898\u200b\u4e86\u200b: \u200b\u51b3\u5b9a\u200b\u8981\u200b\u4e0d\u8981\u200b\u52a0\u200b4\u200b\u7684\u200b, \u200b\u662f\u200b\u786c\u4ef6\u200b\u8fd8\u662f\u200b\u8f6f\u4ef6\u200b\u5462\u200b? CISC\u200b\u548c\u200bRISC\u200b\u7684\u200b\u505a\u6cd5\u200b\u6b63\u597d\u200b\u76f8\u53cd\u200b, CISC\u200b\u90fd\u200b\u4ea4\u7ed9\u200b\u786c\u4ef6\u200b\u6765\u200b\u505a\u200b, \u200b\u800c\u200bRISC\u200b\u5219\u200b\u4ea4\u7ed9\u200b\u8f6f\u4ef6\u200b\u6765\u200b\u505a\u200b. \u200b\u601d\u8003\u200b\u4e00\u4e0b\u200b, \u200b\u8fd9\u200b\u4e24\u79cd\u200b\u65b9\u6848\u200b\u5404\u6709\u200b\u4ec0\u4e48\u200b\u53d6\u820d\u200b? \u200b\u4f60\u200b\u8ba4\u4e3a\u200b\u54ea\u79cd\u200b\u66f4\u200b\u5408\u7406\u200b\u5462\u200b? \u200b\u4e3a\u4ec0\u4e48\u200b?</p> <p>\u200b\u6240\u4ee5\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5728\u200b\u8f6f\u4ef6\u200b\u4e0a\u200b\u5b9e\u73b0\u200b+4</p> <p>\u200b\u6240\u4ee5\u200b\u4e3a\u4ec0\u4e48\u200bdifftest\u200b\u68c0\u67e5\u200b\u4e0d\u200b\u51fa\u200b\u8fd9\u4e2a\u200b\u9519\u8bef\u200b\u4e5f\u200b\u663e\u800c\u6613\u89c1\u200b\u4e86\u200b\uff1a</p> <p>\u200b\u56e0\u4e3a\u200b\u81ea\u9677\u200b\u7684\u200b\u8fd4\u56de\u200b\u76ee\u6807\u200b\u4f4d\u7f6e\u200b\u662f\u200b\u7531\u200b\u8f6f\u4ef6\u200b\u51b3\u5b9a\u200b\u7684\u200b\uff0c\u200b\u8f6f\u4ef6\u200b\u4e2d\u200b\u6ca1\u6709\u200b\u8fd9\u4e2a\u200b\u884c\u4e3a\u200b\uff0c\u200b\u81ea\u7136\u200b\u4e5f\u200b\u7f16\u8bd1\u200b\u4e0d\u200b\u51fa\u6765\u200b\u8fd9\u4e2a\u200bmepc+4\u200b\u6307\u4ee4\u200b\uff0c\u200b\u56e0\u800c\u200bdiff\u200b\u884c\u4e3a\u200b\u4e5f\u200b\u65e0\u6cd5\u200b\u5bf9\u6bd4\u200b</p> <p>\u200b\u7cfb\u7edf\u200b\u8c03\u7528\u200b\uff0c\u200b\u753b\u51fa\u200b\u72b6\u6001\u200b\u8f6c\u79fb\u200b\u72b6\u6001\u673a\u200b\u3002</p> <pre><code>init_irq -&gt; cte_init  -&gt;.......-&gt; naive_uload -&gt; dummy -&gt; _syscall_ -&gt; _am_asm_trap\n                                                                             |\n  do_event(put(\"C\")) &lt;- (EVENT_SYSCALL)  _am_irq_handle   &lt;- _am_asm_trap  &lt;-+\n      |\n      + -&gt; do_syscall -&gt; SYS_yeild -&gt; yeild() -&gt; ....put(\"Y\") ....... -&gt; return^n\n                                                                            |\n         halt(gpr1) &lt;- SYS_exit &lt;- do_syscall   &lt;-  ......    &lt;- gpr1=0 &lt;\u2014  +\n</code></pre>"},{"location":"src/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7%E8%AF%BB%E5%90%8E%E6%84%9F/","title":"\u63d0\u95ee\u200b\u7684\u200b\u667a\u6167\u200b\u8bfb\u540e\u611f","text":""},{"location":"src/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7%E8%AF%BB%E5%90%8E%E6%84%9F/#_2","title":"\u5982\u4f55\u200b\u63d0\u95ee","text":"<p>\u200b\u9996\u5148\u200b\u611f\u8c22\u200b\u901a\u8fc7\u200b\u4e00\u751f\u200b\u4e00\u82af\u200b\u6e20\u9053\u200b\u7ed9\u200b\u6211\u200b\u5f00\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u4e16\u754c\u200b\u5927\u95e8\u200b\uff0c\u200b\u4ece\u800c\u200b\u8ba9\u200b\u6211\u200b\u610f\u8bc6\u200b\u5230\u200b\u4ece\u524d\u200b\u7684\u200b\u81ea\u5df1\u200b\u6709\u200b\u591a\u4e48\u200b\u611a\u8822\u200b\u3002</p>"},{"location":"src/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7%E8%AF%BB%E5%90%8E%E6%84%9F/#_3","title":"\u597d\u200b\u7684\u200b\u63d0\u95ee","text":"<p>\u200b\u663e\u7136\u200b\uff0c\u200b\u5728\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4e00\u4e9b\u200b\u5de5\u5177\u200b\u6216\u8005\u200b\u8f6f\u4ef6\u200b\u65f6\u200b\u603b\u4f1a\u200b\u9047\u5230\u200b\u4e00\u4e9b\u200b\u95ee\u9898\u200b\uff0c\u200b\u9047\u5230\u200b\u8fd9\u4e9b\u200b\u95ee\u9898\u200b\u65f6\u200b\u9700\u8981\u200b\u7b54\u6848\u200b\u3002\u200b\u76f4\u63a5\u200b\u8be2\u95ee\u200b\u5f00\u53d1\u8005\u200b\u663e\u7136\u200b\u4e0d\u662f\u200b\u806a\u660e\u200b\u7684\u200b\u505a\u6cd5\u200b\uff0c\u200b\u53cd\u4e4b\u200b\uff0c\u200b\u9047\u5230\u200b\u8fd9\u4e9b\u200b\u95ee\u9898\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u5148\u95ee\u200b\u81ea\u5df1\u200b\uff1a\uff08\u200b\u5f00\u53d1\u8005\u200b\u6307\u200b\u4e00\u7c7b\u200b\u4eba\u200b\uff09</p> <ul> <li>\u200b\u4f60\u200b\u662f\u5426\u200b\u5df2\u7ecf\u200b\u5728\u200b\u8bba\u575b\u200b\u4e0e\u200b\u641c\u7d22\u5f15\u64ce\u200b\u4e0a\u200b\u5bfb\u627e\u200b\u8be5\u200b\u95ee\u9898\u200b\u7b54\u6848\u200b\uff1f\uff08\u200b\u8fd8\u6709\u200bchatgpt(chatgpt\u200b\u4e0d\u200b\u4e00\u5b9a\u200b\u6b63\u786e\u200b)\uff09</li> <li>\u200b\u4f60\u200b\u662f\u5426\u200b\u5df2\u7ecf\u200b\u5c1d\u8bd5\u200b\u9605\u8bfb\u200b\u5de5\u5177\u200b\u624b\u518c\u200b\u4ee5\u200b\u5bfb\u627e\u200b\u7b54\u6848\u200b\uff1f</li> <li>\u200b\u4f60\u200b\u662f\u5426\u200b\u81ea\u5df1\u200b\u68c0\u67e5\u200b\u8fc7\u200b\u6216\u8005\u200b\u5b9e\u9a8c\u200b\u8fc7\u200b\u4e00\u4e9b\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff1f</li> <li>\u200b\u4f60\u200b\u662f\u5426\u200b\u80fd\u200b\u5bf9\u200b\u95ee\u9898\u200b\u5145\u5206\u200b\u7684\u200b\u63cf\u8ff0\u200b\u51fa\u6765\u200b\uff1f</li> </ul> <p>\u200b\u5de5\u5177\u200b\u5f00\u53d1\u8005\u200b\u5e76\u200b\u4e0d\u200b\u62e5\u6709\u200b\u5145\u5206\u200b\u7684\u200b\u65f6\u95f4\u200b\u4e5f\u200b\u6ca1\u6709\u200b\u4e49\u52a1\u200b\u53bb\u200b\u89e3\u51b3\u200b\u6bcf\u4e2a\u200b\u7528\u6237\u200b\u6240\u200b\u63d0\u51fa\u200b\u7684\u200b\u95ee\u9898\u200b\uff0c\u200b\u518d\u6b21\u200b\u95ee\u95ee\u200b\u81ea\u5df1\u200b\uff1a</p> <ul> <li>\u200b\u4f60\u200b\u60f3\u200b\u8ba9\u200b\u4f60\u200b\u7684\u200b\u56de\u7b54\u200b\u88ab\u200b\u5f00\u53d1\u8005\u200b\u56de\u590d\u200b\u4e48\u200b\uff1f</li> <li>\u200b\u4f60\u200b\u60f3\u200b\u534f\u52a9\u200b\u5f00\u53d1\u8005\u200b\u6784\u5efa\u200b\u66f4\u200b\u4f18\u79c0\u200b\u7684\u200b\u5de5\u5177\u200b\u5417\u200b\uff1f</li> <li>\u200b\u4f60\u200b\u60f3\u200b\u5e2e\u52a9\u200b\u5176\u4ed6\u200b\u4e5f\u200b\u9047\u5230\u200b\u76f8\u540c\u200b\u95ee\u9898\u200b\u7684\u200b\u4eba\u200b\u5417\u200b</li> </ul> <p>\u200b\u4f60\u200b\u7684\u200b\u56de\u7b54\u200b\u4e00\u5b9a\u200b\u662f\u200b\u60f3\u200b\u3002\u200b\u600e\u4e48\u200b\u505a\u200b\uff1f</p> <ul> <li>\u200b\u793c\u8c8c\u200b\u7684\u200b\u8fdb\u884c\u200b\u63d0\u95ee\u200b\u3002\u200b\u4f8b\u5982\u200b\u8bf7\u95ee\u200b...\u200b\u8c22\u8c22\u200b\uff0c\u200b\u65e0\u8bba\u200b\u522b\u4eba\u200b\u662f\u5426\u200b\u89e3\u51b3\u200b\u4e86\u200b\u4f60\u200b\u7684\u200b\u95ee\u9898\u200b\u90fd\u200b\u8981\u200b\u8868\u793a\u200b\u51fa\u200b\u8c22\u610f\u200b\u3002</li> <li>\u200b\u5b66\u4f1a\u200b\u5982\u4f55\u200b\u63cf\u8ff0\u200b\u95ee\u9898\u200b\u3002\u200b\u63cf\u8ff0\u200b\u95ee\u9898\u200b\u524d\u200b\u4e5f\u200b\u8981\u200b\u5bf9\u200b\u81ea\u5df1\u200b\u63d0\u95ee\u200b\u81ea\u5df1\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u5426\u200b\u66f4\u200b\u5145\u5206\u200b\u8ba9\u200b\u5f00\u53d1\u8005\u200b\u66f4\u5feb\u200b\u7684\u200b\u5b9a\u4f4d\u95ee\u9898\u200b\uff0c\u200b\u907f\u514d\u6d6a\u8d39\u200b\u53cc\u65b9\u200b\u7684\u200b\u65f6\u95f4\u200b\u5728\u200b\u6c9f\u901a\u200b\u5b9a\u4f4d\u95ee\u9898\u200b\u4e0a\u200b\u3002</li> <li>\u200b\u4e00\u4e9b\u200b\u4e0d\u200b\u793c\u8c8c\u200b\u7684\u200b\u63d0\u95ee\u200b\u884c\u4e3a\u200b\u662f\u200b\u7981\u6b62\u200b\u3002\u200b\u5305\u62ec\u200b\u4f46\u200b\u4e0d\u200b\u9650\u4e8e\u200b\uff1a\u200b\u624b\u673a\u200b\u62cd\u5c4f\u200b\uff08\u200b\u8bf7\u200b\u9009\u62e9\u200b\u4f60\u200b\u7684\u200b\u62cd\u5c4f\u200b\u5bfc\u5e08\u200b.jpg\uff09\uff0c\u200b\u4e0d\u200b\u8bf4\u660e\u200b\u95ee\u9898\u200b\u76f4\u63a5\u200b\u7ed9\u200b\u5bf9\u65b9\u200b\u7529\u200b\u4e00\u5927\u5806\u200b\u4e0d\u660e\u200b\u6240\u4ee5\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5e0c\u671b\u200b\u522b\u4eba\u200b\u5e2e\u200b\u81ea\u5df1\u200b\u5199\u200b\u4ee3\u7801\u200b\uff08\u200b\u4f60\u200b\u81ea\u5df1\u200b\u5199\u200b\u7684\u200b\u5c31\u662f\u200b\u5c4e\u200b\u5c71\u200b\u8fd8\u200b\u5e0c\u671b\u200b\u522b\u4eba\u200b\u5e2e\u200b\u4f60\u200bdebug\uff09</li> <li>\u200b\u95ee\u200b\u95ee\u9898\u200b\u524d\u200b\u8bf7\u200b\u544a\u8bc9\u200b\u5f00\u53d1\u8005\u200b\u81ea\u5df1\u200b\u5df2\u7ecf\u200b\u505a\u8fc7\u200bRTFM\u200b\u548c\u200bSTFW\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u4f46\u662f\u200b\u4ecd\u200b\u672a\u627e\u5230\u200b\u89e3\u51b3\u65b9\u6848\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u5c06\u200b\u4e0a\u8ff0\u200b\u63d0\u95ee\u200b\u7684\u200b\u6ce8\u610f\u4e8b\u9879\u200b\u70c2\u719f\u200b\u4e8e\u5fc3\u200b\uff0c\u200b\u90a3\u4e48\u200b\u8bf7\u200b\u5f00\u59cb\u200b\u63d0\u95ee\u200b</li> </ul> <p>\u200b\u5c3d\u91cf\u200b\u901a\u8fc7\u200b\u516c\u5f00\u200b\u8bba\u575b\u200b\u548c\u200b\u516c\u5f00\u200b\u8ba8\u8bba\u7ec4\u200b\u63d0\u95ee\u200b\uff0c\u200b\u4e0d\u8981\u200b\u5bb3\u6015\u200b\u7f9e\u6da9\u200b\uff0c\u200b\u4e07\u4e00\u200b\u522b\u4eba\u200b\u9047\u5230\u200b\u7684\u200b\u95ee\u9898\u200b\u548c\u200b\u4f60\u200b\u4e00\u6837\u200b\u5462\u200b\u3002</p>"},{"location":"src/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7%E8%AF%BB%E5%90%8E%E6%84%9F/#stfwrtfm","title":"\u901a\u8fc7\u200bSTFW\u200b\u548c\u200bRTFM\u200b\u72ec\u7acb\u200b\u89e3\u51b3\u95ee\u9898","text":"<p>\u200b\u5728\u200b\u95ee\u200b\u95ee\u9898\u200b\u65f6\u200b\uff0c\u200b\u4f60\u200b\u4e00\u5b9a\u200b\u4e0d\u60f3\u200b\u6536\u5230\u200bRTFM\u200b\u548c\u200bSTFM\u200b\u7684\u200b\u56de\u7b54\u200b\u5427\u200b\u3002</p> <p>\u200b\u90a3\u4e48\u200b\u8bf7\u200b\uff0c\u200b\u5728\u200b\u95ee\u200b\u95ee\u9898\u200b\u524d\u200b\u4ed4\u7ec6\u9605\u8bfb\u200b\u76f8\u5173\u200b\u624b\u518c\u200b\uff0c\u200b\u76f8\u5173\u200b\u6559\u7a0b\u200b\uff0c\u200b\u54ea\u91cc\u200b\u4e0d\u200b\u61c2\u200b\u641c\u7d22\u200b\u54ea\u91cc\u200b\u9605\u8bfb\u200b\u54ea\u91cc\u200b\u3002\u200b\u5b8c\u5584\u200b\u81ea\u5df1\u200b\u77e5\u8bc6\u7ed3\u6784\u200b\uff0c\u200b\u62e5\u6709\u200b\u5145\u5206\u200b\u7684\u200b\u77e5\u8bc6\u7ed3\u6784\u200b\u624d\u80fd\u200b\u66f4\u200b\u6e05\u6670\u200b\u7684\u200b\u63cf\u8ff0\u200b\u51fa\u200b\u95ee\u9898\u200b\u3002</p> <p>\u200b\u81ea\u5df1\u200b\u627e\u5230\u200b\u7684\u200b\u7b54\u6848\u200b\u901a\u5e38\u200b\u6bd4\u200b\u522b\u4eba\u200b\u76f4\u63a5\u200b\u5582\u7ed9\u200b\u4f60\u200b\u66f4\u200b\u4ee4\u4eba\u200b\u5370\u8c61\u200b\u6df1\u523b\u200b\uff0c\u200b\u81ea\u5df1\u200b\u72ec\u7acb\u81ea\u4e3b\u200b\u89e3\u51b3\u95ee\u9898\u200b\u4e0d\u200b\u4f46\u662f\u200b\u66f4\u52a0\u200b\u719f\u8bb0\u200b\u8fd9\u4e2a\u200b\u5730\u65b9\u200b\u7684\u200b\u77e5\u8bc6\u70b9\u200b\uff0c\u200b\u66f4\u662f\u200b\u4e00\u4e2a\u200b\u953b\u70bc\u200b\u3002</p>"},{"location":"src/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7%E8%AF%BB%E5%90%8E%E6%84%9F/#_4","title":"\u5982\u4f55\u200b\u56de\u7b54","text":"<ul> <li>\u200b\u6388\u4eba\u200b\u4ee5\u9c7c\u200b\u4e0d\u5982\u200b\u6388\u4eba\u4ee5\u6e14\u200b</li> <li>\u200b\u5bf9\u5f85\u200b\u840c\u65b0\u200b\u53cb\u5584\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u8981\u200b\u8ba9\u200b\u4ed6\u4eec\u200b\u610f\u8bc6\u200b\u5230\u200b\u5982\u4f55\u200b\u6b63\u786e\u200b\u63d0\u95ee\u200b\uff08\u200b\u8c01\u200b\u4e0d\u662f\u200b\u4ece\u840c\u200b\u65b0\u200b\u8d70\u200b\u8fc7\u6765\u200b\u7684\u200b\uff09</li> <li>\u200b\u4e0d\u8981\u200b\u778e\u6307\u6325\u200b\uff0c\u200b\u522b\u4eba\u200b\u7684\u200b\u95ee\u9898\u200b\u4f60\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u662f\u5426\u200b\u80fd\u200b\u89e3\u51b3\u200b\u4e00\u5b9a\u200b\u8981\u200b\u6ce8\u660e\u200b\uff0c\u200b\u5426\u5219\u200b\u8fd9\u4f1a\u200b\u8ba9\u200b\u522b\u4eba\u200b\u8d70\u5411\u200b\u6b67\u8def\u200b</li> <li>\u200b\u5f15\u5bfc\u6027\u200b\u56de\u7b54\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5f15\u5bfc\u200b\u8ba9\u200b\u63d0\u95ee\u8005\u200b\u81ea\u5df1\u200b\u627e\u200b\u7b54\u6848\u200b</li> </ul>"},{"location":"src/%E6%AF%8F%E5%A4%A9%E8%AE%B0%E4%B8%80%E4%B8%AA%E7%A5%9E%E7%BA%A7%E5%A5%BD%E7%94%A8%E7%9A%84shell%E5%91%BD%E4%BB%A4/","title":"\u6bcf\u5929\u200b\u8bb0\u200b\u4e00\u4e2a\u200b\u795e\u7ea7\u200b\u597d\u200b\u7528\u200b\u7684\u200bshell\u200b\u547d\u4ee4","text":"<pre><code>grep -r \"halt_ret\" --include=\"*.h\"\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u547d\u4ee4\u200b\u5c06\u200b\u5728\u200b\u5f53\u524d\u76ee\u5f55\u200b\u53ca\u5176\u200b\u5b50\u76ee\u5f55\u200b\u4e2d\u200b\u9012\u5f52\u200b\u641c\u7d22\u200b\u6240\u6709\u200b\u4ee5\u200b<code>.h</code>\u200b\u4e3a\u200b\u540e\u7f00\u200b\u7684\u200b\u6587\u4ef6\u200b\uff0c\u200b\u5e76\u200b\u8f93\u51fa\u200b\u5305\u542b\u200b\u641c\u7d22\u200b\u6587\u5b57\u200b\u7684\u200b\u884c\u200b\u3002</p> <pre><code>make 2&gt;&amp;1 | tee a.txt\n</code></pre> <p>\u200b\u5c06\u200b\u5185\u5bb9\u200b\u8f93\u51fa\u200b\u5230\u200b\u6587\u672c\u200b\u4e2d\u200b</p> <pre><code>cat /etc/environment\n</code></pre> <p>\u200b\u67e5\u770b\u200b\u73af\u5883\u53d8\u91cf\u200b</p> <pre><code>make ** -nB\n</code></pre> <p>\u200b\u8f93\u51fa\u200bmake\u200b\u7f16\u8bd1\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u4e0d\u200b\u6267\u884c\u200b</p> <pre><code>tar -cvf npc.tar npc/\n</code></pre> <p>\u200b\u538b\u7f29\u200bnpc\u200b\u6240\u6709\u200b\u7684\u200b\u6587\u4ef6\u200b\u5230\u200bnpc.tar\u200b\u4e2d\u200b</p> <pre><code>bear -- make ** \n</code></pre> <p>\u200b\u751f\u6210\u200bcompile_commands.json</p> <pre><code>tree\n</code></pre> <p>\u200b\u4e0d\u7528\u200b\u591a\u200b\u8bf4\u200b\uff0c\u200b\u795e\u4e2d\u795e\u200b</p> <pre><code>riscv64-linux-gnu-gcc -S -o syscall.s syscall.c\n</code></pre> <p>\u200b\u5c06\u200bc\u200b\u8bed\u8a00\u200b\u4ee3\u7801\u751f\u6210\u200b\u6c47\u7f16\u200b</p> <p>c\u200b\u8bed\u8a00\u200b\u5c0f\u200b\u6280\u5de7\u200b</p> <pre><code>(void)!+\u200b\u51fd\u6570\u200b //(void)!\u200b\u5c4f\u853d\u200b\u7f16\u8bd1\u5668\u200b\u7684\u200bWunused-result\u200b\u8b66\u544a\u200b\n</code></pre>"},{"location":"src/%E6%B7%B7%E4%B9%B1%E7%9A%84%E6%8C%87%E9%92%88%E8%A7%A3%E8%AF%BB/","title":"\u6df7\u4e71\u200b\u7684\u200b\u6307\u9488\u200b\u89e3\u8bfb","text":"<p>\u200b\u6536\u96c6\u200b\u6848\u4f8b\u200b\uff0c\u200b\u4e71\u4e03\u516b\u7cdf\u200b\u7684\u200b\u6307\u9488\u200b\u8f6c\u6362\u200b</p> <p>\u200b\u6bd4\u5982\u200b\u8fd9\u200b\u6bb5\u200b\u4ee3\u7801\u200b</p> <p>\u200b\u5176\u5b9e\u200b\uff08char *\uff09\u200b\u7c7b\u578b\u200b\uff0c\u200b\u8868\u660e\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\u7c7b\u578b\u200b\uff0c\u200b\u628a\u200bend\u200b\u7684\u200b\u5730\u5740\u200b\u5b58\u5728\u200baddr\u200b\u91cc\u200b</p> <p>\u200b\u518d\u200b\u628a\u200baddr\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b(void *)\u200b\u7c7b\u578b\u200b</p> <p>\u200b\u5730\u5740\u200b\uff08\u200b\u4e0d\u662f\u200b\u503c\u200b\uff09+increment</p> <pre><code>void *_sbrk(intptr_t increment) {\nstatic char *addr=&amp;end;\n_syscall_(SYS_brk,increment,0,0);\nvoid *old_addr=addr;\naddr+=increment;\nreturn old_addr;\n}\n</code></pre> <p>\u200b\u4f20\u5165\u200b\u4e00\u4e2a\u200bbuf\u200b\u53d8\u91cf\u200b\uff0c\u200b\u7c7b\u578b\u200b\u662f\u200b(void *)\uff0c\u200b\u5b58\u200b\u7684\u200b\u4e1c\u897f\u200b\u662f\u200b\u5730\u5740\u200b</p> <p>\u200b\u8f6c\u6362\u6210\u200b(intptr_t)\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b58\u200b\u7684\u200b\u4e1c\u897f\u200b\u4ecd\u7136\u200b\u662f\u200b\u5730\u5740\u200b</p> <p>\u200b\u60f3\u8981\u200b\u83b7\u5f97\u200b\u5f53\u4e2d\u200b\u7684\u200b\u503c\u200b\u9700\u8981\u200b\u89e3\u200b\u5f15\u7528\u200b\uff0c*buf\u200b\u6765\u200b\u83b7\u5f97\u200b\u662f\u200b\u4ec0\u4e48\u200b\u503c\u200b</p> <pre><code>int _write(int fd, void *buf, size_t count) {\n  _syscall_(SYS_write,fd,(intptr_t)buf,count);\n  // _exit(SYS_write);\n  return count;\n}\n</code></pre>"},{"location":"src/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC%E6%B7%B1%E8%A7%A3/","title":"\u8868\u8fbe\u5f0f\u200b\u6c42\u503c","text":"<p>\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u5339\u914d\u200b\uff0c\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u52a0\u200b\u4e24\u4e2a\u200b\\</p> <p>\u200b\u9996\u5148\u200b</p> <pre><code>\\\\\u200b\u4f1a\u200b\u88ab\u200b\u7f16\u8bd1\u5668\u200b\u89e3\u91ca\u200b\u4e3a\u200b\\\n\u200b\u90a3\u4e48\u200b\u4e00\u4e2a\u200b\\\u200b\u662f\u200b\u4e0d\u7ba1\u200b\u7528\u200b\u7684\u200b \\= -&gt; =\n\u200b\u6240\u4ee5\u200b \\\\\u200b\u7b2c\u4e00\u4e2a\u200b\u659c\u6760\u200b\u8f6c\u4e49\u200b\u7b2c\u4e8c\u4e2a\u200b\u659c\u6760\u200b \\\n\u200b\u7136\u540e\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5339\u914d\u200b\\\\= -&gt; \\=  -&gt; =\n</code></pre> <p>\u200b\u516c\u5f0f\u200b\uff1a1+2+3\u200b\u7684\u200b\u8fd0\u7b97\u200b\u8fc7\u7a0b\u200b \u200b\u5de6\u200b\u7ed3\u5408\u200b\u6027\u200b\uff0c</p> <pre><code>\u200b\u8fc7\u7a0b\u200b\uff081+2\uff09+3\n\u200b\u5206\u89e3\u6210\u200b\u6811\u200b\n     + \n   /   \\\n   +    3\n /  \\\n1    2\n</code></pre> <p>\u200b\u4f18\u5148\u7ea7\u200b</p> <pre><code>int prio(int t){ switch (t) {\ncase TK_OR:\nreturn 7;\ncase TK_AND:\nreturn 6;\ncase TK_EQ:\ncase TK_NEQ:\nreturn 5;\ncase '+':\ncase '-':\nreturn 4;\ncase '*':\ncase '/':\nreturn 3;\ncase TK_DEF:\ncase TK_NEG:\nreturn 2;\ndefault:\nreturn 0;\n}\n}\n</code></pre> <p>\u200b\u4e3a\u4ec0\u4e48\u200b\u662f\u200b\u53cd\u200b\u7740\u200b\u7684\u200b\uff0c\u200b\u8fd9\u8981\u200b\u8ffd\u6eaf\u200b\u8868\u8fbe\u5f0f\u200b\u6c42\u503c\u200b\u8fd0\u7b97\u200b\u8fc7\u7a0b\u200b (\u200b\u901a\u8fc7\u200b\u8fd4\u56de\u503c\u200b\u786e\u5b9a\u200b\u4e3b\u200b\u8fd0\u7b97\u7b26\u200b)</p> <p>\u200b\u5728\u200beval \u200b\u7684\u200b\u8fc7\u7a0b\u200b\u76f8\u5f53\u4e8e\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u8d8a\u9ad8\u200b\uff0c\u200b\u8d8a\u5148\u200b\u88ab\u200b\u4f7f\u7528\u200b\uff0c\u200b\u6240\u5728\u200b\u6811\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u8d8a\u6d45\u200b</p> <p>\u200b\u7b26\u53f7\u200b\u4f18\u5148\u7ea7\u200b\u8d8a\u9ad8\u200b\uff0c\u200b\u8d8a\u540e\u200b\u5728\u200b\u7a0b\u5e8f\u200b\u4e2d\u200b\u8fd0\u7b97\u200b\uff0c\u200b\u6240\u5728\u200b\u6811\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6df1\u5ea6\u200b\u8d8a\u6df1\u200b,</p> <p>\u200b\u4f8b\u5982\u200b</p> <pre><code>   80-5/(2+3)\n     - \n    / \\\n  80   /\n      / \\\n     5   +  (\u200b\u62ec\u53f7\u200b)\n        / \\\n       2   3 \n</code></pre>"},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/","title":"\u9f99\u82af\u200b\u676f\u200b\u4e2a\u4eba\u8d5b\u200b\u5728\u7ebf\u200b\u7f16\u8bd1\u200b\u6559\u7a0b","text":""},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#1","title":"1.\u200b\u5b89\u88c5","text":"<p>\u200b\u9996\u5148\u200b\u4e0b\u8f7d\u200bgit \u200b\u5b89\u88c5\u200b\u65f6\u200b\u4e00\u76f4\u200b\u70b9\u51fb\u200b\u786e\u5b9a\u200b\u5373\u53ef\u200b</p> <p>Git - Downloads (git-scm.com)</p>"},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#2","title":"2.\u200b\u521b\u5efa\u200b\u672c\u5730\u200b\u4ed3\u5e93","text":"<p>\u200b\u5728\u200b\u684c\u9762\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b</p> <p>\u200b\u8fdb\u5165\u200b\u6587\u4ef6\u5939\u200b\u5185\u200b\uff0c\u200b\u53f3\u952e\u200b\u9009\u62e9\u200b open git bash here</p> <p></p> <p>\u200b\u8f93\u5165\u200b\u6307\u4ee4\u200b git init</p> <p></p>"},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#3ssh","title":"3.\u200b\u914d\u7f6e\u200bssh","text":"<p>\u200b\u6253\u5f00\u200b\u9f99\u82af\u200b\u676f\u200b\u5728\u7ebf\u200b\u5b9e\u9a8c\u200b\u5e73\u53f0\u200b\u5b98\u7f51\u200b</p> <p>\u200b\u5728\u200b\u5b98\u7f51\u200b\u7f51\u5740\u200b\u7aef\u53e3\u53f7\u200b+1\u200b\u8bbf\u95ee\u200b</p> <p></p> <p>\u200b\u70b9\u51fb\u200b\u53f3\u4e0a\u89d2\u200b edit profile</p> <p></p> <p>\u200b\u6253\u5f00\u200bssh\u200b\u8be5\u200b\u9875\u9762\u200b\u540e\u200b\uff0c\u200b\u56de\u5230\u200bgit\u200b\u7a97\u53e3\u200b</p> <p>\u200b\u8f93\u5165\u200b\u6307\u4ee4\u200b:</p> <pre><code>ssh-keygen -t rsa -C \u201dyourEmail@example.com\u201d\n</code></pre> <p>\u200b\u8bb0\u5f97\u200b\u6362\u6210\u200b\u81ea\u5df1\u200b\u7684\u200b\u90ae\u7bb1\u200b</p> <p>\u200b\u7136\u540e\u200b\u6253\u5f00\u200b\u672c\u5730\u7528\u6237\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u627e\u5230\u200b.ssh\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u7684\u200bid_rsa.pub\uff0c\u200b\u7528\u200b\u8bb0\u4e8b\u672c\u200b\u6253\u5f00\u200b\uff0c\u200b\u5c06\u200b\u91cc\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u7c98\u8d34\u200b\u81f3\u200b\u521a\u521a\u200b\u6253\u5f00\u200b\u7684\u200b\u7f51\u9875\u200b</p> <p></p> <p></p>"},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#4","title":"4.\u200b\u514b\u9686\u200b\u9879\u76ee","text":"<p>\u200b\u627e\u5230\u200b\u4f60\u200b\u7684\u200b\u9879\u76ee\u200b\u6587\u4ef6\u200b\uff0c\u200b\u9009\u4e2d\u200b\u5e76\u200b\u590d\u5236\u200b</p> <p></p> <p>\u200b\u56de\u5230\u200b\u4f60\u200b\u7684\u200bgit\u200b\u7a97\u53e3\u200b</p> <p>\u200b\u8f93\u5165\u200b: * \u200b\u4e3a\u200b\u4f60\u200b\u81ea\u5df1\u200b\u7684\u200b\u8981\u200b\u8f93\u5165\u200b\u7684\u200b\u5730\u5740\u200b</p> <pre><code>git clone ssh://*************\n</code></pre> <p></p> <p>\u200b\u7136\u540e\u200b\u4f60\u200b\u4f1a\u200b\u53d1\u73b0\u200b \u200b\u8be5\u200b\u6587\u4ef6\u5939\u200b\u91cc\u4f1a\u200b\u591a\u51fa\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u5939\u200b\uff0c\u200b\u8fd9\u200b\u5c31\u662f\u200b\u5b98\u65b9\u200b\u7684\u200b\u9879\u76ee\u200b</p> <p></p> <p>\u200b\u63a5\u4e0b\u6765\u200b\u600e\u4e48\u200b\u505a\u200b\uff1f</p>"},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#5","title":"5.\u200b\u4fee\u6539\u200b\u5e76\u200b\u7f16\u8bd1","text":"<p>\u200b\u50cf\u200b\u5e73\u5e38\u200b\u4e00\u6837\u200b\u628a\u200b\u81ea\u5df1\u200b\u7684\u200bverilog\u200b\u6e90\u7801\u200b\u7c98\u8d34\u200b\u5230\u200b\\thinpad_top.srcs\\sources_1\\new\u200b\u6587\u4ef6\u5939\u200b</p> <p>\u200b\u968f\u540e\u200b\u6253\u5f00\u200b thinpad_top.xpr \u200b\u68c0\u67e5\u4e00\u4e0b\u200b\u91cc\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\uff0c\u200b\u4e32\u53e3\u200b\u6587\u4ef6\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\uff0ccpu\u200b\u7684\u200b\u65f6\u949f\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u7b49\u7b49\u200b</p> <p>\u200b\u7b49\u5f85\u200b\u68c0\u67e5\u200b\u5b8c\u6bd5\u200b\u540e\u200b\uff0c\u200b\u5148\u200b\u4e0d\u8981\u200b\u7740\u6025\u200b\u751f\u6210\u200b\u6bd4\u7279\u6d41\u200b\uff0c\u200b\u8ba9\u200bgitlab\u200b\u5e2e\u200b\u4f60\u200b\u751f\u6210\u200b</p> <p>\u200b\u5728\u200b\u8be5\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u53f3\u952e\u200b\u6253\u5f00\u200bopen git bash here</p> <p>\u200b\u8f93\u5165\u200b\u4e09\u4e2a\u200b\u6307\u4ee4\u200b</p> <pre><code>git add . //\u200b\u6dfb\u52a0\u200b\u6240\u6709\u200b\u6587\u4ef6\u200b\n\ngit commit -m \"v1.0\" //\u200b\u5f15\u53f7\u200b\u8fd9\u91cc\u200b\u662f\u200b\u672c\u6b21\u200b\u63d0\u4ea4\u200b\u7684\u200b\u6ce8\u91ca\u200b\n\ngit push\n</code></pre> <p>\u200b\u8fd9\u65f6\u200b\u56de\u5230\u200b\u5728\u7ebf\u200b\u5e73\u53f0\u200b\u5b98\u7f51\u200b\uff0c\u200b\u70b9\u51fb\u200b\u663e\u793a\u200b\u5728\u7ebf\u200b\u7f16\u8bd1\u200b\u5217\u8868\u200b\uff0c\u200b\u4f60\u200b\u4f1a\u200b\u53d1\u73b0\u200b\u4f60\u200b\u63d0\u4ea4\u200b\u7684\u200b\u4ee3\u7801\u200b\u5df2\u7ecf\u200b\u5728\u200b\u7f16\u8bd1\u200b\u4e2d\u200b\u4e86\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u5b8c\u540e\u200b\u76f4\u63a5\u200b\u53cc\u51fb\u200b\u5373\u53ef\u200b</p> <p></p>"},{"location":"src/%E9%BE%99%E8%8A%AF%E6%9D%AF%E4%B8%AA%E4%BA%BA%E8%B5%9B%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/#6","title":"6.\u200b\u9644\u200b\uff1a","text":"<p>\u200b\u5f80\u5c4a\u200b\u51b3\u8d5b\u200b\u5728\u7ebf\u200b\u7b54\u9898\u200b\u9898\u76ee\u200b\uff1a</p> <p></p>"}]}